<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.Config/index.htm">LanguageExt.Config</a> \ <span class="nav-bar-link" href="ValueToken_.htm">ValueToken</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#ValueToken">ValueToken(TypeDef, object)</a><h3 >FIELDS</h3><a class="nav-link" href="#BinaryOp">BinaryOp</a><a class="nav-link" href="#PostfixOp">PostfixOp</a><a class="nav-link" href="#PrefixOp">PrefixOp</a><a class="nav-link" href="#Type">Type</a><a class="nav-link" href="#Value">Value</a><h3 >METHODS</h3><a class="nav-link" href="#Array">Array(object, TypeDef)</a><a class="nav-link" href="#Cast&lt;T>">Cast&lt;T&gt;()</a><a class="nav-link" href="#GetItem">GetItem(string)</a><a class="nav-link" href="#GetItem&lt;T>">GetItem&lt;T&gt;(string)</a><a class="nav-link" href="#Map">Map(object, TypeDef)</a><a class="nav-link" href="#ToList">ToList()</a><a class="nav-link" href="#ToList&lt;T>">ToList&lt;T&gt;()</a><a class="nav-link" href="#ToMap">ToMap()</a></div><div class="content-panel"><h1 >ValueToken Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ValueToken</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.Config</div></div><h2 >Constructors</h2><div class="member-title"><a name="ValueToken"></a>ValueToken(TypeDef, object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ValueToken__TypeDef__type__object__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">type</div><div class="arg-type"><span class="ident">TypeDef</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">ValueToken</span>(<span class="ident">TypeDef</span> type, <span class="keyword">object</span> value)</div></div><div style="display:none" id="code-ValueToken__TypeDef__type__object__value_"><div class="section_title">SOURCE</div><div class="code">
            Type = type;
            Value = value;
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="BinaryOp"></a>BinaryOp</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="keyword">string</span>, <span class="ident">Func</span>&lt;<span class="ident">ValueToken</span>, <span class="ident">ValueToken</span>, <span class="ident">ValueToken</span>&gt;&gt; <span class="ident">BinaryOp</span></div></div></div><div class="member-title"><a name="PostfixOp"></a>PostfixOp</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="keyword">string</span>, <span class="ident">Func</span>&lt;<span class="ident">ValueToken</span>, <span class="ident">ValueToken</span>&gt;&gt; <span class="ident">PostfixOp</span></div></div></div><div class="member-title"><a name="PrefixOp"></a>PrefixOp</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="keyword">string</span>, <span class="ident">Func</span>&lt;<span class="ident">ValueToken</span>, <span class="ident">ValueToken</span>&gt;&gt; <span class="ident">PrefixOp</span></div></div></div><div class="member-title"><a name="Type"></a>Type</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="ident">TypeDef</span> <span class="ident">Type</span></div></div></div><div class="member-title"><a name="Value"></a>Value</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="keyword">object</span> <span class="ident">Value</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Array"></a>Array(object, TypeDef)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Array__object__value__TypeDef__genericType_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">object</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">genericType</div><div class="arg-type"><span class="ident">TypeDef</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ValueToken</span> <span class="ident">Array</span>(<span class="keyword">object</span> value, <span class="ident">TypeDef</span> genericType)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ValueToken</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Array__object__value__TypeDef__genericType_"><div class="section_title">SOURCE</div><div class="code">
            new ValueToken(TypeDef.Array(() =&gt; genericType), value)</div></div></div><div class="member-title"><a name="Cast&lt;T>"></a>Cast&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Cast_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">T</span> <span class="ident">Cast</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Cast_T_"><div class="section_title">SOURCE</div><div class="code"> (T)Value</div></div></div><div class="member-title"><a name="GetItem"></a>GetItem(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetItem__string__name_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">name</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Option</span>&lt;<span class="ident">ValueToken</span>&gt; <span class="ident">GetItem</span>(<span class="keyword">string</span> name)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">ValueToken</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetItem__string__name_"><div class="section_title">SOURCE</div><div class="code">
            ToList().Filter(nv =&gt; nv.Name == name).Map(nv =&gt; nv.Value).HeadOrNone()</div></div></div><div class="member-title"><a name="GetItem&lt;T>"></a>GetItem&lt;T&gt;(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetItem_T_string__name_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">name</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">GetItem</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">string</span> name)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetItem_T_string__name_"><div class="section_title">SOURCE</div><div class="code">
            ToList().Filter(nv =&gt; nv.Name == name).Map(nv =&gt; (T)nv.Value.Value).HeadOrNone()</div></div></div><div class="member-title"><a name="Map"></a>Map(object, TypeDef)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map__object__value__TypeDef__genericType_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">object</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">genericType</div><div class="arg-type"><span class="ident">TypeDef</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ValueToken</span> <span class="ident">Map</span>(<span class="keyword">object</span> value, <span class="ident">TypeDef</span> genericType)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ValueToken</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Map__object__value__TypeDef__genericType_"><div class="section_title">SOURCE</div><div class="code">
            new ValueToken(TypeDef.Map(() =&gt; genericType), value)</div></div></div><div class="member-title"><a name="ToList"></a>ToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">NamedValueToken</span>&gt; <span class="ident">ToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">NamedValueToken</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToList__"><div class="section_title">SOURCE</div><div class="code">
            (Lst&lt;NamedValueToken&gt;)Value</div></div></div><div class="member-title"><a name="ToList&lt;T>"></a>ToList&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToList_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToList</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToList_T_"><div class="section_title">SOURCE</div><div class="code">
            ToList().Map(nv =&gt; (T)nv.Value.Value)</div></div></div><div class="member-title"><a name="ToMap"></a>ToMap()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToMap__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Map</span>&lt;<span class="keyword">string</span>, <span class="ident">ValueToken</span>&gt; <span class="ident">ToMap</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="keyword">string</span>, <span class="ident">ValueToken</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToMap__"><div class="section_title">SOURCE</div><div class="code">
            if (mapCache == null)
            {
                mapCache = LanguageExt.Map.createRange(
                    ToList().Map(nv =&gt; Tuple(nv.Name, nv.Value))
                );
            }
            return mapCache;
        </div></div></div></div></body></html>