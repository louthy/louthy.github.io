<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="https://louthy.github.io/">API Reference</a> \ <span class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</span></div><div class="nav-panel"><h3 >STRUCTS</h3><a class="nav-link" href="#ProcessId_">ProcessId</a><a class="nav-link" href="#ProcessName_">ProcessName</a><a class="nav-link" href="#Return_T">Return&lt;T&gt;</a><a class="nav-link" href="#SessionId_">SessionId</a><a class="nav-link" href="#SystemName_">SystemName</a><h3 >CLASSES</h3><a class="nav-link" href="#AppProfile_">AppProfile</a><a class="nav-link" href="#AskException_">AskException</a><a class="nav-link" href="#ClusterConfig_">ClusterConfig</a><a class="nav-link" href="#ClusterFactory_">ClusterFactory</a><a class="nav-link" href="#ClusterNode_">ClusterNode</a><a class="nav-link" href="#DeadLetter_">DeadLetter</a><a class="nav-link" href="#Directive_">Directive</a><a class="nav-link" href="#Dispatch_">Dispatch</a><a class="nav-link" href="#Escalate_">Escalate</a><a class="nav-link" href="#InboundRelayMsg_">InboundRelayMsg</a><a class="nav-link" href="#InvalidProcessIdException_">InvalidProcessIdException</a><a class="nav-link" href="#InvalidProcessNameException_">InvalidProcessNameException</a><a class="nav-link" href="#InvalidSystemNameException_">InvalidSystemNameException</a><a class="nav-link" href="#Message_">Message</a><a class="nav-link" href="#MessageDirective_">MessageDirective</a><a class="nav-link" href="#NamedProcessAlreadyExistsException_">NamedProcessAlreadyExistsException</a><a class="nav-link" href="#NoChildProcessesException_">NoChildProcessesException</a><a class="nav-link" href="#NodeOffline_">NodeOffline</a><a class="nav-link" href="#NodeOnline_">NodeOnline</a><a class="nav-link" href="#NoReturn_">NoReturn</a><a class="nav-link" href="#NoRouterWorkersException_">NoRouterWorkersException</a><a class="nav-link" href="#OutboundRelayMsg_">OutboundRelayMsg</a><a class="nav-link" href="#Process_">Process</a><a class="nav-link" href="#ProcessAssert_">ProcessAssert</a><a class="nav-link" href="#ProcessConfig_">ProcessConfig</a><a class="nav-link" href="#ProcessConfigException_">ProcessConfigException</a><a class="nav-link" href="#ProcessException_">ProcessException</a><a class="nav-link" href="#ProcessInboxFullException_">ProcessInboxFullException</a><a class="nav-link" href="#ProcessKillException_">ProcessKillException</a><a class="nav-link" href="#ProcessLogItem_">ProcessLogItem</a><a class="nav-link" href="#ProcessMetaData_">ProcessMetaData</a><a class="nav-link" href="#ProcessSessionExpired_">ProcessSessionExpired</a><a class="nav-link" href="#ProcessSetting_">ProcessSetting</a><a class="nav-link" href="#ProcessSetupException_">ProcessSetupException</a><a class="nav-link" href="#ProxyMsg_">ProxyMsg</a><a class="nav-link" href="#Reg_">Reg</a><a class="nav-link" href="#RelayMsg_">RelayMsg</a><a class="nav-link" href="#RemoteMessageDTO_">RemoteMessageDTO</a><a class="nav-link" href="#Restart_">Restart</a><a class="nav-link" href="#Resume_">Resume</a><a class="nav-link" href="#Return_">Return</a><a class="nav-link" href="#Role_">Role</a><a class="nav-link" href="#Router_">Router</a><a class="nav-link" href="#ShutdownCancellationToken_">ShutdownCancellationToken</a><a class="nav-link" href="#Stop_">Stop</a><a class="nav-link" href="#Strategy_">Strategy</a><a class="nav-link" href="#StrategyContext_">StrategyContext</a><a class="nav-link" href="#StrategyDecision_">StrategyDecision</a><a class="nav-link" href="#StrategyEvent_">StrategyEvent</a><a class="nav-link" href="#StrategyState_">StrategyState</a><a class="nav-link" href="#TerminatedMessage_">TerminatedMessage</a><a class="nav-link" href="#TypeHelper_">TypeHelper</a><a class="nav-link" href="#UserControlMessage_">UserControlMessage</a><a class="nav-link" href="#UserMessage_">UserMessage</a><h3 >INTERFACES</h3><a class="nav-link" href="#ICluster_">ICluster</a><a class="nav-link" href="#IProcess_T">IProcess&lt;T&gt;</a><a class="nav-link" href="#IReturn_">IReturn</a><h3 >ENUMS</h3><a class="nav-link" href="#DirectiveType">DirectiveType</a><a class="nav-link" href="#InboxDirective">InboxDirective</a><a class="nav-link" href="#MessageDirectiveType">MessageDirectiveType</a><a class="nav-link" href="#ProcessFlags">ProcessFlags</a><a class="nav-link" href="#ProcessLogItemType">ProcessLogItemType</a><a class="nav-link" href="#RouterOption">RouterOption</a></div><div class="content-panel"><h1 >LanguageExt Namespace</h1><h2 >STRUCTS</h2><div class="doc-ns-type"><a name="ProcessId_"></a><div class="left"><p ><a class="type-name" href="ProcessId_.htm">ProcessId</a></p><p ><span >Process identifier <br/><br/>  Use this to &#39;tell&#39; a message to a process.  It can be serialised and passed around without concerns for internals. <br/><br/> </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">ProcessId</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">ProcessId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">ProcessId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessName_"></a><div class="left"><p ><a class="type-name" href="ProcessName_.htm">ProcessName</a></p><p ><span >Name of a Process in LanguageExt.Process system. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">ProcessName</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">ProcessName</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">ProcessName</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span></span></div></div></div><div class="doc-ns-type"><a name="Return_T"></a><div class="left"><p ><a class="type-name" href="Return_T.htm">Return&lt;T&gt;</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">Return</span>&lt;<span class="ident">T</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IReturn</span></span></div></div></div><div class="doc-ns-type"><a name="SessionId_"></a><div class="left"><p ><a class="type-name" href="SessionId_.htm">SessionId</a></p><p ><span >Session ID </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">SessionId</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">SessionId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">SessionId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span></span></div></div></div><div class="doc-ns-type"><a name="SystemName_"></a><div class="left"><p ><a class="type-name" href="SystemName_.htm">SystemName</a></p><p ><span >Name of a Process System in LanguageExt.Process system. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">SystemName</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">SystemName</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">SystemName</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span></span></div></div></div><h2 >CLASSES</h2><div class="doc-ns-type"><a name="AppProfile_"></a><div class="left"><p ><a class="type-name" href="AppProfile_.htm">AppProfile</a></p><p ><span >Application profile <br/><br/>  It provides the core settings used when initialising the Process system.  You don&#39;t create it yourself, it is passed to you once the config system has successfully parsed the config files. <br/><br/> </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">AppProfile</span></div></div></div><div class="doc-ns-type"><a name="AskException_"></a><div class="left"><p ><a class="type-name" href="AskException_.htm">AskException</a></p><p ><span >The message can&#39;t be asked </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">AskException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ClusterConfig_"></a><div class="left"><p ><a class="type-name" href="ClusterConfig_.htm">ClusterConfig</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ClusterConfig</span></div></div></div><div class="doc-ns-type"><a name="ClusterFactory_"></a><div class="left"><p ><a class="type-name" href="ClusterFactory_.htm">ClusterFactory</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">ClusterFactory</span></div></div></div><div class="doc-ns-type"><a name="ClusterNode_"></a><div class="left"><p ><a class="type-name" href="ClusterNode_.htm">ClusterNode</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ClusterNode</span></div></div></div><div class="doc-ns-type"><a name="DeadLetter_"></a><div class="left"><p ><a class="type-name" href="DeadLetter_.htm">DeadLetter</a></p><p ><span >Dead letter message </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">DeadLetter</span></div></div></div><div class="doc-ns-type"><a name="Directive_"></a><div class="left"><p ><a class="type-name" href="Directive_.htm">Directive</a></p><p ><span >Instruction to the Process system of what action to take when a Process crashes.  The directive is assigned to a supervisor who apply these actions to the failed Process and optionally other Processes defined by the Strategy. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="ident">Directive</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">Directive</span>&gt;</span></div></div></div><div class="doc-ns-type"><a name="Dispatch_"></a><div class="left"><p ><a class="type-name" href="Dispatch_.htm">Dispatch</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Dispatch</span></div></div></div><div class="doc-ns-type"><a name="Escalate_"></a><div class="left"><p ><a class="type-name" href="Escalate_.htm">Escalate</a></p><p ><span >Directive: Escalate the exception to the parent of the crashing process&#39; supervisor after a crash </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Escalate</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Directive</span></span></div></div></div><div class="doc-ns-type"><a name="InboundRelayMsg_"></a><div class="left"><p ><a class="type-name" href="InboundRelayMsg_.htm">InboundRelayMsg</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">InboundRelayMsg</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">RelayMsg</span></span></div></div></div><div class="doc-ns-type"><a name="InvalidProcessIdException_"></a><div class="left"><p ><a class="type-name" href="InvalidProcessIdException_.htm">InvalidProcessIdException</a></p><p ><span >Invalid process ID </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">InvalidProcessIdException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="InvalidProcessNameException_"></a><div class="left"><p ><a class="type-name" href="InvalidProcessNameException_.htm">InvalidProcessNameException</a></p><p ><span >Invalid process name </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">InvalidProcessNameException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="InvalidSystemNameException_"></a><div class="left"><p ><a class="type-name" href="InvalidSystemNameException_.htm">InvalidSystemNameException</a></p><p ><span >Invalid SystemName </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">InvalidSystemNameException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="Message_"></a><div class="left"><p ><a class="type-name" href="Message_.htm">Message</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="ident">Message</span></div></div></div><div class="doc-ns-type"><a name="MessageDirective_"></a><div class="left"><p ><a class="type-name" href="MessageDirective_.htm">MessageDirective</a></p><p ><span >Message directives This class represents a set of core behaviours for the message that caused a Process to fail. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="ident">MessageDirective</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">MessageDirective</span>&gt;</span></div></div></div><div class="doc-ns-type"><a name="NamedProcessAlreadyExistsException_"></a><div class="left"><p ><a class="type-name" href="NamedProcessAlreadyExistsException_.htm">NamedProcessAlreadyExistsException</a></p><p ><span >Named process already exists </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NamedProcessAlreadyExistsException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="NoChildProcessesException_"></a><div class="left"><p ><a class="type-name" href="NoChildProcessesException_.htm">NoChildProcessesException</a></p><p ><span >NoChildProcessesException </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NoChildProcessesException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="NodeOffline_"></a><div class="left"><p ><a class="type-name" href="NodeOffline_.htm">NodeOffline</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NodeOffline</span></div></div></div><div class="doc-ns-type"><a name="NodeOnline_"></a><div class="left"><p ><a class="type-name" href="NodeOnline_.htm">NodeOnline</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NodeOnline</span></div></div></div><div class="doc-ns-type"><a name="NoReturn_"></a><div class="left"><p ><a class="type-name" href="NoReturn_.htm">NoReturn</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NoReturn</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IReturn</span></span></div></div></div><div class="doc-ns-type"><a name="NoRouterWorkersException_"></a><div class="left"><p ><a class="type-name" href="NoRouterWorkersException_.htm">NoRouterWorkersException</a></p><p ><span >There are no children to route the message to </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">NoRouterWorkersException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="OutboundRelayMsg_"></a><div class="left"><p ><a class="type-name" href="OutboundRelayMsg_.htm">OutboundRelayMsg</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">OutboundRelayMsg</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">RelayMsg</span></span></div></div></div><div class="doc-ns-type"><a name="Process_"></a><div class="left"><p ><a class="type-name" href="Process_.htm">Process</a></p><p ><span >The Language Ext process system uses the actor model as seen in Erlang      processes.  Actors are famed for their ability to support massive concurrency     through messaging and no shared memory. <br/><br/>      https://en.wikipedia.org/wiki/Actor_model <br/><br/>      Each process has an &#39;inbox&#39; and a state.  The state is the property of the     process and no other.  The messages in the inbox are passed to the process     one at a time.  When the process has finished processing a message it returns     its current state.  This state is then passed back in with the next message. <br/><br/>      You can think of it as a fold over a stream of messages. <br/><br/>      A process must finish dealing with a message before another will be given.       Therefore they are blocking.  But they block themselves only. The messages      will build up whilst they are processing. <br/><br/>      Because of this, processes are also in a &#39;supervision hierarchy&#39;.  Essentially     each process can spawn child-processes and the parent process &#39;owns&#39; the child.   <br/><br/>      Processes have a default failure strategy where the process just restarts with     its original state.  The inbox always survives a crash and the failed message      is sent to a &#39;dead letters&#39; process.  You can monitor this. You can also provide     bespoke strategies for different types of failure behaviours (See Strategy folder) <br/><br/>      So post crash the process restarts and continues processing the next message. <br/><br/>      By creating child processes it&#39;s possible for a parent process to &#39;offload&#39;     work.  It could create 10 child processes, and simply route the messages it     gets to its children for a very simple load balancer. Processes are very      lightweight and should not be seen as Threads or Tasks.  You can create      10s of 1000s of them and it will &#39;just work&#39;. <br/><br/>      Scheduled tasks become very simple also.  You can send a process to a message     with a delay.  So a background process that needs to run every 30 minutes      can just send itself a message with a delay on it at the end of its message     handler: <br/><br/>          tellSelf(unit, TimeSpan.FromMinutes(30)); <br/><br/>  </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="ident">Process</span></div></div></div><div class="doc-ns-type"><a name="ProcessAssert_"></a><div class="left"><p ><a class="type-name" href="ProcessAssert_.htm">ProcessAssert</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">ProcessAssert</span></div></div></div><div class="doc-ns-type"><a name="ProcessConfig_"></a><div class="left"><p ><a class="type-name" href="ProcessConfig_.htm">ProcessConfig</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">ProcessConfig</span></div></div></div><div class="doc-ns-type"><a name="ProcessConfigException_"></a><div class="left"><p ><a class="type-name" href="ProcessConfigException_.htm">ProcessConfigException</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessConfigException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessException_"></a><div class="left"><p ><a class="type-name" href="ProcessException_.htm">ProcessException</a></p><p ><span >A process threw an exception in its message loop </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessInboxFullException_"></a><div class="left"><p ><a class="type-name" href="ProcessInboxFullException_.htm">ProcessInboxFullException</a></p><p ><span >Process inbox is full </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessInboxFullException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessKillException_"></a><div class="left"><p ><a class="type-name" href="ProcessKillException_.htm">ProcessKillException</a></p><p ><span >Kill process </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessKillException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessLogItem_"></a><div class="left"><p ><a class="type-name" href="ProcessLogItem_.htm">ProcessLogItem</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessLogItem</span></div></div></div><div class="doc-ns-type"><a name="ProcessMetaData_"></a><div class="left"><p ><a class="type-name" href="ProcessMetaData_.htm">ProcessMetaData</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessMetaData</span></div></div></div><div class="doc-ns-type"><a name="ProcessSessionExpired_"></a><div class="left"><p ><a class="type-name" href="ProcessSessionExpired_.htm">ProcessSessionExpired</a></p><p ><span >Session expired </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessSessionExpired</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProcessSetting_"></a><div class="left"><p ><a class="type-name" href="ProcessSetting_.htm">ProcessSetting</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessSetting</span></div></div></div><div class="doc-ns-type"><a name="ProcessSetupException_"></a><div class="left"><p ><a class="type-name" href="ProcessSetupException_.htm">ProcessSetupException</a></p><p ><span >A process threw an exception in its setup function </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProcessSetupException</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Exception</span></span></div></div></div><div class="doc-ns-type"><a name="ProxyMsg_"></a><div class="left"><p ><a class="type-name" href="ProxyMsg_.htm">ProxyMsg</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ProxyMsg</span></div></div></div><div class="doc-ns-type"><a name="Reg_"></a><div class="left"><p ><a class="type-name" href="Reg_.htm">Reg</a></p><p ><span ><br/><br/>     Build registered Process paths<br/><br/> </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Reg</span></div></div></div><div class="doc-ns-type"><a name="RelayMsg_"></a><div class="left"><p ><a class="type-name" href="RelayMsg_.htm">RelayMsg</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">RelayMsg</span></div></div></div><div class="doc-ns-type"><a name="RemoteMessageDTO_"></a><div class="left"><p ><a class="type-name" href="RemoteMessageDTO_.htm">RemoteMessageDTO</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">RemoteMessageDTO</span></div></div></div><div class="doc-ns-type"><a name="Restart_"></a><div class="left"><p ><a class="type-name" href="Restart_.htm">Restart</a></p><p ><span >Directive: Re-call the setup function to reset the state after a crash. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Restart</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Directive</span></span></div></div></div><div class="doc-ns-type"><a name="Resume_"></a><div class="left"><p ><a class="type-name" href="Resume_.htm">Resume</a></p><p ><span >Directive: Resume with state in tact after a crash </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Resume</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Directive</span></span></div></div></div><div class="doc-ns-type"><a name="Return_"></a><div class="left"><p ><a class="type-name" href="Return_.htm">Return</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Return</span></div></div></div><div class="doc-ns-type"><a name="Role_"></a><div class="left"><p ><a class="type-name" href="Role_.htm">Role</a></p><p ><span >Each node in the cluster has a role name and at all times the cluster-nodes have a list of the alive nodes and their roles (Process.ClusterNodes).  Nodes  are removed from Process.ClusterNodes if they don&#39;t phone in. Process.ClusterNodes  is at most 3 seconds out-of-date and can therefore be used to reliably find out which nodes are available and what roles they do.   <br/><br/>  By using Role.First, Role.Broadcast, Role.LeastBusy, Role.Random and Role.RoundRobin you can build a ProcessId that is resolved at the time of doing a &#39;tell&#39;, &#39;ask&#39;, &#39;subscribe&#39;, etc.  This can allow reliable messaging to Processes in the cluster. <br/><br/> </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Role</span></div></div></div><div class="doc-ns-type"><a name="Router_"></a><div class="left"><p ><a class="type-name" href="Router_.htm">Router</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="ident">Router</span></div></div></div><div class="doc-ns-type"><a name="ShutdownCancellationToken_"></a><div class="left"><p ><a class="type-name" href="ShutdownCancellationToken_.htm">ShutdownCancellationToken</a></p><p ><span >Provides the name of a system that is shutting down, use Cancel to stop the shutdown from completing. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">ShutdownCancellationToken</span></div></div></div><div class="doc-ns-type"><a name="Stop_"></a><div class="left"><p ><a class="type-name" href="Stop_.htm">Stop</a></p><p ><span >Directive: Shutdown after a crash </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Stop</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Directive</span></span></div></div></div><div class="doc-ns-type"><a name="Strategy_"></a><div class="left"><p ><a class="type-name" href="Strategy_.htm">Strategy</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Strategy</span></div></div></div><div class="doc-ns-type"><a name="StrategyContext_"></a><div class="left"><p ><a class="type-name" href="StrategyContext_.htm">StrategyContext</a></p><p ><span >Keeps a running context whilst a strategy computation is running </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">StrategyContext</span></div></div></div><div class="doc-ns-type"><a name="StrategyDecision_"></a><div class="left"><p ><a class="type-name" href="StrategyDecision_.htm">StrategyDecision</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">StrategyDecision</span></div></div></div><div class="doc-ns-type"><a name="StrategyEvent_"></a><div class="left"><p ><a class="type-name" href="StrategyEvent_.htm">StrategyEvent</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">StrategyEvent</span></div></div></div><div class="doc-ns-type"><a name="StrategyState_"></a><div class="left"><p ><a class="type-name" href="StrategyState_.htm">StrategyState</a></p><p ><span >Holds the &#39;global&#39; state for a strategy.  i.e the state that will survive between invocations of the stratgey computation. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">StrategyState</span></div></div></div><div class="doc-ns-type"><a name="TerminatedMessage_"></a><div class="left"><p ><a class="type-name" href="TerminatedMessage_.htm">TerminatedMessage</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">TerminatedMessage</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">UserControlMessage</span></span></div></div></div><div class="doc-ns-type"><a name="TypeHelper_"></a><div class="left"><p ><a class="type-name" href="TypeHelper_.htm">TypeHelper</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">TypeHelper</span></div></div></div><div class="doc-ns-type"><a name="UserControlMessage_"></a><div class="left"><p ><a class="type-name" href="UserControlMessage_.htm">UserControlMessage</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="ident">UserControlMessage</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Message</span></span></div></div></div><div class="doc-ns-type"><a name="UserMessage_"></a><div class="left"><p ><a class="type-name" href="UserMessage_.htm">UserMessage</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">UserMessage</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">UserControlMessage</span></span></div></div></div><h2 >INTERFACES</h2><div class="doc-ns-type"><a name="ICluster_"></a><div class="left"><p ><a class="type-name" href="ICluster_.htm">ICluster</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="ident">ICluster</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IDisposable</span></span></div></div></div><div class="doc-ns-type"><a name="IProcess_T"></a><div class="left"><p ><a class="type-name" href="IProcess_T.htm">IProcess&lt;T&gt;</a></p><p ><span >Represents a process as an object rather than a function </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="ident">IProcess</span>&lt;<span class="keyword">in </span><span class="ident">T</span>&gt;</div></div></div><div class="doc-ns-type"><a name="IReturn_"></a><div class="left"><p ><a class="type-name" href="IReturn_.htm">IReturn</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="ident">IReturn</span></div></div></div><h2 >ENUMS</h2><div class="doc-ns-type"><a name="DirectiveType"></a><div class="left"><p ><a class="type-name" href="DirectiveType.htm">DirectiveType</a></p><p ><span >Directive type &#39;Discriminated union&#39; identifier for the Directive sub-types. </span></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">DirectiveType</span> : <span class="keyword">int</span></div></div></div><div class="doc-ns-type"><a name="InboxDirective"></a><div class="left"><p ><a class="type-name" href="InboxDirective.htm">InboxDirective</a></p><p ></p></div><div class="right"><div class="code"><div class="attr">[Flags]</div><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">InboxDirective</span> : <span class="keyword">int</span></div></div></div><div class="doc-ns-type"><a name="MessageDirectiveType"></a><div class="left"><p ><a class="type-name" href="MessageDirectiveType.htm">MessageDirectiveType</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">MessageDirectiveType</span> : <span class="keyword">int</span></div></div></div><div class="doc-ns-type"><a name="ProcessFlags"></a><div class="left"><p ><a class="type-name" href="ProcessFlags.htm">ProcessFlags</a></p><p ></p></div><div class="right"><div class="code"><div class="attr">[Flags]</div><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">ProcessFlags</span> : <span class="keyword">int</span></div></div></div><div class="doc-ns-type"><a name="ProcessLogItemType"></a><div class="left"><p ><a class="type-name" href="ProcessLogItemType.htm">ProcessLogItemType</a></p><p ></p></div><div class="right"><div class="code"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">ProcessLogItemType</span> : <span class="keyword">int</span></div></div></div><div class="doc-ns-type"><a name="RouterOption"></a><div class="left"><p ><a class="type-name" href="RouterOption.htm">RouterOption</a></p><p ></p></div><div class="right"><div class="code"><div class="attr">[Flags]</div><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">RouterOption</span> : <span class="keyword">int</span></div></div></div></div></body></html>