<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.Trans/index.htm">LanguageExt.Trans</a> \ <span class="nav-bar-link" href="WriterTMonadT_.htm">WriterTMonadT</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#BindT&lt;Out, T, U>">BindT&lt;Out, T, U&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#CountT&lt;Out, T>">CountT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#ExistsT&lt;Out, T>">ExistsT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;Out, T>">FilterT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FoldT&lt;Out, T, V>">FoldT&lt;Out, T, V&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#ForAllT&lt;Out, T>">ForAllT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#IterT&lt;Out, T>">IterT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#LiftT&lt;Out, T>">LiftT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;Out, T>">LiftUnsafeT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#MapT&lt;Out, T, U>">MapT&lt;Out, T, U&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SumT&lt;Out>">SumT&lt;Out&gt;(Writer&lt;Out, Task&lt;int&gt;&gt;)</a></div><div class="content-panel"><h1 >WriterTMonadT Class</h1><p ><span ><br/><br/> </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="ident">WriterTMonadT</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.Trans</div></div><h2 >Methods</h2><div class="member-title"><a name="BindT&lt;Out, T, U>"></a>BindT&lt;Out, T, U&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindT_Out_T_U_Writer_Out_Task&lt;T>_self__Func_T_Task&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">BindT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindT_Out_T_U_Writer_Out_Task&lt;T>_self__Func_T_Task&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="CountT&lt;Out, T>"></a>CountT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountT_Out_T_Writer_Out_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt; <span class="ident">CountT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-CountT_Out_T_Writer_Out_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="ExistsT&lt;Out, T>"></a>ExistsT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ExistsT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt; <span class="ident">ExistsT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ExistsT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="FilterT&lt;Out, T>"></a>FilterT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="FoldT&lt;Out, T, V>"></a>FoldT&lt;Out, T, V&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_Out_T_V_Writer_Out_Task&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt; <span class="ident">FoldT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_Out_T_V_Writer_Out_Task&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="ForAllT&lt;Out, T>"></a>ForAllT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAllT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt; <span class="ident">ForAllT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAllT_Out_T_Writer_Out_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="IterT&lt;Out, T>"></a>IterT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IterT_Out_T_Writer_Out_Task&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt; <span class="ident">IterT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IterT_Out_T_Writer_Out_Task&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="LiftT&lt;Out, T>"></a>LiftT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftT_Out_T_Writer_Out_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-LiftT_Out_T_Writer_Out_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()().Value</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;Out, T>"></a>LiftUnsafeT&lt;Out, T&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_Out_T_Writer_Out_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_Out_T_Writer_Out_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()().Value</div></div></div><div class="member-title"><a name="MapT&lt;Out, T, U>"></a>MapT&lt;Out, T, U&gt;(Writer&lt;Out, Task&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_Out_T_U_Writer_Out_Task&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_Out_T_U_Writer_Out_Task&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="SumT&lt;Out>"></a>SumT&lt;Out&gt;(Writer&lt;Out, Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SumT_Out_Writer_Out_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt; <span class="ident">SumT</span>&lt;<span class="ident">Out</span>&gt;(<span class="keyword">this</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SumT_Out_Writer_Out_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div></div></body></html>