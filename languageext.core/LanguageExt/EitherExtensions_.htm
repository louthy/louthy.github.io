<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="EitherExtensions_.htm">EitherExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Apply&lt;L, R, Res>">Apply&lt;L, R, Res&gt;(Either&lt;L, Func&lt;R, Res&gt;&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#Apply&lt;L, T1, T2, R>">Apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;)</a><a class="nav-link" href="#Apply&lt;L, T1, T2, R>">Apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;, Either&lt;L, T2&gt;)</a><a class="nav-link" href="#BiMap&lt;L, R, LRet, RRet>">BiMap&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#Bind&lt;L, R, LRet, RRet>">Bind&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#Bind&lt;L, R, Ret>">Bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;L, Ret&gt;&gt;)</a><a class="nav-link" href="#Bind&lt;L, R, Ret>">Bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;L, R, R2>">BindAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;L, R, R2>">BindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;L, R, R2>">BindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;L, R, R2>">BindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;L, R, R2>">BindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#Count&lt;L, R>">Count&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#CountAsync&lt;L, R>">CountAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#Exists&lt;L, R>">Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Exists&lt;L, R>">Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#Exists&lt;L, R>">Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#ExistsAsync&lt;L, R>">ExistsAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#ExistsAsync&lt;L, R>">ExistsAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Filter&lt;L, R>">Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Filter&lt;L, R>">Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#Filter&lt;L, R>">Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#Fold&lt;L, R, S>">Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#Fold&lt;L, R, S>">Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#Fold&lt;L, R, S>">Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;L, R, S>">FoldAsync&lt;L, R, S&gt;(Task&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;L, R, S>">FoldAsync&lt;L, R, S&gt;(Either&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#ForAll&lt;L, R>">ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;L, R>">ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;L, R>">ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#ForAllAsync&lt;L, R>">ForAllAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#ForAllAsync&lt;L, R>">ForAllAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Iter&lt;L, R>">Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#Iter&lt;L, R>">Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#Iter&lt;L, R>">Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#IterAsync&lt;L, R>">IterAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#IterAsync&lt;L, R>">IterAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#Join&lt;L, T, U, K, V>">Join&lt;L, T, U, K, V&gt;(Either&lt;L, T&gt;, Either&lt;L, U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Lefts&lt;L, R>">Lefts&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#Map&lt;L, R, Ret>">Map&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;)</a><a class="nav-link" href="#MapAsync&lt;L, R, R2>">MapAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MapAsync&lt;L, R, R2>">MapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MapAsync&lt;L, R, R2>">MapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#MapAsync&lt;L, R, R2>">MapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#MapAsync&lt;L, R, R2>">MapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MapLeft&lt;L, R, Ret>">MapLeft&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#MatchAsync&lt;L, R, R2>">MatchAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)</a><a class="nav-link" href="#MatchObservable&lt;L, R, R2>">MatchObservable&lt;L, R, R2&gt;(Either&lt;L, IObservable&lt;R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)</a><a class="nav-link" href="#MatchObservable&lt;L, R, R2>">MatchObservable&lt;L, R, R2&gt;(IObservable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)</a><a class="nav-link" href="#ParMap&lt;L, T1, T2, R>">ParMap&lt;L, T1, T2, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#ParMap&lt;L, T1, T2, T3, R>">ParMap&lt;L, T1, T2, T3, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#Partition&lt;L, R>">Partition&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#Rights&lt;L, R>">Rights&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#Select&lt;L, TR, UR>">Select&lt;L, TR, UR&gt;(Either&lt;L, TR&gt;, Func&lt;TR, UR&gt;)</a><a class="nav-link" href="#SelectMany&lt;L, T, U, V>">SelectMany&lt;L, T, U, V&gt;(Either&lt;L, T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;L, T, U, V>">SelectMany&lt;L, T, U, V&gt;(Either&lt;L, T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;L, T, U, V>">SelectMany&lt;L, T, U, V&gt;(IEnumerable&lt;T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Sum&lt;L>">Sum&lt;L&gt;(Either&lt;L, int&gt;)</a><a class="nav-link" href="#SumAsync&lt;L>">SumAsync&lt;L&gt;(Task&lt;Either&lt;L, int&gt;&gt;)</a><a class="nav-link" href="#SumAsync&lt;L>">SumAsync&lt;L&gt;(Either&lt;L, Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#Where&lt;L, R>">Where&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a></div><div class="content-panel"><h1 >EitherExtensions Class</h1><p ><span >Extension methods for Either </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">EitherExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="Apply&lt;L, R, Res>"></a>Apply&lt;L, R, Res&gt;(Either&lt;L, Func&lt;R, Res&gt;&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply_L_R_Res_Either_L_Func&lt;R, Res>_self__Either_L_R_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt;</div></div><div class="arg-desc">Either function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Res</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt; self, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function</span></div></div></div><div style="display:none" id="code-Apply_L_R_Res_Either_L_Func&lt;R, Res>_self__Either_L_R_arg_"><div class="section_title">SOURCE</div><div class="code">
            arg.IsBottom || self.IsBottom
                ? Either&lt;L, Res&gt;.Bottom
                : self.IsLeft
                    ? Either&lt;L, Res&gt;.Left(self.LeftValue)
                    : arg.IsLeft
                        ? Either&lt;L, Res&gt;.Left(arg.LeftValue)
                        : self.Select(f =&gt; f(arg.RightValue))</div></div></div><div class="member-title"><a name="Apply&lt;L, T1, T2, R>"></a>Apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_self__Either_L_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">Apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function: an Either function of arity 1</span></div></div></div><div style="display:none" id="code-Apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_self__Either_L_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            arg.IsBottom || self.IsBottom
                ? Either&lt;L, Func&lt;T2, R&gt;&gt;.Bottom
                : self.IsLeft
                    ? Either&lt;L, Func&lt;T2, R&gt;&gt;.Left(self.LeftValue)
                    : arg.IsLeft
                        ? Either&lt;L, Func&lt;T2, R&gt;&gt;.Left(arg.LeftValue)
                        : self.Select(f =&gt; par(f, arg.RightValue))</div></div></div><div class="member-title"><a name="Apply&lt;L, T1, T2, R>"></a>Apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;, Either&lt;L, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_self__Either_L_T1_arg1__Either_L_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Either values to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg1, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional arguments to the optional function</span></div></div></div><div style="display:none" id="code-Apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_self__Either_L_T1_arg1__Either_L_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            arg1.IsBottom || arg2.IsBottom || self.IsBottom
                ? Either&lt;L, R&gt;.Bottom
                : self.IsLeft
                    ? Either&lt;L, R&gt;.Left(self.LeftValue)
                    : arg1.IsLeft
                        ? Either&lt;L, R&gt;.Left(arg1.LeftValue)
                        : arg2.IsLeft
                            ? Either&lt;L, R&gt;.Left(arg2.LeftValue)
                            : self.Select(f =&gt; f(arg1.RightValue, arg2.RightValue))</div></div></div><div class="member-title"><a name="BiMap&lt;L, R, LRet, RRet>"></a>BiMap&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiMap_L_R_LRet_RRet_Either_L_R_self__Func_R_RRet_Right__Func_L_LRet_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div><div class="arg-desc">Right map function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div><div class="arg-desc">Left map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">BiMap</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-BiMap_L_R_LRet_RRet_Either_L_R_self__Func_R_RRet_Right__Func_L_LRet_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;LRet, RRet&gt;.Bottom
                : self.IsRight
                    ? Right&lt;LRet, RRet&gt;(Right(self.RightValue))
                    : Left&lt;LRet, RRet&gt;(Left(self.LeftValue))</div></div></div><div class="member-title"><a name="Bind&lt;L, R, LRet, RRet>"></a>Bind&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_L_R_LRet_RRet_Either_L_R_self__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">this</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Right bind function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Left bind function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-Bind_L_R_LRet_RRet_Either_L_R_self__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;LRet, RRet&gt;.Bottom
                : self.IsLeft
                    ? Left(self.LeftValue)
                    : Right(self.RightValue)</div></div></div><div class="member-title"><a name="Bind&lt;L, R, Ret>"></a>Bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;L, Ret&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_L_R_Ret_Either_L_R_self__Func_R_Either&lt;L, Ret>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-Bind_L_R_Ret_Either_L_R_self__Func_R_Either&lt;L, Ret>_binder_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;L, Ret&gt;.Bottom
                : self.IsRight
                    ? binder(self.RightValue)
                    : Either&lt;L, Ret&gt;.Left(self.LeftValue)</div></div></div><div class="member-title"><a name="Bind&lt;L, R, Ret>"></a>Bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_L_R_Ret_Either_L_R_self__Func_L_Either&lt;Ret, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-Bind_L_R_Ret_Either_L_R_self__Func_L_Either&lt;Ret, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;Ret, R&gt;.Bottom
                : self.IsLeft
                    ? binder(self.LeftValue)
                    : Either&lt;Ret, R&gt;.Right(self.RightValue)</div></div></div><div class="member-title"><a name="BindAsync&lt;L, R, R2>"></a>BindAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? await bind(self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="BindAsync&lt;L, R, R2>"></a>BindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            var val = await self;
            return val.IsRight
                ? await bind(val.RightValue)
                : Left&lt;L, R2&gt;(val.LeftValue);
        </div></div></div><div class="member-title"><a name="BindAsync&lt;L, R, R2>"></a>BindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Either&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Either&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            var val = await self;
            return val.IsRight
                ? bind(val.RightValue)
                : Left&lt;L, R2&gt;(val.LeftValue);
        </div></div></div><div class="member-title"><a name="BindAsync&lt;L, R, R2>"></a>BindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Either&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Either&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? bind(await self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="BindAsync&lt;L, R, R2>"></a>BindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? await bind(await self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="Count&lt;L, R>"></a>Count&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_L_R_Either_L_R_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Counts the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to count</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Count</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if the Either is in a Right state, 0 otherwise.</span></div></div></div><div style="display:none" id="code-Count_L_R_Either_L_R_self_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom || self.IsLeft
                ? 0
                : 1</div></div></div><div class="member-title"><a name="CountAsync&lt;L, R>"></a>CountAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountAsync_L_R_Task_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">CountAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-CountAsync_L_R_Task_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            (await self).Count()</div></div></div><div class="member-title"><a name="Exists&lt;L, R>"></a>Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_L_R_Either_L_R_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-Exists_L_R_Either_L_R_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? false
                : self.IsRight
                    ? pred(self.RightValue)
                    : false</div></div></div><div class="member-title"><a name="Exists&lt;L, R>"></a>Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_L_R_Either_L_R_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-Exists_L_R_Either_L_R_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? false
                : self.IsLeft
                    ? pred(self.LeftValue)
                    : false</div></div></div><div class="member-title"><a name="Exists&lt;L, R>"></a>Exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  False otherwise or if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-Exists_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? false
                : self.IsLeft
                    ? Left(self.LeftValue)
                    : Right(self.RightValue)</div></div></div><div class="member-title"><a name="ExistsAsync&lt;L, R>"></a>ExistsAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ExistsAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">ExistsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ExistsAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            (await self).Exists(pred)</div></div></div><div class="member-title"><a name="ExistsAsync&lt;L, R>"></a>ExistsAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ExistsAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">ExistsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ExistsAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? pred(await self.RightValue)
                : false</div></div></div><div class="member-title"><a name="Filter&lt;L, R>"></a>Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_L_R_Either_L_R_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to filter</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-Filter_L_R_Either_L_R_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? self
                : match(self,
                    Right: t =&gt; pred(t) ? Either&lt;L, R&gt;.Right(t) : Either&lt;L, R&gt;.Bottom,
                    Left: l =&gt; Either&lt;L, R&gt;.Left(l))</div></div></div><div class="member-title"><a name="Filter&lt;L, R>"></a>Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_L_R_Either_L_R_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to filter</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Right state it is returned as-is.   If in the Left state the predicate is applied to the Left value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-Filter_L_R_Either_L_R_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? self
                : match(self,
                    Right: r =&gt; Either&lt;L, R&gt;.Right(r),
                    Left: t =&gt; pred(t) ? Either&lt;L, R&gt;.Left(t) : Either&lt;L, R&gt;.Bottom)</div></div></div><div class="member-title"><a name="Filter&lt;L, R>"></a>Filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to filter</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state then the Left predicate is run against it. If the Either is in the Right state then the Right predicate is run against it. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-Filter_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? self
                : match(self,
                    Right: r =&gt; Right(r) ? Either&lt;L, R&gt;.Right(r) : Either&lt;L, R&gt;.Bottom,
                    Left: l =&gt; Left(l) ? Either&lt;L, R&gt;.Left(l) : Either&lt;L, R&gt;.Bottom)</div></div></div><div class="member-title"><a name="Fold&lt;L, R, S>"></a>Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? state
                : self.IsRight
                    ? folder(state, self.RightValue)
                    : state</div></div></div><div class="member-title"><a name="Fold&lt;L, R, S>"></a>Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_L_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_L_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? state
                : self.IsLeft
                    ? folder(state, self.LeftValue)
                    : state</div></div></div><div class="member-title"><a name="Fold&lt;L, R, S>"></a>Fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Right fold function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Left fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-Fold_L_R_S_Either_L_R_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? state
                : self.IsRight
                    ? self.Fold(state, Right)
                    : self.Fold(state, Left)</div></div></div><div class="member-title"><a name="FoldAsync&lt;L, R, S>"></a>FoldAsync&lt;L, R, S&gt;(Task&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_L_R_S_Task_Either&lt;L, R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_L_R_S_Task_Either&lt;L, R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            (await self).Fold(state, folder)</div></div></div><div class="member-title"><a name="FoldAsync&lt;L, R, S>"></a>FoldAsync&lt;L, R, S&gt;(Either&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_L_R_S_Either_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_L_R_S_Either_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? folder(state, await self.RightValue)
                : state</div></div></div><div class="member-title"><a name="ForAll&lt;L, R>"></a>ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_L_R_Either_L_R_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state.   True if the Either is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-ForAll_L_R_Either_L_R_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? true
                : self.IsRight
                    ? pred(self.RightValue)
                    : true</div></div></div><div class="member-title"><a name="ForAll&lt;L, R>"></a>ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_L_R_Either_L_R_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state.   True if the Either is in a Left state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-ForAll_L_R_Either_L_R_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? true
                : self.IsLeft
                    ? pred(self.LeftValue)
                    : true</div></div></div><div class="member-title"><a name="ForAll&lt;L, R>"></a>ForAll&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  True if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-ForAll_L_R_Either_L_R_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAll(Right) &amp;&amp; self.ForAll(Left)</div></div></div><div class="member-title"><a name="ForAllAsync&lt;L, R>"></a>ForAllAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAllAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">ForAllAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAllAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            (await self).ForAll(pred)</div></div></div><div class="member-title"><a name="ForAllAsync&lt;L, R>"></a>ForAllAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAllAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">ForAllAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAllAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? pred(await self.RightValue)
                : true</div></div></div><div class="member-title"><a name="Iter&lt;L, R>"></a>Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_L_R_Either_L_R_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the Either action is invoked if in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div></div><div style="display:none" id="code-Iter_L_R_Either_L_R_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsBottom)
            {
                return unit;
            }
            if (self.IsRight)
            {
                action(self.RightValue);
            }
            return unit;
        </div></div></div><div class="member-title"><a name="Iter&lt;L, R>"></a>Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_L_R_Either_L_R_self__Action_L_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the Either action is invoked if in the Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; action)</div></div><div style="display:none" id="code-Iter_L_R_Either_L_R_self__Action_L_action_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsBottom)
            {
                return unit;
            }
            if (self.IsLeft)
            {
                action(self.LeftValue);
            }
            return unit;
        </div></div></div><div class="member-title"><a name="Iter&lt;L, R>"></a>Iter&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_L_R_Either_L_R_self__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the Either Appropriate action is invoked depending on the state of the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-Iter_L_R_Either_L_R_self__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(Right);
            self.Iter(Left);
            return unit;
        </div></div></div><div class="member-title"><a name="IterAsync&lt;L, R>"></a>IterAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IterAsync_L_R_Task_Either&lt;L, R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">IterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IterAsync_L_R_Task_Either&lt;L, R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            var val = await self;
            if (val.IsRight) action(val.RightValue);
            return unit;
        </div></div></div><div class="member-title"><a name="IterAsync&lt;L, R>"></a>IterAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IterAsync_L_R_Either_L_Task&lt;R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">IterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IterAsync_L_R_Either_L_Task&lt;R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsRight) action(await self.RightValue);
            return unit;
        </div></div></div><div class="member-title"><a name="Join&lt;L, T, U, K, V>"></a>Join&lt;L, T, U, K, V&gt;(Either&lt;L, T&gt;, Either&lt;L, U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Join_L_T_U_K_V_Either_L_T_self__Either_L_U_inner__Func_T_K_outerKeyMap__Func_U_K_innerKeyMap__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt; <span class="ident">Join</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; self, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt; inner, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt; outerKeyMap, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; innerKeyMap, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Join_L_T_U_K_V_Either_L_T_self__Either_L_U_inner__Func_T_K_outerKeyMap__Func_U_K_innerKeyMap__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsLeft) return Left&lt;L, V&gt;(self.LeftValue);
            if (inner.IsLeft) return Left&lt;L, V&gt;(inner.LeftValue);
            if (self.IsBottom || inner.IsBottom) return Either&lt;L, V&gt;.Bottom;
            return EqualityComparer&lt;K&gt;.Default.Equals(outerKeyMap(self.RightValue), innerKeyMap(inner.RightValue))
                ? Right&lt;L, V&gt;(project(self.RightValue, inner.RightValue))
                : Either&lt;L, V&gt;.Bottom;
        </div></div></div><div class="member-title"><a name="Lefts&lt;L, R>"></a>Lefts&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Lefts_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Left&#39; elements. All the &#39;Left&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt; <span class="ident">Lefts</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-Lefts_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var item in self)
            {
                if (item.IsLeft)
                {
                    yield return item.LeftValue;
                }
            }
        </div></div></div><div class="member-title"><a name="Map&lt;L, R, Ret>"></a>Map&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_L_R_Ret_Either_L_R_self__Func_R_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-Map_L_R_Ret_Either_L_R_self__Func_R_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;L, Ret&gt;.Bottom
                : self.IsRight
                    ? Right&lt;L, Ret&gt;(mapper(self.RightValue))
                    : Left&lt;L, Ret&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="MapAsync&lt;L, R, R2>"></a>MapAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? await map(self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="MapAsync&lt;L, R, R2>"></a>MapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            var val = await self;
            return val.IsRight
                ? await map(val.RightValue)
                : Left&lt;L, R2&gt;(val.LeftValue);
        </div></div></div><div class="member-title"><a name="MapAsync&lt;L, R, R2>"></a>MapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            var val = await self;
            return val.IsRight
                ? map(val.RightValue)
                : Left&lt;L, R2&gt;(val.LeftValue);
        </div></div></div><div class="member-title"><a name="MapAsync&lt;L, R, R2>"></a>MapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? map(await self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="MapAsync&lt;L, R, R2>"></a>MapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? await map(await self.RightValue)
                : Left&lt;L, R2&gt;(self.LeftValue)</div></div></div><div class="member-title"><a name="MapLeft&lt;L, R, Ret>"></a>MapLeft&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapLeft_L_R_Ret_Either_L_R_self__Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">MapLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-MapLeft_L_R_Ret_Either_L_R_self__Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;Ret, R&gt;.Bottom
                : self.IsLeft
                    ? Left&lt;Ret, R&gt;(mapper(self.LeftValue))
                    : Right&lt;Ret, R&gt;(self.RightValue)</div></div></div><div class="member-title"><a name="MatchAsync&lt;L, R, R2>"></a>MatchAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_Right__Func_L_R2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Either and return a promise of a non-null R2. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_Right__Func_L_R2_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? Either&lt;L, R&gt;.CheckNullRightReturn(Right(await self.RightValue))
                : Either&lt;L, R&gt;.CheckNullLeftReturn(Left(self.LeftValue))</div></div></div><div class="member-title"><a name="MatchObservable&lt;L, R, R2>"></a>MatchObservable&lt;L, R, R2&gt;(Either&lt;L, IObservable&lt;R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservable_L_R_R2_Either_L_IObservable&lt;R>_self__Func_R_R2_Right__Func_L_R2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Either and return a stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservable_L_R_R2_Either_L_IObservable&lt;R>_self__Func_R_R2_Right__Func_L_R2_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? self.RightValue.Select(Right).Select(Either&lt;L, R&gt;.CheckNullRightReturn)
                : Observable.Return(Either&lt;L, R&gt;.CheckNullLeftReturn(Left(self.LeftValue)))</div></div></div><div class="member-title"><a name="MatchObservable&lt;L, R, R2>"></a>MatchObservable&lt;L, R, R2&gt;(IObservable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;, Func&lt;L, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservable_L_R_R2_IObservable_Either&lt;L, R>_self__Func_R_R2_Right__Func_L_R2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the IObservable Either and return a stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservable_L_R_R2_IObservable_Either&lt;L, R>_self__Func_R_R2_Right__Func_L_R2_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(either =&gt; match(either, Right, Left))</div></div></div><div class="member-title"><a name="ParMap&lt;L, T1, T2, R>"></a>ParMap&lt;L, T1, T2, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ParMap_L_T1_T2_R_Either_L_T1_self__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ParMap_L_T1_T2_R_Either_L_T1_self__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(curry(func))</div></div></div><div class="member-title"><a name="ParMap&lt;L, T1, T2, T3, R>"></a>ParMap&lt;L, T1, T2, T3, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ParMap_L_T1_T2_T3_R_Either_L_T1_self__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ParMap_L_T1_T2_T3_R_Either_L_T1_self__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(curry(func))</div></div></div><div class="member-title"><a name="Partition&lt;L, R>"></a>Partition&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Partition_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partitions a list of &#39;Either&#39; into two lists. All the &#39;Left&#39; elements are extracted, in order, to the first component of the output.  Similarly the &#39;Right&#39; elements are extracted to the second component of the output. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Partition</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >A tuple containing the an enumerable of L and an enumerable of R</span></div></div></div><div style="display:none" id="code-Partition_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(lefts(self), rights(self))</div></div></div><div class="member-title"><a name="Rights&lt;L, R>"></a>Rights&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Rights_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Right&#39; elements. All the &#39;Right&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Rights</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-Rights_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var item in self)
            {
                if (item.IsRight)
                {
                    yield return item.RightValue;
                }
            }
        </div></div></div><div class="member-title"><a name="Select&lt;L, TR, UR>"></a>Select&lt;L, TR, UR&gt;(Either&lt;L, TR&gt;, Func&lt;TR, UR&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_L_TR_UR_Either_L_TR_self__Func_TR_UR_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">TR</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">TR</span>, <span class="ident">UR</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">UR</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">L</span>, <span class="ident">TR</span>, <span class="ident">UR</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">TR</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">TR</span>, <span class="ident">UR</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">UR</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-Select_L_TR_UR_Either_L_TR_self__Func_TR_UR_map_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom
                ? Either&lt;L, UR&gt;.Bottom
                : match(self,
                    Right: t =&gt; Either&lt;L, UR&gt;.Right(map(t)),
                    Left: l =&gt; Either&lt;L, UR&gt;.Left(l)
                    )</div></div></div><div class="member-title"><a name="SelectMany&lt;L, T, U, V>"></a>SelectMany&lt;L, T, U, V&gt;(Either&lt;L, T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_L_T_U_V_Either_L_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-SelectMany_L_T_U_V_Either_L_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsBottom) return Either&lt;L, V&gt;.Bottom;
            if (self.IsLeft) return Either&lt;L, V&gt;.Left(self.LeftValue);
            var u = bind(self.RightValue);
            if (u.IsBottom) return Either&lt;L, V&gt;.Bottom;
            if (u.IsLeft) return Either&lt;L, V&gt;.Left(u.LeftValue);
            return project(self.RightValue, u.RightValue);
        </div></div></div><div class="member-title"><a name="SelectMany&lt;L, T, U, V>"></a>SelectMany&lt;L, T, U, V&gt;(Either&lt;L, T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_L_T_U_V_Either_L_T_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_L_T_U_V_Either_L_T_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (self.IsBottom) return new V[0];
            if (self.IsLeft) return new V[0];
            return bind(self.RightValue).Map(u =&gt; project(self.RightValue, u));
        </div></div></div><div class="member-title"><a name="SelectMany&lt;L, T, U, V>"></a>SelectMany&lt;L, T, U, V&gt;(IEnumerable&lt;T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_L_T_U_V_IEnumerable_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_L_T_U_V_IEnumerable_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            var ta = self.Take(1).ToArray();
            if (ta.Length == 0) return Either&lt;L, V&gt;.Bottom;
            var u = bind(ta[0]);
            if (u.IsBottom) return Either&lt;L, V&gt;.Bottom;
            if (u.IsLeft) return Either&lt;L, V&gt;.Left(u.LeftValue);
            return project(ta[0], u.RightValue);
        </div></div></div><div class="member-title"><a name="Sum&lt;L>"></a>Sum&lt;L&gt;(Either&lt;L, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_L_Either_L_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum of the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;</div></div><div class="arg-desc">Either to count</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Sum</span>&lt;<span class="ident">L</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >0 if Left, or value of Right</span></div></div></div><div style="display:none" id="code-Sum_L_Either_L_int_self_"><div class="section_title">SOURCE</div><div class="code">
            self.IsBottom || self.IsLeft
                ? 0
                : self.RightValue</div></div></div><div class="member-title"><a name="SumAsync&lt;L>"></a>SumAsync&lt;L&gt;(Task&lt;Either&lt;L, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SumAsync_L_Task_Either&lt;L, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">SumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SumAsync_L_Task_Either&lt;L, int>_self_"><div class="section_title">SOURCE</div><div class="code">
            (await self).Sum()</div></div></div><div class="member-title"><a name="SumAsync&lt;L>"></a>SumAsync&lt;L&gt;(Either&lt;L, Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SumAsync_L_Either_L_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">SumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SumAsync_L_Either_L_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.IsRight
                ? await self.RightValue
                : 0</div></div></div><div class="member-title"><a name="Where&lt;L, R>"></a>Where&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where_L_R_Either_L_R_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to filter</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.  IsLeft will return True, but the value  of Left = default(L)</span></div></div></div><div style="display:none" id="code-Where_L_R_Either_L_R_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            Filter(self, pred)</div></div></div></div></body></html>