<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="RwsExt_.htm">RwsExt</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AsEnumerable&lt;R, W, S, T>">AsEnumerable&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;)</a><a class="nav-link" href="#AsEnumerable&lt;R, W, S, T>">AsEnumerable&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, R, S)</a><a class="nav-link" href="#Bind&lt;R, W, S, T, Ret>">Bind&lt;R, W, S, T, Ret&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Rws&lt;R, W, S, Ret&gt;&gt;)</a><a class="nav-link" href="#Count&lt;R, W, S, T>">Count&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;)</a><a class="nav-link" href="#Exists&lt;R, W, S, T>">Exists&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Filter&lt;R, W, S, T>">Filter&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Fold&lt;R, W, S, T, FState>">Fold&lt;R, W, S, T, FState&gt;(Rws&lt;R, W, S, T&gt;, FState, Func&lt;FState, T, FState&gt;)</a><a class="nav-link" href="#Fold&lt;R, W, S, T>">Fold&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#ForAll&lt;R, W, S, T>">ForAll&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Iter&lt;R, W, S, T>">Iter&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Map&lt;R, W, S, T, Ret>">Map&lt;R, W, S, T, Ret&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Ret&gt;)</a><a class="nav-link" href="#Select&lt;R, W, S, T, U>">Select&lt;R, W, S, T, U&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;R, W, S, T, U, V>">SelectMany&lt;R, W, S, T, U, V&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Rws&lt;R, W, S, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Sum&lt;R, W, S>">Sum&lt;R, W, S&gt;(Rws&lt;R, W, S, int&gt;)</a><a class="nav-link" href="#Where&lt;R, W, S, T>">Where&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)</a></div><div class="content-panel"><h1 >RwsExt Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">RwsExt</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="AsEnumerable&lt;R, W, S, T>"></a>AsEnumerable&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_R_W_S_T_Rws_R_W_S_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_R_W_S_T_Rws_R_W_S_T_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(x =&gt; (new T[1] { x }).AsEnumerable())</div></div></div><div class="member-title"><a name="AsEnumerable&lt;R, W, S, T>"></a>AsEnumerable&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, R, S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_R_W_S_T_Rws_R_W_S_T_self__R__env__S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">R</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">R</span> env, <span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_R_W_S_T_Rws_R_W_S_T_self__R__env__S__state_"><div class="section_title">SOURCE</div><div class="code">
            var res = self.Valid()(Tuple(env,state));
            if (!res.IsBottom)
            {
                yield return self(Tuple(env,res.State)).Value;
            }
        </div></div></div><div class="member-title"><a name="Bind&lt;R, W, S, T, Ret>"></a>Bind&lt;R, W, S, T, Ret&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Rws&lt;R, W, S, Ret&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_R_W_S_T_Ret_Rws_R_W_S_T_self__Func_T_Rws&lt;R, W, S, Ret>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Bind_R_W_S_T_Ret_Rws_R_W_S_T_self__Func_T_Rws&lt;R, W, S, Ret>_binder_"><div class="section_title">SOURCE</div><div class="code">
            if (binder == null) throw new ArgumentNullException(nameof(binder));
            return state =&gt;
            {
                var resT = self.Valid()(state);
                if( resT.IsBottom )
                {
                    return new RwsResult&lt;W, S, Ret&gt;(resT.Output, resT.State, default(Ret), true);
                }
                return binder(resT.Value).Valid()(Tuple(state.Item1,resT.State));
            };
        </div></div></div><div class="member-title"><a name="Count&lt;R, W, S, T>"></a>Count&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_R_W_S_T_Rws_R_W_S_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count_R_W_S_T_Rws_R_W_S_T_self_"><div class="section_title">SOURCE</div><div class="code">
            s =&gt; self.Valid()(s).IsBottom
                ? 0
                : 1</div></div></div><div class="member-title"><a name="Exists&lt;R, W, S, T>"></a>Exists&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">bool</span>&gt; <span class="ident">Exists</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(pred)</div></div></div><div class="member-title"><a name="Filter&lt;R, W, S, T>"></a>Filter&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Filter_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Where(pred)</div></div></div><div class="member-title"><a name="Fold&lt;R, W, S, T, FState>"></a>Fold&lt;R, W, S, T, FState&gt;(Rws&lt;R, W, S, T&gt;, FState, Func&lt;FState, T, FState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_R_W_S_T_FState_Rws_R_W_S_T_self__FState__state__Func_FState_T_FState_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FState</span>, <span class="ident">T</span>, <span class="ident">FState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">FState</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">FState</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">FState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FState</span>, <span class="ident">T</span>, <span class="ident">FState</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">FState</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_R_W_S_T_FState_Rws_R_W_S_T_self__FState__state__Func_FState_T_FState_folder_"><div class="section_title">SOURCE</div><div class="code">
            s =&gt; bmap(self.Valid()(s), x =&gt; folder(state, x))</div></div></div><div class="member-title"><a name="Fold&lt;R, W, S, T>"></a>Fold&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_R_W_S_T_Rws_R_W_S_T_self__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_R_W_S_T_Rws_R_W_S_T_self__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            s =&gt; bmap(self.Valid()(s), x =&gt; folder(s.Item2, x))</div></div></div><div class="member-title"><a name="ForAll&lt;R, W, S, T>"></a>ForAll&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">bool</span>&gt; <span class="ident">ForAll</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(pred)</div></div></div><div class="member-title"><a name="Iter&lt;R, W, S, T>"></a>Iter&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_R_W_S_T_Rws_R_W_S_T_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">Iter</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Iter_R_W_S_T_Rws_R_W_S_T_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            s =&gt; bmap(self.Valid()(s), action)</div></div></div><div class="member-title"><a name="Map&lt;R, W, S, T, Ret>"></a>Map&lt;R, W, S, T, Ret&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_R_W_S_T_Ret_Rws_R_W_S_T_self__Func_T_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_R_W_S_T_Ret_Rws_R_W_S_T_self__Func_T_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(mapper)</div></div></div><div class="member-title"><a name="Select&lt;R, W, S, T, U>"></a>Select&lt;R, W, S, T, U&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_R_W_S_T_U_Rws_R_W_S_T_self__Func_T_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">U</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Select_R_W_S_T_U_Rws_R_W_S_T_self__Func_T_U_map_"><div class="section_title">SOURCE</div><div class="code">
            if (map == null) throw new ArgumentNullException(nameof(map));
            return state =&gt;
            {
                var resT = self.Valid()(state);
                return resT.IsBottom
                    ? new RwsResult&lt;W, S, U&gt;(resT.Output, resT.State, default(U), true)
                    : new RwsResult&lt;W, S, U&gt;(resT.Output, resT.State, map(resT.Value));
            };
        </div></div></div><div class="member-title"><a name="SelectMany&lt;R, W, S, T, U, V>"></a>SelectMany&lt;R, W, S, T, U, V&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, Rws&lt;R, W, S, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_R_W_S_T_U_V_Rws_R_W_S_T_self__Func_T_Rws&lt;R, W, S, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_R_W_S_T_U_V_Rws_R_W_S_T_self__Func_T_Rws&lt;R, W, S, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (bind == null) throw new ArgumentNullException(nameof(bind));
            if (project == null) throw new ArgumentNullException(nameof(project));

            return state =&gt;
            {
                var resT = self.Valid()(state);
                if (resT.IsBottom) return new RwsResult&lt;W, S, V&gt;(resT.Output, resT.State, default(V), true);
                var resU = bind(resT.Value).Valid()(Tuple(state.Item1, resT.State));
                if (resU.IsBottom) return new RwsResult&lt;W, S, V&gt;(resU.Output, resU.State, default(V), true);
                var resV = project(resT.Value, resU.Value);
                return new RwsResult&lt;W, S, V&gt;(resT.Output.Concat(resU.Output), resU.State, resV);
            };
        </div></div></div><div class="member-title"><a name="Sum&lt;R, W, S>"></a>Sum&lt;R, W, S&gt;(Rws&lt;R, W, S, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_R_W_S_Rws_R_W_S_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt; <span class="ident">Sum</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Sum_R_W_S_Rws_R_W_S_int_self_"><div class="section_title">SOURCE</div><div class="code">
            state =&gt; bmap(self.Valid()(state), x =&gt; x)</div></div></div><div class="member-title"><a name="Where&lt;R, W, S, T>"></a>Where&lt;R, W, S, T&gt;(Rws&lt;R, W, S, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">R</span>, <span class="ident">W</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Where_R_W_S_T_Rws_R_W_S_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            state =&gt;
            {
                var res = self.Valid()(state);
                return new RwsResult&lt;W, S, T&gt;(res.Output, res.State, res.Value, !pred(res.Value));
            }</div></div></div></div></body></html>