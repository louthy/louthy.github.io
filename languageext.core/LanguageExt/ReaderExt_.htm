<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="ReaderExt_.htm">ReaderExt</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AsEnumerable&lt;Env, T>">AsEnumerable&lt;Env, T&gt;(Reader&lt;Env, T&gt;)</a><a class="nav-link" href="#AsEnumerable&lt;Env, T>">AsEnumerable&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Env)</a><a class="nav-link" href="#Bind&lt;Env, T, R>">Bind&lt;Env, T, R&gt;(Reader&lt;Env, T&gt;, Func&lt;T, Reader&lt;Env, R&gt;&gt;)</a><a class="nav-link" href="#Count&lt;Env, T>">Count&lt;Env, T&gt;(Reader&lt;Env, T&gt;)</a><a class="nav-link" href="#Exists&lt;Env, T>">Exists&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Filter&lt;Env, T>">Filter&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Fold&lt;Env, S, T>">Fold&lt;Env, S, T&gt;(Reader&lt;Env, T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldT&lt;Env, Out, T, V>">foldT&lt;Env, Out, T, V&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#FoldT&lt;Env, Out, T, V>">FoldT&lt;Env, Out, T, V&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;Env, S, T, V>">foldT&lt;Env, S, T, V&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#FoldT&lt;Env, S, T, V>">FoldT&lt;Env, S, T, V&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#ForAll&lt;Env, T>">ForAll&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Iter&lt;Env, T>">Iter&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#liftT&lt;Env, Out, T>">liftT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)</a><a class="nav-link" href="#LiftT&lt;Env, Out, T>">LiftT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)</a><a class="nav-link" href="#liftT&lt;Env, S, T>">liftT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)</a><a class="nav-link" href="#LiftT&lt;Env, S, T>">LiftT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)</a><a class="nav-link" href="#liftUnsafeT&lt;Env, Out, T>">liftUnsafeT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)</a><a class="nav-link" href="#LiftUnsafeT&lt;Env, Out, T>">LiftUnsafeT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)</a><a class="nav-link" href="#liftUnsafeT&lt;Env, S, T>">liftUnsafeT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)</a><a class="nav-link" href="#LiftUnsafeT&lt;Env, S, T>">LiftUnsafeT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)</a><a class="nav-link" href="#Map&lt;Env, T, R>">Map&lt;Env, T, R&gt;(Reader&lt;Env, T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#Select&lt;E, T, U>">Select&lt;E, T, U&gt;(Reader&lt;E, T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;E, Out, T, U, V>">SelectMany&lt;E, Out, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;E, S, T, U, V>">SelectMany&lt;E, S, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, State&lt;S, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;E, T, U, V>">SelectMany&lt;E, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, Reader&lt;E, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Sum&lt;Env>">Sum&lt;Env&gt;(Reader&lt;Env, int&gt;)</a><a class="nav-link" href="#Where&lt;Env, T>">Where&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)</a></div><div class="content-panel"><h1 >ReaderExt Class</h1><p ><span >Reader monad extensions </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">ReaderExt</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="AsEnumerable&lt;Env, T>"></a>AsEnumerable&lt;Env, T&gt;(Reader&lt;Env, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_Env_T_Reader_Env_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_Env_T_Reader_Env_T_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; (new T[1] { x }).AsEnumerable())</div></div></div><div class="member-title"><a name="AsEnumerable&lt;Env, T>"></a>AsEnumerable&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_Env_T_Reader_Env_T_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_Env_T_Reader_Env_T_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            var res = self.Valid()(env);
            if (!res.IsBottom)
            {
                yield return res.Value;
            }
        </div></div></div><div class="member-title"><a name="Bind&lt;Env, T, R>"></a>Bind&lt;Env, T, R&gt;(Reader&lt;Env, T&gt;, Func&lt;T, Reader&lt;Env, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_Env_T_R_Reader_Env_T_self__Func_T_Reader&lt;Env, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Bind_Env_T_R_Reader_Env_T_self__Func_T_Reader&lt;Env, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt;
            {
                var t = self.Valid()(env);
                if (t.IsBottom) return Bottom&lt;R&gt;();
                return binder(t.Value).Valid()(env);
            }</div></div></div><div class="member-title"><a name="Count&lt;Env, T>"></a>Count&lt;Env, T&gt;(Reader&lt;Env, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_Env_T_Reader_Env_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count_Env_T_Reader_Env_T_self_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; 1)</div></div></div><div class="member-title"><a name="Exists&lt;Env, T>"></a>Exists&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_Env_T_Reader_Env_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt; <span class="ident">Exists</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_Env_T_Reader_Env_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; pred(x))</div></div></div><div class="member-title"><a name="Filter&lt;Env, T>"></a>Filter&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_Env_T_Reader_Env_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Filter_Env_T_Reader_Env_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Where(pred)</div></div></div><div class="member-title"><a name="Fold&lt;Env, S, T>"></a>Fold&lt;Env, S, T&gt;(Reader&lt;Env, T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_Env_S_T_Reader_Env_T_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_Env_S_T_Reader_Env_T_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; folder(state, x))</div></div></div><div class="member-title"><a name="foldT&lt;Env, Out, T, V>"></a>foldT&lt;Env, Out, T, V&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_Env_Out_T_V_Reader_Env_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">foldT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_Env_Out_T_V_Reader_Env_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldT(state, fold)</div></div></div><div class="member-title"><a name="FoldT&lt;Env, Out, T, V>"></a>FoldT&lt;Env, Out, T, V&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_Env_Out_T_V_Reader_Env_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">FoldT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_Env_Out_T_V_Reader_Env_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code">
            return (Env env) =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return Bottom&lt;Writer&lt;Out, V&gt;&gt;();
                return Return(inner.Value.Fold(state, fold));
            };
        </div></div></div><div class="member-title"><a name="foldT&lt;Env, S, T, V>"></a>foldT&lt;Env, S, T, V&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_Env_S_T_V_Reader_Env_State&lt;S, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">foldT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_Env_S_T_V_Reader_Env_State&lt;S, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldT(state, fold)</div></div></div><div class="member-title"><a name="FoldT&lt;Env, S, T, V>"></a>FoldT&lt;Env, S, T, V&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_Env_S_T_V_Reader_Env_State&lt;S, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">FoldT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_Env_S_T_V_Reader_Env_State&lt;S, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code">
            return (Env env) =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return Bottom&lt;State&lt;S, V&gt;&gt;();
                return Return(inner.Value.Fold(state, fold));
            };
        </div></div></div><div class="member-title"><a name="ForAll&lt;Env, T>"></a>ForAll&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_Env_T_Reader_Env_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt; <span class="ident">ForAll</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_Env_T_Reader_Env_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; pred(x))</div></div></div><div class="member-title"><a name="Iter&lt;Env, T>"></a>Iter&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_Env_T_Reader_Env_T_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Unit</span>&gt; <span class="ident">Iter</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Iter_Env_T_Reader_Env_T_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; action(x))</div></div></div><div class="member-title"><a name="liftT&lt;Env, Out, T>"></a>liftT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            self.LiftT(env)</div></div></div><div class="member-title"><a name="LiftT&lt;Env, Out, T>"></a>LiftT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">LiftT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-LiftT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            return () =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return WriterResult.Bottom&lt;Out, T&gt;();
                var res = inner.Value();
                if (res.IsBottom) return WriterResult.Bottom&lt;Out, T&gt;();
                return WriterResult.Return(res.Value, res.Output);
            };
        </div></div></div><div class="member-title"><a name="liftT&lt;Env, S, T>"></a>liftT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            self.LiftT(env)</div></div></div><div class="member-title"><a name="LiftT&lt;Env, S, T>"></a>LiftT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">LiftT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-LiftT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            return state =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return StateResult.Bottom&lt;S, T&gt;(state);
                var res = inner.Value(state);
                if (res.IsBottom) return StateResult.Bottom&lt;S, T&gt;(state);
                return StateResult.Return(res.State, res.Value);
            };
        </div></div></div><div class="member-title"><a name="liftUnsafeT&lt;Env, Out, T>"></a>liftUnsafeT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftUnsafeT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">liftUnsafeT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-liftUnsafeT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            self.LiftUnsafeT(env)</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;Env, Out, T>"></a>LiftUnsafeT&lt;Env, Out, T&gt;(Reader&lt;Env, Writer&lt;Out, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_Env_Out_T_Reader_Env_Writer&lt;Out, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            return () =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return WriterResult.Bottom&lt;Out, T&gt;();
                var res = inner.Value();
                if (res.IsBottom) return WriterResult.Bottom&lt;Out, T&gt;();
                return WriterResult.Return(res.Value, res.Output);
            };
        </div></div></div><div class="member-title"><a name="liftUnsafeT&lt;Env, S, T>"></a>liftUnsafeT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftUnsafeT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">liftUnsafeT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-liftUnsafeT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            self.LiftUnsafeT(env)</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;Env, S, T>"></a>LiftUnsafeT&lt;Env, S, T&gt;(Reader&lt;Env, State&lt;S, T&gt;&gt;, Env)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">env</div><div class="arg-type"><span class="ident">Env</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Env</span> env)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_Env_S_T_Reader_Env_State&lt;S, T>_self__Env__env_"><div class="section_title">SOURCE</div><div class="code">
            return state =&gt;
            {
                var inner = self.Valid()(env);
                if (inner.IsBottom) return StateResult.Bottom&lt;S, T&gt;(state);
                var res = inner.Value(state);
                if (res.IsBottom) return StateResult.Bottom&lt;S, T&gt;(state);
                return StateResult.Return(res.State, res.Value);
            };
        </div></div></div><div class="member-title"><a name="Map&lt;Env, T, R>"></a>Map&lt;Env, T, R&gt;(Reader&lt;Env, T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_Env_T_R_Reader_Env_T_self__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_Env_T_R_Reader_Env_T_self__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), mapper)</div></div></div><div class="member-title"><a name="Select&lt;E, T, U>"></a>Select&lt;E, T, U&gt;(Reader&lt;E, T&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_E_T_U_Reader_E_T_self__Func_T_U_select_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Select </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">select</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; select)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">U</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Select_E_T_U_Reader_E_T_self__Func_T_U_select_"><div class="section_title">SOURCE</div><div class="code">
            if (select == null) throw new ArgumentNullException(nameof(select));
            return (E env) =&gt;
            {
                var resT = self.Valid()(env);
                return resT.IsBottom
                    ? Bottom&lt;U&gt;()
                    : Return&lt;U&gt;(select(resT.Value));
            };
        </div></div></div><div class="member-title"><a name="SelectMany&lt;E, Out, T, U, V>"></a>SelectMany&lt;E, Out, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_E_Out_T_U_V_Reader_E_T_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Select Many </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">E</span>, <span class="ident">Out</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_E_Out_T_U_V_Reader_E_T_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (bind == null) throw new ArgumentNullException(nameof(bind));
            if (project == null) throw new ArgumentNullException(nameof(project));
            return (E env) =&gt;
            {
                var resT = self.Valid()(env);
                if (resT.IsBottom) return Bottom&lt;Writer&lt;Out, V&gt;&gt;();
                return Return&lt;Writer&lt;Out, V&gt;&gt;(() =&gt;
                {
                    var resU = bind(resT.Value).Valid()();
                    if (resU.IsBottom) return WriterResult.Bottom&lt;Out, V&gt;(resU.Output);
                    return WriterResult.Return(project(resT.Value, resU.Value), resU.Output);
                });
            };
        </div></div></div><div class="member-title"><a name="SelectMany&lt;E, S, T, U, V>"></a>SelectMany&lt;E, S, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, State&lt;S, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_E_S_T_U_V_Reader_E_T_self__Func_T_State&lt;S, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Select Many </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">E</span>, <span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_E_S_T_U_V_Reader_E_T_self__Func_T_State&lt;S, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (bind == null) throw new ArgumentNullException(nameof(bind));
            if (project == null) throw new ArgumentNullException(nameof(project));
            return (E env) =&gt;
            {
                var resT = self.Valid()(env);
                if (resT.IsBottom) return Bottom&lt;State&lt;S, V&gt;&gt;();
                return Return&lt;State&lt;S, V&gt;&gt;(state =&gt;
                {
                    var resU = bind(resT.Value).Valid()(state);
                    if (resU.IsBottom) return StateResult.Bottom&lt;S, V&gt;(state);
                    return StateResult.Return(resU.State, project(resT.Value, resU.Value));
                });
            };
        </div></div></div><div class="member-title"><a name="SelectMany&lt;E, T, U, V>"></a>SelectMany&lt;E, T, U, V&gt;(Reader&lt;E, T&gt;, Func&lt;T, Reader&lt;E, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_E_T_U_V_Reader_E_T_self__Func_T_Reader&lt;E, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Select Many </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">E</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_E_T_U_V_Reader_E_T_self__Func_T_Reader&lt;E, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            if (bind == null) throw new ArgumentNullException(nameof(bind));
            if (project == null) throw new ArgumentNullException(nameof(project));
            return (E env) =&gt;
            {
                var resT = self.Valid()(env);
                if (resT.IsBottom) return Bottom&lt;V&gt;();
                var resU = bind(resT.Value).Valid()(env);
                if (resU.IsBottom) return Bottom&lt;V&gt;();
                return Return(project(resT.Value, resU.Value));
            };
        </div></div></div><div class="member-title"><a name="Sum&lt;Env>"></a>Sum&lt;Env&gt;(Reader&lt;Env, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_Env_Reader_Env_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; <span class="ident">Sum</span>&lt;<span class="ident">Env</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Sum_Env_Reader_Env_int_self_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; bmap(self.Valid()(env), x =&gt; x)</div></div></div><div class="member-title"><a name="Where&lt;Env, T>"></a>Where&lt;Env, T&gt;(Reader&lt;Env, T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where_Env_T_Reader_Env_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Where_Env_T_Reader_Env_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return env =&gt;
            {
                var val = self.Valid()(env);
                return val.IsBottom
                    ? Bottom&lt;T&gt;()
                    : pred(val.Value) 
                        ? Return(val.Value)
                        : Bottom&lt;T&gt;();
            };
        </div></div></div></div></body></html>