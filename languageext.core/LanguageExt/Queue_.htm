<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Queue_.htm">Queue</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#choose&lt;T>">choose&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#choose&lt;T>">choose&lt;T&gt;(Que&lt;T&gt;, Func&lt;int, T, Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#clear&lt;T>">clear&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#collect&lt;T, R>">collect&lt;T, R&gt;(Que&lt;T&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;)</a><a class="nav-link" href="#deq&lt;T>">deq&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#deqUnsafe&lt;T>">deqUnsafe&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#distinct&lt;T>">distinct&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#distinct&lt;T>">distinct&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, bool&gt;)</a><a class="nav-link" href="#enq&lt;T>">enq&lt;T&gt;(Que&lt;T&gt;, T)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#find&lt;T>">find&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldBack&lt;S, T>">foldBack&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(Que&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(Que&lt;T&gt;, Action&lt;int, T&gt;)</a><a class="nav-link" href="#length&lt;T>">length&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(Que&lt;T&gt;, Func&lt;int, T, R&gt;)</a><a class="nav-link" href="#peek&lt;T>">peek&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#peekUnsafe&lt;T>">peekUnsafe&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#reduce&lt;T>">reduce&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, T&gt;)</a><a class="nav-link" href="#reduceBack&lt;T>">reduceBack&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, T&gt;)</a><a class="nav-link" href="#rev&lt;T>">rev&lt;T&gt;(Que&lt;T&gt;)</a><a class="nav-link" href="#scan&lt;S, T>">scan&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#scanBack&lt;S, T>">scanBack&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#take&lt;T>">take&lt;T&gt;(Que&lt;T&gt;, int)</a><a class="nav-link" href="#takeWhile&lt;T>">takeWhile&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#takeWhile&lt;T>">takeWhile&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, int, bool&gt;)</a><a class="nav-link" href="#zip&lt;T, U, V>">zip&lt;T, U, V&gt;(Que&lt;T&gt;, IEnumerable&lt;U&gt;, Func&lt;T, U, V&gt;)</a></div><div class="content-panel"><h1 >Queue Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Queue</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(IEnumerable&lt;T&gt;, IEnumerable&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">lhs</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rhs</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="choose&lt;T>"></a>choose&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, Option&lt;T&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">selector</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">choose</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">selector</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="choose&lt;T>"></a>choose&lt;T&gt;(Que&lt;T&gt;, Func&lt;int, T, Option&lt;T&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">selector</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">choose</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">selector</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="clear&lt;T>"></a>clear&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">clear</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="collect&lt;T, R>"></a>collect&lt;T, R&gt;(Que&lt;T&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">collect</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="deq&lt;T>"></a>deq&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">deq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="deqUnsafe&lt;T>"></a>deqUnsafe&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">T</span>&gt; <span class="ident">deqUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="distinct&lt;T>"></a>distinct&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">distinct</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="distinct&lt;T>"></a>distinct&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">compare</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">distinct</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">compare</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="enq&lt;T>"></a>enq&lt;T&gt;(Que&lt;T&gt;, T)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">enq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">T</span> <span class="ident">value</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">predicate</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">predicate</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="find&lt;T>"></a>find&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">find</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Folds each value of the QueT into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Queue to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal">Folded state</div></div></div></div><div class="member-title"><a name="foldBack&lt;S, T>"></a>foldBack&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Folds each value of the QueT into an S, but in reverse order. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Queue to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">foldBack</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal">Folded state</div></div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(Que&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">action</span>)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(Que&lt;T&gt;, Action&lt;int, T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Action</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>&gt; <span class="ident">action</span>)</div></div></div><div class="member-title"><a name="length&lt;T>"></a>length&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">length</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(Que&lt;T&gt;, Func&lt;int, T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">int</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="peek&lt;T>"></a>peek&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">peek</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="peekUnsafe&lt;T>"></a>peekUnsafe&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">peekUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="reduce&lt;T>"></a>reduce&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">reducer</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">reduce</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; <span class="ident">reducer</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="reduceBack&lt;T>"></a>reduceBack&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, T, T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">reducer</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">reduceBack</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; <span class="ident">reducer</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="rev&lt;T>"></a>rev&lt;T&gt;(Que&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rev</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="scan&lt;S, T>"></a>scan&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">S</span>&gt; <span class="ident">scan</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="scanBack&lt;S, T>"></a>scanBack&lt;S, T&gt;(Que&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">S</span>&gt; <span class="ident">scanBack</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="take&lt;T>"></a>take&lt;T&gt;(Que&lt;T&gt;, int)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="ident">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">take</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">int</span> <span class="ident">count</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="takeWhile&lt;T>"></a>takeWhile&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">takeWhile</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="takeWhile&lt;T>"></a>takeWhile&lt;T&gt;(Que&lt;T&gt;, Func&lt;T, int, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">int</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">takeWhile</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">int</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="zip&lt;T, U, V>"></a>zip&lt;T, U, V&gt;(Que&lt;T&gt;, IEnumerable&lt;U&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">queue</div><div class="arg-type"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">zipper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt; <span class="ident">zip</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">queue</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt; <span class="ident">other</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">zipper</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div></div></body></html>