<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="NewType_.htm">NewType</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Construct">Construct(Type, object)</a><a class="nav-link" href="#Construct&lt;NewTypeT, T>">Construct&lt;NewTypeT, T&gt;(T)</a></div><div class="content-panel"><h1 >NewType Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">NewType</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="Construct"></a>Construct(Type, object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Construct__Type__newTypeT__object__arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">newTypeT</div><div class="arg-type"><span class="ident">Type</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">object</span> <span class="ident">Construct</span>(<span class="ident">Type</span> newTypeT, <span class="keyword">object</span> arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">object</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Construct__Type__newTypeT__object__arg_"><div class="section_title">SOURCE</div><div class="code">
            constructors.Find(newTypeT.FullName).IfNone(() =&gt; GetCtor(newTypeT)).Invoke(new object[] { arg })</div></div></div><div class="member-title"><a name="Construct&lt;NewTypeT, T>"></a>Construct&lt;NewTypeT, T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Construct_NewTypeT_T_T__arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewTypeT</span> <span class="ident">Construct</span>&lt;<span class="ident">NewTypeT</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewTypeT</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">NewTypeT</span> : <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div><div style="display:none" id="code-Construct_NewTypeT_T_T__arg_"><div class="section_title">SOURCE</div><div class="code">
            (NewTypeT)constructors.Find(typeof(NewTypeT).FullName).IfNone(() =&gt; GetCtor(typeof(NewTypeT))).Invoke(new object[] { arg })</div></div></div></div></body></html>