<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="OptionUnsafeExtensions_.htm">OptionUnsafeExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Apply&lt;T, R>">Apply&lt;T, R&gt;(OptionUnsafe&lt;Func&lt;T, R&gt;&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#Apply&lt;T1, T2, R>">Apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;)</a><a class="nav-link" href="#Apply&lt;T1, T2, R>">Apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;, OptionUnsafe&lt;T2&gt;)</a><a class="nav-link" href="#Bind&lt;T, R>">Bind&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;T, R>">BindAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;T, R>">BindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;T, R>">BindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;T, R>">BindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#BindAsync&lt;T, R>">BindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#Count&lt;T>">Count&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#CountAsync&lt;T>">CountAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#Exists&lt;T>">Exists&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ExistsAsync&lt;T>">ExistsAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ExistsAsync&lt;T>">ExistsAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Filter&lt;T>">Filter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Fold&lt;S, T>">Fold&lt;S, T&gt;(OptionUnsafe&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;T, S>">FoldAsync&lt;T, S&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;T, S>">FoldAsync&lt;T, S&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#ForAll&lt;T>">ForAll&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAllAsync&lt;T>">ForAllAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAllAsync&lt;T>">ForAllAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Iter&lt;T>">Iter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#IterAsync&lt;T>">IterAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#IterAsync&lt;T>">IterAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Join&lt;L, T, U, K, V>">Join&lt;L, T, U, K, V&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Map&lt;T, R>">Map&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#MapAsync&lt;T, R>">MapAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MapAsync&lt;T, R>">MapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MapAsync&lt;T, R>">MapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#MapAsync&lt;T, R>">MapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#MapAsync&lt;T, R>">MapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(OptionUnsafe&lt;IObservable&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(IObservable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#ParMap&lt;T1, T2, R>">ParMap&lt;T1, T2, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#ParMap&lt;T1, T2, T3, R>">ParMap&lt;T1, T2, T3, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#Select&lt;T, U>">Select&lt;T, U&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(IEnumerable&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Somes&lt;T>">Somes&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#Sum">Sum(OptionUnsafe&lt;int&gt;)</a><a class="nav-link" href="#SumAsync">SumAsync(Task&lt;OptionUnsafe&lt;int&gt;&gt;)</a><a class="nav-link" href="#SumAsync">SumAsync(OptionUnsafe&lt;Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#Where&lt;T>">Where&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a></div><div class="content-panel"><h1 >OptionUnsafeExtensions Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">OptionUnsafeExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="Apply&lt;T, R>"></a>Apply&lt;T, R&gt;(OptionUnsafe&lt;Func&lt;T, R&gt;&gt;, OptionUnsafe&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply an Optional value to an Optional function </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">opt</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">arg</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">Returns the result of applying the optional argument to the optional function</div></div></div></div><div class="member-title"><a name="Apply&lt;T1, T2, R>"></a>Apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply an Optional value to an Optional function of arity 2 </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">Apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">opt</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">arg</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal">Returns the result of applying the optional argument to the optional function: an optonal function of arity 1</div></div></div></div><div class="member-title"><a name="Apply&lt;T1, T2, R>"></a>Apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;, OptionUnsafe&lt;T2&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply Optional values to an Optional function of arity 2 </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">opt</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">arg1</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T2</span>&gt; <span class="ident">arg2</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">Returns the result of applying the optional arguments to the optional function</div></div></div></div><div class="member-title"><a name="Bind&lt;T, R>"></a>Bind&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">binder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindAsync&lt;T, R>"></a>BindAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindAsync&lt;T, R>"></a>BindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindAsync&lt;T, R>"></a>BindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindAsync&lt;T, R>"></a>BindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindAsync&lt;T, R>"></a>BindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">BindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Count&lt;T>"></a>Count&lt;T&gt;(OptionUnsafe&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Count</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="CountAsync&lt;T>"></a>CountAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">int</span>&gt; <span class="ident">CountAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Exists&lt;T>"></a>Exists&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ExistsAsync&lt;T>"></a>ExistsAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt; <span class="ident">ExistsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ExistsAsync&lt;T>"></a>ExistsAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt; <span class="ident">ExistsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Filter&lt;T>"></a>Filter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Fold&lt;S, T>"></a>Fold&lt;S, T&gt;(OptionUnsafe&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="FoldAsync&lt;T, S>"></a>FoldAsync&lt;T, S&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="FoldAsync&lt;T, S>"></a>FoldAsync&lt;T, S&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAll&lt;T>"></a>ForAll&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAllAsync&lt;T>"></a>ForAllAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt; <span class="ident">ForAllAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAllAsync&lt;T>"></a>ForAllAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt; <span class="ident">ForAllAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">bool</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Iter&lt;T>"></a>Iter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">action</span>)</div></div></div><div class="member-title"><a name="IterAsync&lt;T>"></a>IterAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">IterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">action</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="IterAsync&lt;T>"></a>IterAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">IterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">action</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Join&lt;L, T, U, K, V>"></a>Join&lt;L, T, U, K, V&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt; <span class="ident">Join</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt; <span class="ident">inner</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt; <span class="ident">outerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; <span class="ident">innerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Map&lt;T, R>"></a>Map&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">mapper</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MapAsync&lt;T, R>"></a>MapAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MapAsync&lt;T, R>"></a>MapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MapAsync&lt;T, R>"></a>MapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MapAsync&lt;T, R>"></a>MapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MapAsync&lt;T, R>"></a>MapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Match the two states of the OptionUnsafe&lt;Task&lt;T&gt;&gt;      If Some then the result of the Task is passed to Some and returned as a Task R.     If None then the result of None() is returned as a Task R      </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Some</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; <span class="ident">None</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">A promise to return an R</div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(OptionUnsafe&lt;IObservable&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Match the two states of the OptionUnsafe&lt;IObservable&lt;T&gt;&gt;      If Some then the observable stream is mapped with Some (until the subscription ends)     If None the a single value observable is returned with the None result in  </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Some</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; <span class="ident">None</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">A stream of Rs</div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(IObservable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Match the two states of the IObservable&lt;OptionUnsafe&lt;T&gt;&gt;      Matches a stream of options  </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Some</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; <span class="ident">None</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">A stream of Rs</div></div></div></div><div class="member-title"><a name="ParMap&lt;T1, T2, R>"></a>ParMap&lt;T1, T2, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Partial application map </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div>TODO: Better documentation of this function</div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">opt</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; <span class="ident">func</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ParMap&lt;T1, T2, T3, R>"></a>ParMap&lt;T1, T2, T3, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Partial application map </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div>TODO: Better documentation of this function</div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">opt</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; <span class="ident">func</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Select&lt;T, U>"></a>Select&lt;T, U&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, U&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(IEnumerable&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Somes&lt;T>"></a>Somes&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Extracts from a list of &#39;Option&#39; all the &#39;Some&#39; elements. All the &#39;Some&#39; elements are extracted in order. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Somes</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Sum"></a>Sum(OptionUnsafe&lt;int&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Sum</span>(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">int</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="SumAsync"></a>SumAsync(Task&lt;OptionUnsafe&lt;int&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">int</span>&gt; <span class="ident">SumAsync</span>(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">int</span>&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SumAsync"></a>SumAsync(OptionUnsafe&lt;Task&lt;int&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">int</span>&gt; <span class="ident">SumAsync</span>(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Where&lt;T>"></a>Where&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div></div></body></html>