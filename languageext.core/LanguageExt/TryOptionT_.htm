<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="https://louthy.github.io/">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="TryOptionT_.htm">TryOptionT</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#bindT&lt;T, Env, Out, State, U>">bindT&lt;T, Env, Out, State, U&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, Env, U>">bindT&lt;T, Env, U&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, K, U>">bindT&lt;T, K, U&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, L, U>">bindT&lt;T, L, U&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, L, U>">bindT&lt;T, L, U&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, Out, U>">bindT&lt;T, Out, U&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, State, U>">bindT&lt;T, State, U&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, State&lt;State, U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, Lst&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, TryOption&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, Try&lt;U&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;T, U>">bindT&lt;T, U&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, Env, Out, State>">countT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, Env>">countT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, K>">countT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, L>">countT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, L>">countT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, Out>">countT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T, State>">countT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#countT&lt;T>">countT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#existsT&lt;T, Env, Out, State>">existsT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, Env>">existsT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, K>">existsT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, L>">existsT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, L>">existsT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, Out>">existsT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T, State>">existsT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;T>">existsT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, Env, Out, State>">filterT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, Env>">filterT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, K>">filterT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, L>">filterT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, L>">filterT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, Out>">filterT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T, State>">filterT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filterT&lt;T>">filterT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#foldT&lt;T, Env, Out, State, V>">foldT&lt;T, Env, Out, State, V&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, Env, V>">foldT&lt;T, Env, V&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, K, V>">foldT&lt;T, K, V&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, L, V>">foldT&lt;T, L, V&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, L, V>">foldT&lt;T, L, V&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, Out, V>">foldT&lt;T, Out, V&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, State, V>">foldT&lt;T, State, V&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;Option&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;Try&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#foldT&lt;T, V>">foldT&lt;T, V&gt;(TryOption&lt;Task&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)</a><a class="nav-link" href="#forallT&lt;T, Env, Out, State>">forallT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, Env>">forallT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, K>">forallT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, L>">forallT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, L>">forallT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, Out>">forallT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T, State>">forallT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;T>">forallT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#iterT&lt;T, Env, Out, State>">iterT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, Env>">iterT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, K>">iterT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, L>">iterT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, L>">iterT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, Out>">iterT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T, State>">iterT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;T>">iterT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#liftT&lt;T, Env, Out, State>">liftT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, Env>">liftT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, K>">liftT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, L>">liftT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, L>">liftT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, Out>">liftT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T, State>">liftT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#liftT&lt;T>">liftT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, Env, Out, State>">LiftUnsafeT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, Env>">LiftUnsafeT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, K>">LiftUnsafeT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, L>">LiftUnsafeT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, L>">LiftUnsafeT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, Out>">LiftUnsafeT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T, State>">LiftUnsafeT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#LiftUnsafeT&lt;T>">LiftUnsafeT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)</a><a class="nav-link" href="#mapT&lt;T, Env, Out, State, U>">mapT&lt;T, Env, Out, State, U&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, Env, U>">mapT&lt;T, Env, U&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, K, U>">mapT&lt;T, K, U&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, L, U>">mapT&lt;T, L, U&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, L, U>">mapT&lt;T, L, U&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, Out, U>">mapT&lt;T, Out, U&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, State, U>">mapT&lt;T, State, U&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#mapT&lt;T, U>">mapT&lt;T, U&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Env, Out, State, U, V>">SelectMany&lt;T, Env, Out, State, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Env, Out, State, U, V>">SelectMany&lt;T, Env, Out, State, U, V&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Env, U, V>">SelectMany&lt;T, Env, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Env, U, V>">SelectMany&lt;T, Env, U, V&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, K, U, V>">SelectMany&lt;T, K, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, K, U, V>">SelectMany&lt;T, K, U, V&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, L, U, V>">SelectMany&lt;T, L, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, L, U, V>">SelectMany&lt;T, L, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, L, U, V>">SelectMany&lt;T, L, U, V&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, L, U, V>">SelectMany&lt;T, L, U, V&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Out, U, V>">SelectMany&lt;T, Out, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, Out, U, V>">SelectMany&lt;T, Out, U, V&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, State, U, V>">SelectMany&lt;T, State, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, State&lt;State, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, State, U, V>">SelectMany&lt;T, State, U, V&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, State&lt;State, U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Option&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Lst&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, Lst&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, TryOption&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;IEnumerable&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;Option&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;OptionUnsafe&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;Lst&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;TryOption&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;Try&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT">sumT(TryOption&lt;Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;Env, Out, State>">sumT&lt;Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;Env>">sumT&lt;Env&gt;(TryOption&lt;Reader&lt;Env, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;K>">sumT&lt;K&gt;(TryOption&lt;Map&lt;K, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;L>">sumT&lt;L&gt;(TryOption&lt;Either&lt;L, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;L>">sumT&lt;L&gt;(TryOption&lt;EitherUnsafe&lt;L, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;Out>">sumT&lt;Out&gt;(TryOption&lt;Writer&lt;Out, int&gt;&gt;)</a><a class="nav-link" href="#sumT&lt;State>">sumT&lt;State&gt;(TryOption&lt;State&lt;State, int&gt;&gt;)</a></div><div class="content-panel"><h1 >TryOptionT Class</h1><p ><span ><br/><br/> </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="ident">TryOptionT</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="bindT&lt;T, Env, Out, State, U>"></a>bindT&lt;T, Env, Out, State, U&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_Env_Out_State_U_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_Rws&lt;Env, Out, State, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_Env_Out_State_U_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_Rws&lt;Env, Out, State, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, Env, U>"></a>bindT&lt;T, Env, U&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_Env_U_TryOption_Reader&lt;Env, T>_self__Func_T_Reader&lt;Env, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_Env_U_TryOption_Reader&lt;Env, T>_self__Func_T_Reader&lt;Env, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, K, U>"></a>bindT&lt;T, K, U&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_K_U_TryOption_Map&lt;K, T>_self__Func_T_Map&lt;K, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_K_U_TryOption_Map&lt;K, T>_self__Func_T_Map&lt;K, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, L, U>"></a>bindT&lt;T, L, U&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_L_U_TryOption_Either&lt;L, T>_self__Func_T_Either&lt;L, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_L_U_TryOption_Either&lt;L, T>_self__Func_T_Either&lt;L, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, L, U>"></a>bindT&lt;T, L, U&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_L_U_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_EitherUnsafe&lt;L, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_L_U_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_EitherUnsafe&lt;L, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, Out, U>"></a>bindT&lt;T, Out, U&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_Out_U_TryOption_Writer&lt;Out, T>_self__Func_T_Writer&lt;Out, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_Out_U_TryOption_Writer&lt;Out, T>_self__Func_T_Writer&lt;Out, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, State, U>"></a>bindT&lt;T, State, U&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, State&lt;State, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_State_U_TryOption_State&lt;State, T>_self__Func_T_State&lt;State, U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_State_U_TryOption_State&lt;State, T>_self__Func_T_State&lt;State, U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_IEnumerable&lt;T>_self__Func_T_IEnumerable&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_IEnumerable&lt;T>_self__Func_T_IEnumerable&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_Option&lt;T>_self__Func_T_Option&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_Option&lt;T>_self__Func_T_Option&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, Lst&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_Lst&lt;T>_self__Func_T_Lst&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_Lst&lt;T>_self__Func_T_Lst&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, TryOption&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_TryOption&lt;T>_self__Func_T_TryOption&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_TryOption&lt;T>_self__Func_T_TryOption&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, Try&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_Try&lt;T>_self__Func_T_Try&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_Try&lt;T>_self__Func_T_Try&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="bindT&lt;T, U>"></a>bindT&lt;T, U&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_T_U_TryOption_Task&lt;T>_self__Func_T_Task&lt;U>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_T_U_TryOption_Task&lt;T>_self__Func_T_Task&lt;U>_binder_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.BindT(binder))</div></div></div><div class="member-title"><a name="countT&lt;T, Env, Out, State>"></a>countT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt; <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, Env>"></a>countT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_Env_TryOption_Reader&lt;Env, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_Env_TryOption_Reader&lt;Env, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, K>"></a>countT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_K_TryOption_Map&lt;K, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_K_TryOption_Map&lt;K, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, L>"></a>countT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_L_TryOption_Either&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_L_TryOption_Either&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, L>"></a>countT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, Out>"></a>countT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_Out_TryOption_Writer&lt;Out, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt; <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_Out_TryOption_Writer&lt;Out, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T, State>"></a>countT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_State_TryOption_State&lt;State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt; <span class="ident">countT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_State_TryOption_State&lt;State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_IEnumerable&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_IEnumerable&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_Option&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_Option&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_OptionUnsafe&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_OptionUnsafe&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_Lst&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_Lst&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_TryOption&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_TryOption&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_Try&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_Try&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="countT&lt;T>"></a>countT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countT_T_TryOption_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Count </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">countT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-countT_T_TryOption_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.CountT()).SumT()</div></div></div><div class="member-title"><a name="existsT&lt;T, Env, Out, State>"></a>existsT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">bool</span>&gt; <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, Env>"></a>existsT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt; <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, K>"></a>existsT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, L>"></a>existsT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, L>"></a>existsT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, Out>"></a>existsT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt; <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T, State>"></a>existsT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">bool</span>&gt; <span class="ident">existsT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="existsT&lt;T>"></a>existsT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.ExistsT(pred)).ExistsT(x=&gt;x)</div></div></div><div class="member-title"><a name="filterT&lt;T, Env, Out, State>"></a>filterT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, Env>"></a>filterT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, K>"></a>filterT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, L>"></a>filterT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, L>"></a>filterT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, Out>"></a>filterT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T, State>"></a>filterT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="filterT&lt;T>"></a>filterT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.FilterT(pred))</div></div></div><div class="member-title"><a name="foldT&lt;T, Env, Out, State, V>"></a>foldT&lt;T, Env, Out, State, V&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_Env_Out_State_V_TryOption_Rws&lt;Env, Out, State, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt; <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_Env_Out_State_V_TryOption_Rws&lt;Env, Out, State, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold)(args).Value)</div></div></div><div class="member-title"><a name="foldT&lt;T, Env, V>"></a>foldT&lt;T, Env, V&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_Env_V_TryOption_Reader&lt;Env, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt; <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_Env_V_TryOption_Reader&lt;Env, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold)(args).Value)</div></div></div><div class="member-title"><a name="foldT&lt;T, K, V>"></a>foldT&lt;T, K, V&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_K_V_TryOption_Map&lt;K, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_K_V_TryOption_Map&lt;K, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, L, V>"></a>foldT&lt;T, L, V&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_L_V_TryOption_Either&lt;L, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_L_V_TryOption_Either&lt;L, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, L, V>"></a>foldT&lt;T, L, V&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_L_V_TryOption_EitherUnsafe&lt;L, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_L_V_TryOption_EitherUnsafe&lt;L, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, Out, V>"></a>foldT&lt;T, Out, V&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_Out_V_TryOption_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt; <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_Out_V_TryOption_Writer&lt;Out, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> ()=&gt; self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold)().Value)</div></div></div><div class="member-title"><a name="foldT&lt;T, State, V>"></a>foldT&lt;T, State, V&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_State_V_TryOption_State&lt;State, T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt; <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_State_V_TryOption_State&lt;State, T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold)(args).Value)</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_IEnumerable&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_IEnumerable&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;Option&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_Option&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_Option&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_OptionUnsafe&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_OptionUnsafe&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_Lst&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_Lst&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_TryOption&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_TryOption&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;Try&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_Try&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_Try&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="foldT&lt;T, V>"></a>foldT&lt;T, V&gt;(TryOption&lt;Task&lt;T&gt;&gt;, V, Func&lt;V, T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_T_V_TryOption_Task&lt;T>_self__V__state__Func_V_T_V_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">V</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">V</span> <span class="ident">foldT</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">V</span> state, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">V</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_T_V_TryOption_Task&lt;T>_self__V__state__Func_V_T_V_fold_"><div class="section_title">SOURCE</div><div class="code"> self.FoldT(state,(s,x) =&gt; x.FoldT(s, fold))</div></div></div><div class="member-title"><a name="forallT&lt;T, Env, Out, State>"></a>forallT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">bool</span>&gt; <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.ForAllT(pred)(args)</div></div></div><div class="member-title"><a name="forallT&lt;T, Env>"></a>forallT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt; <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_Env_TryOption_Reader&lt;Env, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.ForAllT(pred)(args)</div></div></div><div class="member-title"><a name="forallT&lt;T, K>"></a>forallT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_K_TryOption_Map&lt;K, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T, L>"></a>forallT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_L_TryOption_Either&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T, L>"></a>forallT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T, Out>"></a>forallT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt; <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_Out_TryOption_Writer&lt;Out, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> ()=&gt; self.ForAllT(pred)()</div></div></div><div class="member-title"><a name="forallT&lt;T, State>"></a>forallT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">bool</span>&gt; <span class="ident">forallT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_State_TryOption_State&lt;State, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.ForAllT(pred)(args)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_IEnumerable&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_Option&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_OptionUnsafe&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_Lst&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_TryOption&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_Try&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="forallT&lt;T>"></a>forallT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_T_TryOption_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code"> self.ForAllT(pred)</div></div></div><div class="member-title"><a name="iterT&lt;T, Env, Out, State>"></a>iterT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">Unit</span>&gt; <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.IterT(x =&gt; x.IterT(action)(args))</div></div></div><div class="member-title"><a name="iterT&lt;T, Env>"></a>iterT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_Env_TryOption_Reader&lt;Env, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Unit</span>&gt; <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterT_T_Env_TryOption_Reader&lt;Env, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.IterT(x =&gt; x.IterT(action)(args))</div></div></div><div class="member-title"><a name="iterT&lt;T, K>"></a>iterT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_K_TryOption_Map&lt;K, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_K_TryOption_Map&lt;K, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T, L>"></a>iterT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_L_TryOption_Either&lt;L, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_L_TryOption_Either&lt;L, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T, L>"></a>iterT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_L_TryOption_EitherUnsafe&lt;L, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T, Out>"></a>iterT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_Out_TryOption_Writer&lt;Out, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt; <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterT_T_Out_TryOption_Writer&lt;Out, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> ()=&gt; self.IterT(x =&gt; x.IterT(action)())</div></div></div><div class="member-title"><a name="iterT&lt;T, State>"></a>iterT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_State_TryOption_State&lt;State, T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">Unit</span>&gt; <span class="ident">iterT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterT_T_State_TryOption_State&lt;State, T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> args =&gt; self.IterT(x =&gt; x.IterT(action)(args))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_IEnumerable&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_IEnumerable&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_Option&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_Option&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_OptionUnsafe&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_OptionUnsafe&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_Lst&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_Lst&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_TryOption&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_TryOption&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_Try&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_Try&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="iterT&lt;T>"></a>iterT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_T_TryOption_Task&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iterT_T_TryOption_Task&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code"> self.IterT(x =&gt; x.IterT(action))</div></div></div><div class="member-title"><a name="liftT&lt;T, Env, Out, State>"></a>liftT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, Env>"></a>liftT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_Env_TryOption_Reader&lt;Env, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_Env_TryOption_Reader&lt;Env, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, K>"></a>liftT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_K_TryOption_Map&lt;K, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_K_TryOption_Map&lt;K, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, L>"></a>liftT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_L_TryOption_Either&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_L_TryOption_Either&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, L>"></a>liftT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, Out>"></a>liftT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_Out_TryOption_Writer&lt;Out, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_Out_TryOption_Writer&lt;Out, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T, State>"></a>liftT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_State_TryOption_State&lt;State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt; <span class="ident">liftT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_State_TryOption_State&lt;State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_IEnumerable&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_IEnumerable&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_Option&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_Option&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_OptionUnsafe&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_OptionUnsafe&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_Lst&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_Lst&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_TryOption&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_TryOption&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_Try&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_Try&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="liftT&lt;T>"></a>liftT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftT_T_TryOption_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lift </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-liftT_T_TryOption_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, Env, Out, State>"></a>LiftUnsafeT&lt;T, Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_Env_Out_State_TryOption_Rws&lt;Env, Out, State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, Env>"></a>LiftUnsafeT&lt;T, Env&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_Env_TryOption_Reader&lt;Env, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_Env_TryOption_Reader&lt;Env, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, K>"></a>LiftUnsafeT&lt;T, K&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_K_TryOption_Map&lt;K, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_K_TryOption_Map&lt;K, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, L>"></a>LiftUnsafeT&lt;T, L&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_L_TryOption_Either&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_L_TryOption_Either&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, L>"></a>LiftUnsafeT&lt;T, L&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_L_TryOption_EitherUnsafe&lt;L, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, Out>"></a>LiftUnsafeT&lt;T, Out&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_Out_TryOption_Writer&lt;Out, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_Out_TryOption_Writer&lt;Out, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T, State>"></a>LiftUnsafeT&lt;T, State&gt;(TryOption&lt;State&lt;State, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_State_TryOption_State&lt;State, T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt; <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_State_TryOption_State&lt;State, T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_IEnumerable&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_IEnumerable&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;Option&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_Option&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_Option&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_OptionUnsafe&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_OptionUnsafe&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;Lst&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_Lst&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_Lst&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_TryOption&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_TryOption&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;Try&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_Try&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_Try&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="LiftUnsafeT&lt;T>"></a>LiftUnsafeT&lt;T&gt;(TryOption&lt;Task&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LiftUnsafeT_T_TryOption_Task&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >LiftUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafeT</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-LiftUnsafeT_T_TryOption_Task&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code"> self.ValueT()</div></div></div><div class="member-title"><a name="mapT&lt;T, Env, Out, State, U>"></a>mapT&lt;T, Env, Out, State, U&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_Env_Out_State_U_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_Env_Out_State_U_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, Env, U>"></a>mapT&lt;T, Env, U&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_Env_U_TryOption_Reader&lt;Env, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_Env_U_TryOption_Reader&lt;Env, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, K, U>"></a>mapT&lt;T, K, U&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_K_U_TryOption_Map&lt;K, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_K_U_TryOption_Map&lt;K, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, L, U>"></a>mapT&lt;T, L, U&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_L_U_TryOption_Either&lt;L, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_L_U_TryOption_Either&lt;L, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, L, U>"></a>mapT&lt;T, L, U&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_L_U_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_L_U_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, Out, U>"></a>mapT&lt;T, Out, U&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_Out_U_TryOption_Writer&lt;Out, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_Out_U_TryOption_Writer&lt;Out, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, State, U>"></a>mapT&lt;T, State, U&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_State_U_TryOption_State&lt;State, T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_State_U_TryOption_State&lt;State, T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_IEnumerable&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_IEnumerable&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_Option&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_Option&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_OptionUnsafe&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_OptionUnsafe&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_Lst&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_Lst&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_TryOption&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_TryOption&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_Try&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_Try&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="mapT&lt;T, U>"></a>mapT&lt;T, U&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapT_T_U_TryOption_Task&lt;T>_self__Func_T_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">mapT</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapT_T_U_TryOption_Task&lt;T>_self__Func_T_U_mapper_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.MapT(mapper))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Env, Out, State, U, V>"></a>SelectMany&lt;T, Env, Out, State, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Env_Out_State_U_V_TryOption_T_self__Func_T_Rws&lt;Env, Out, State, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Env_Out_State_U_V_TryOption_T_self__Func_T_Rws&lt;Env, Out, State, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Env, Out, State, U, V>"></a>SelectMany&lt;T, Env, Out, State, U, V&gt;(TryOption&lt;Rws&lt;Env, Out, State, T&gt;&gt;, Func&lt;T, Rws&lt;Env, Out, State, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Env_Out_State_U_V_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_Rws&lt;Env, Out, State, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Env_Out_State_U_V_TryOption_Rws&lt;Env, Out, State, T>_self__Func_T_Rws&lt;Env, Out, State, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Env, U, V>"></a>SelectMany&lt;T, Env, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Env_U_V_TryOption_T_self__Func_T_Reader&lt;Env, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Env_U_V_TryOption_T_self__Func_T_Reader&lt;Env, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Env, U, V>"></a>SelectMany&lt;T, Env, U, V&gt;(TryOption&lt;Reader&lt;Env, T&gt;&gt;, Func&lt;T, Reader&lt;Env, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Env_U_V_TryOption_Reader&lt;Env, T>_self__Func_T_Reader&lt;Env, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Env</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Env_U_V_TryOption_Reader&lt;Env, T>_self__Func_T_Reader&lt;Env, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, K, U, V>"></a>SelectMany&lt;T, K, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_K_U_V_TryOption_T_self__Func_T_Map&lt;K, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_K_U_V_TryOption_T_self__Func_T_Map&lt;K, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, K, U, V>"></a>SelectMany&lt;T, K, U, V&gt;(TryOption&lt;Map&lt;K, T&gt;&gt;, Func&lt;T, Map&lt;K, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_K_U_V_TryOption_Map&lt;K, T>_self__Func_T_Map&lt;K, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_K_U_V_TryOption_Map&lt;K, T>_self__Func_T_Map&lt;K, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, L, U, V>"></a>SelectMany&lt;T, L, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_L_U_V_TryOption_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_L_U_V_TryOption_T_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, L, U, V>"></a>SelectMany&lt;T, L, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_L_U_V_TryOption_T_self__Func_T_EitherUnsafe&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_L_U_V_TryOption_T_self__Func_T_EitherUnsafe&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, L, U, V>"></a>SelectMany&lt;T, L, U, V&gt;(TryOption&lt;Either&lt;L, T&gt;&gt;, Func&lt;T, Either&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_L_U_V_TryOption_Either&lt;L, T>_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_L_U_V_TryOption_Either&lt;L, T>_self__Func_T_Either&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, L, U, V>"></a>SelectMany&lt;T, L, U, V&gt;(TryOption&lt;EitherUnsafe&lt;L, T&gt;&gt;, Func&lt;T, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_L_U_V_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_EitherUnsafe&lt;L, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">L</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_L_U_V_TryOption_EitherUnsafe&lt;L, T>_self__Func_T_EitherUnsafe&lt;L, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Out, U, V>"></a>SelectMany&lt;T, Out, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Out_U_V_TryOption_T_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Out_U_V_TryOption_T_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, Out, U, V>"></a>SelectMany&lt;T, Out, U, V&gt;(TryOption&lt;Writer&lt;Out, T&gt;&gt;, Func&lt;T, Writer&lt;Out, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_Out_U_V_TryOption_Writer&lt;Out, T>_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">Out</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_Out_U_V_TryOption_Writer&lt;Out, T>_self__Func_T_Writer&lt;Out, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, State, U, V>"></a>SelectMany&lt;T, State, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, State&lt;State, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_State_U_V_TryOption_T_self__Func_T_State&lt;State, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_State_U_V_TryOption_T_self__Func_T_State&lt;State, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, State, U, V>"></a>SelectMany&lt;T, State, U, V&gt;(TryOption&lt;State&lt;State, T&gt;&gt;, Func&lt;T, State&lt;State, U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_State_U_V_TryOption_State&lt;State, T>_self__Func_T_State&lt;State, U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_State_U_V_TryOption_State&lt;State, T>_self__Func_T_State&lt;State, U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Option&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_Option&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_Option&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_OptionUnsafe&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_OptionUnsafe&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Lst&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_Lst&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_Lst&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_Try&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_Try&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_T_self__Func_T_Task&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_T_self__Func_T_Task&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.Map(t =&gt; bind(t).Map(u =&gt; project(t, u)))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;IEnumerable&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_IEnumerable&lt;T>_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_IEnumerable&lt;T>_self__Func_T_IEnumerable&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_Option&lt;T>_self__Func_T_Option&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_Option&lt;T>_self__Func_T_Option&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;Lst&lt;T&gt;&gt;, Func&lt;T, Lst&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_Lst&lt;T>_self__Func_T_Lst&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Lst</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_Lst&lt;T>_self__Func_T_Lst&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;TryOption&lt;T&gt;&gt;, Func&lt;T, TryOption&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_TryOption&lt;T>_self__Func_T_TryOption&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_TryOption&lt;T>_self__Func_T_TryOption&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;Try&lt;T&gt;&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_Try&lt;T>_self__Func_T_Try&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_Try&lt;T>_self__Func_T_Try&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(TryOption&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_T_U_V_TryOption_Task&lt;T>_self__Func_T_Task&lt;U>_bind__Func_T_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >SelectMany </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_T_U_V_TryOption_Task&lt;T>_self__Func_T_Task&lt;U>_bind__Func_T_U_V_project_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(wt =&gt; wt.Bind(t =&gt; bind(t).Map(u =&gt; project(t, u))))</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;IEnumerable&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_IEnumerable&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_IEnumerable&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;Option&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_Option&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_Option&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;OptionUnsafe&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_OptionUnsafe&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_OptionUnsafe&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;Lst&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_Lst&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">Lst</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_Lst&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;TryOption&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_TryOption&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">TryOption</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_TryOption&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;Try&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_Try&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">Try</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_Try&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT"></a>sumT(TryOption&lt;Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT__TryOption_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>(<span class="ident">TryOption</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT__TryOption_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;Env, Out, State>"></a>sumT&lt;Env, Out, State&gt;(TryOption&lt;Rws&lt;Env, Out, State, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_Env_Out_State_TryOption_Rws&lt;Env, Out, State, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt; <span class="ident">sumT</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">State</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_Env_Out_State_TryOption_Rws&lt;Env, Out, State, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;Env>"></a>sumT&lt;Env&gt;(TryOption&lt;Reader&lt;Env, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_Env_TryOption_Reader&lt;Env, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; <span class="ident">sumT</span>&lt;<span class="ident">Env</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_Env_TryOption_Reader&lt;Env, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;K>"></a>sumT&lt;K&gt;(TryOption&lt;Map&lt;K, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_K_TryOption_Map&lt;K, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>&lt;<span class="ident">K</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_K_TryOption_Map&lt;K, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;L>"></a>sumT&lt;L&gt;(TryOption&lt;Either&lt;L, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_L_TryOption_Either&lt;L, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_L_TryOption_Either&lt;L, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;L>"></a>sumT&lt;L&gt;(TryOption&lt;EitherUnsafe&lt;L, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_L_TryOption_EitherUnsafe&lt;L, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sumT</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_L_TryOption_EitherUnsafe&lt;L, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;Out>"></a>sumT&lt;Out&gt;(TryOption&lt;Writer&lt;Out, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_Out_TryOption_Writer&lt;Out, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt; <span class="ident">sumT</span>&lt;<span class="ident">Out</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_Out_TryOption_Writer&lt;Out, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div><div class="member-title"><a name="sumT&lt;State>"></a>sumT&lt;State&gt;(TryOption&lt;State&lt;State, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumT_State_TryOption_State&lt;State, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt; <span class="ident">sumT</span>&lt;<span class="ident">State</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">State</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumT_State_TryOption_State&lt;State, int>_self_"><div class="section_title">SOURCE</div><div class="code"> self.MapT(x =&gt; x.SumT()).SumT()</div></div></div></div></body></html>