<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="__IEnumerableEitherTransExt_.htm">__IEnumerableEitherTransExt</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#BiMapT&lt;L, R, LRet, RRet>">BiMapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#BindT&lt;L, R, LRet, RRet>">BindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#BindT&lt;L, R, Ret>">BindT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#ExistsT&lt;L, R>">ExistsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#ExistsT&lt;L, R>">ExistsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;L, R>">FilterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;L, R>">FilterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#FoldT&lt;L, R, S>">FoldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#FoldT&lt;L, R, S>">FoldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#ForAllT&lt;L, R>">ForAllT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#ForAllT&lt;L, R>">ForAllT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#IterT&lt;L, R>">IterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#IterT&lt;L, R>">IterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#MapLeftT&lt;L, R, Ret>">MapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)</a></div><div class="content-panel"><h1 >__IEnumerableEitherTransExt Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">__IEnumerableEitherTransExt</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="BiMapT&lt;L, R, LRet, RRet>"></a>BiMapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">BiMapT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindT&lt;L, R, LRet, RRet>"></a>BindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">BindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="BindT&lt;L, R, Ret>"></a>BindT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">BindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">binder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ExistsT&lt;L, R>"></a>ExistsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ExistsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ExistsT&lt;L, R>"></a>ExistsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ExistsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="FilterT&lt;L, R>"></a>FilterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="FilterT&lt;L, R>"></a>FilterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="FoldT&lt;L, R, S>"></a>FoldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="FoldT&lt;L, R, S>"></a>FoldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAllT&lt;L, R>"></a>ForAllT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAllT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAllT&lt;L, R>"></a>ForAllT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAllT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">bool</span>&gt; <span class="ident">Right</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">bool</span>&gt; <span class="ident">Left</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IterT&lt;L, R>"></a>IterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;L&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">IterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; <span class="ident">action</span>)</div></div></div><div class="member-title"><a name="IterT&lt;L, R>"></a>IterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">IterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Right</span>, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; <span class="ident">Left</span>)</div></div></div><div class="member-title"><a name="MapLeftT&lt;L, R, Ret>"></a>MapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">MapLeftT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">mapper</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div></div></body></html>