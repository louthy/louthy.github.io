<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="TryExtensions_.htm">TryExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Append&lt;T>">Append&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#Apply&lt;T, R>">Apply&lt;T, R&gt;(Try&lt;Func&lt;T, R&gt;&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#Apply&lt;T1, T2, R>">Apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;)</a><a class="nav-link" href="#Apply&lt;T1, T2, R>">Apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;, Try&lt;T2&gt;)</a><a class="nav-link" href="#AsEnumerable&lt;T>">AsEnumerable&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#AsString&lt;T>">AsString&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#Bind&lt;T, R>">Bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;)</a><a class="nav-link" href="#Bind&lt;T, R>">Bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;, Func&lt;Exception, Try&lt;R&gt;&gt;)</a><a class="nav-link" href="#Count&lt;T>">Count&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#Divide&lt;T>">Divide&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#Exists&lt;T>">Exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Exists&lt;T>">Exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#Filter&lt;T>">Filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Filter&lt;T>">Filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#Flatten&lt;T>">Flatten&lt;T&gt;(Try&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#Flatten&lt;T>">Flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;)</a><a class="nav-link" href="#Flatten&lt;T>">Flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;&gt;)</a><a class="nav-link" href="#Fold&lt;S, T>">Fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#Fold&lt;S, T>">Fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, Exception, S&gt;)</a><a class="nav-link" href="#ForAll&lt;T>">ForAll&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;T>">ForAll&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#IfFail&lt;T>">IfFail&lt;T&gt;(Try&lt;T&gt;, T)</a><a class="nav-link" href="#IfFail&lt;T>">IfFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#IfFail&lt;T>">IfFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;Exception, T&gt;)</a><a class="nav-link" href="#IfFail&lt;T>">IfFail&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#IfFailThrow&lt;T>">IfFailThrow&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#IfSucc&lt;T>">IfSucc&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Iter&lt;T>">Iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Iter&lt;T>">Iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</a><a class="nav-link" href="#Join&lt;L, T, U, K, V>">Join&lt;L, T, U, K, V&gt;(Try&lt;T&gt;, Try&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Map&lt;T, R>">Map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#Map&lt;T, R>">Map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#Match&lt;T, R>">Match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#Match&lt;T, R>">Match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, R)</a><a class="nav-link" href="#Match&lt;T>">Match&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchAsync&lt;T, R>">MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchObservable&lt;T, R>">MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</a><a class="nav-link" href="#Multiply&lt;T>">Multiply&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#ParMap&lt;T1, T2, R>">ParMap&lt;T1, T2, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#ParMap&lt;T1, T2, T3, R>">ParMap&lt;T1, T2, T3, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#Select&lt;T, U>">Select&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(Try&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Subtract&lt;T>">Subtract&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#Succ&lt;T, R>">Succ&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#Succ&lt;T>">Succ&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Sum">Sum(Try&lt;int&gt;)</a><a class="nav-link" href="#ToArray&lt;T>">ToArray&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#ToList&lt;T>">ToList&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#ToOption&lt;T>">ToOption&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#ToTryOption&lt;T>">ToTryOption&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#Try&lt;T>">Try&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#Use&lt;T, U>">Use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#Use&lt;T, U>">Use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;)</a><a class="nav-link" href="#Where&lt;T>">Where&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a></div><div class="content-panel"><h1 >TryExtensions Class</h1><p >Extension methods for the Try monad </p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">TryExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="Append&lt;T>"></a>Append&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Append the Try(x) to Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to sum the Trys (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Append</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">lhs</span>, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rhs</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal">lhs + rhs</div></div></div></div><div class="member-title"><a name="Apply&lt;T, R>"></a>Apply&lt;T, R&gt;(Try&lt;Func&lt;T, R&gt;&gt;, Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply a Try value to a Try function </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">arg</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">Returns the result of applying the Try argument to the Try function</div></div></div></div><div class="member-title"><a name="Apply&lt;T1, T2, R>"></a>Apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply a Try value to a Try function of arity 2 </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">Apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">arg</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal">Returns the result of applying the Try argument to the Try function: a Try function of arity 1</div></div></div></div><div class="member-title"><a name="Apply&lt;T1, T2, R>"></a>Apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;, Try&lt;T2&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Apply Try values to a Try function of arity 2 </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Try argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">arg1</span>, <span class="ident">Try</span>&lt;<span class="ident">T2</span>&gt; <span class="ident">arg2</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal">Returns the result of applying the Try arguments to the Try function</div></div></div></div><div class="member-title"><a name="AsEnumerable&lt;T>"></a>AsEnumerable&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="AsString&lt;T>"></a>AsString&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">string</span> <span class="ident">AsString</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">string</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Bind&lt;T, R>"></a>Bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">binder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Bind&lt;T, R>"></a>Bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;, Func&lt;Exception, Try&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Count&lt;T>"></a>Count&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Count</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Divide&lt;T>"></a>Divide&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Divide Try(x) by Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to divide the Trys (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Divide</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">lhs</span>, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rhs</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal">lhs / rhs</div></div></div></div><div class="member-title"><a name="Exists&lt;T>"></a>Exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Exists&lt;T>"></a>Exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Filter&lt;T>"></a>Filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Filter&lt;T>"></a>Filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Flatten&lt;T>"></a>Flatten&lt;T&gt;(Try&lt;Try&lt;T&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Flatten&lt;T>"></a>Flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Flatten&lt;T>"></a>Flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Fold&lt;S, T>"></a>Fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Folds Try value into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal">Folded state</div></div></div></div><div class="member-title"><a name="Fold&lt;S, T>"></a>Fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, Exception, S&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Folds Try value into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Success</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Failure</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal">Folded state</div></div></div></div><div class="member-title"><a name="ForAll&lt;T>"></a>ForAll&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAll&lt;T>"></a>ForAll&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">bool</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfFail&lt;T>"></a>IfFail&lt;T&gt;(Try&lt;T&gt;, T)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns the Succ(value) of the Try or a default if it&#39;s Fail </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">IfFail</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">T</span> <span class="ident">defaultValue</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfFail&lt;T>"></a>IfFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns the Succ(value) of the Try or a default if it&#39;s Fail </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultAction</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">IfFail</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; <span class="ident">defaultAction</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfFail&lt;T>"></a>IfFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;Exception, T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns the Succ(value) of the Try or a default if it&#39;s Fail </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultAction</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">IfFail</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt; <span class="ident">defaultAction</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfFail&lt;T>"></a>IfFail&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns an exception matching context.  Call a chain of With&lt;ExceptionType&gt;() to handle specific exceptions, followed by Otherwise or OtherwiseThrow() </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ExceptionMatch</span>&lt;<span class="ident">T</span>&gt; <span class="ident">IfFail</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ExceptionMatch</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfFailThrow&lt;T>"></a>IfFailThrow&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">IfFailThrow</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IfSucc&lt;T>"></a>IfSucc&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Invokes the succHandler if Try is in the Success state, otherwise nothing happens. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">succHandler</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">IfSucc</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">succHandler</span>)</div></div></div><div class="member-title"><a name="Iter&lt;T>"></a>Iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">action</span>)</div></div></div><div class="member-title"><a name="Iter&lt;T>"></a>Iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Succ</span>, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; <span class="ident">Fail</span>)</div></div></div><div class="member-title"><a name="Join&lt;L, T, U, K, V>"></a>Join&lt;L, T, U, K, V&gt;(Try&lt;T&gt;, Try&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">V</span>&gt; <span class="ident">Join</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">inner</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt; <span class="ident">outerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; <span class="ident">innerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Map&lt;T, R>"></a>Map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">mapper</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Map&lt;T, R>"></a>Map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Match&lt;T, R>"></a>Match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">Match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Match&lt;T, R>"></a>Match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, R)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">Match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">R</span> <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Match&lt;T>"></a>Match&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Match</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Succ</span>, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; <span class="ident">Fail</span>)</div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchAsync&lt;T, R>"></a>MatchAsync&lt;T, R&gt;(Task&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, Task&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="MatchObservable&lt;T, R>"></a>MatchObservable&lt;T, R&gt;(IObservable&lt;Try&lt;T&gt;&gt;, Func&lt;T, R&gt;, Func&lt;Exception, IObservable&lt;R&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IObservable</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">Fail</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Multiply&lt;T>"></a>Multiply&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Find the product of Try(x) and Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to multiply the Trys (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">lhs</span>, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rhs</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal">lhs * rhs</div></div></div></div><div class="member-title"><a name="ParMap&lt;T1, T2, R>"></a>ParMap&lt;T1, T2, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Partial application map </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div>TODO: Better documentation of this function</div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; <span class="ident">func</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ParMap&lt;T1, T2, T3, R>"></a>ParMap&lt;T1, T2, T3, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Partial application map </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div>TODO: Better documentation of this function</div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">ParMap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; <span class="ident">func</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Select&lt;T, U>"></a>Select&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">select</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; <span class="ident">select</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(Try&lt;T&gt;, Func&lt;T, IEnumerable&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Subtract&lt;T>"></a>Subtract&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Subtract the Try(x) from Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to find the difference between the Trys (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">lhs</span>, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">rhs</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal">lhs - rhs</div></div></div></div><div class="member-title"><a name="Succ&lt;T, R>"></a>Succ&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">succHandler</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TrySuccContext</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">Succ</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">succHandler</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TrySuccContext</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Succ&lt;T>"></a>Succ&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">succHandler</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TrySuccUnitContext</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Succ</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">succHandler</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TrySuccUnitContext</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Sum"></a>Sum(Try&lt;int&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Sum</span>(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">int</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ToArray&lt;T>"></a>ToArray&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[] <span class="ident">ToArray</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[]</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ToList&lt;T>"></a>ToList&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">ToList</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ToOption&lt;T>"></a>ToOption&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToOption</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="ToTryOption&lt;T>"></a>ToTryOption&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToTryOption</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Try&lt;T>"></a>Try&lt;T&gt;(Try&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryResult</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryResult</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Use&lt;T, U>"></a>Use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">select</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; <span class="ident">select</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">IDisposable</span></div></div></div><div class="member-title"><a name="Use&lt;T, U>"></a>Use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">select</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">select</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">IDisposable</span></div></div></div><div class="member-title"><a name="Where&lt;T>"></a>Where&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div></div></body></html>