<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="https://louthy.github.io/">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Prelude_.htm">Prelude</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#centimeter">centimeter</a><a class="nav-link" href="#centimeter2">centimeter2</a><a class="nav-link" href="#centimeters">centimeters</a><a class="nav-link" href="#centimetre">centimetre</a><a class="nav-link" href="#centimetre2">centimetre2</a><a class="nav-link" href="#centimetres">centimetres</a><a class="nav-link" href="#cm">cm</a><a class="nav-link" href="#cm2">cm2</a><a class="nav-link" href="#day">day</a><a class="nav-link" href="#days">days</a><a class="nav-link" href="#feet">feet</a><a class="nav-link" href="#foot">foot</a><a class="nav-link" href="#ft">ft</a><a class="nav-link" href="#hour">hour</a><a class="nav-link" href="#hours">hours</a><a class="nav-link" href="#hr">hr</a><a class="nav-link" href="#hrs">hrs</a><a class="nav-link" href="#inch">inch</a><a class="nav-link" href="#inches">inches</a><a class="nav-link" href="#kilometer">kilometer</a><a class="nav-link" href="#kilometer2">kilometer2</a><a class="nav-link" href="#kilometers">kilometers</a><a class="nav-link" href="#kilometre">kilometre</a><a class="nav-link" href="#kilometre2">kilometre2</a><a class="nav-link" href="#kilometres">kilometres</a><a class="nav-link" href="#km">km</a><a class="nav-link" href="#km2">km2</a><a class="nav-link" href="#kph">kph</a><a class="nav-link" href="#m">m</a><a class="nav-link" href="#m2">m2</a><a class="nav-link" href="#meter">meter</a><a class="nav-link" href="#meter2">meter2</a><a class="nav-link" href="#meters">meters</a><a class="nav-link" href="#metre">metre</a><a class="nav-link" href="#metre2">metre2</a><a class="nav-link" href="#metres">metres</a><a class="nav-link" href="#mile">mile</a><a class="nav-link" href="#miles">miles</a><a class="nav-link" href="#millimeter">millimeter</a><a class="nav-link" href="#millimeter2">millimeter2</a><a class="nav-link" href="#millimeters">millimeters</a><a class="nav-link" href="#millimetre">millimetre</a><a class="nav-link" href="#millimetre2">millimetre2</a><a class="nav-link" href="#millimetres">millimetres</a><a class="nav-link" href="#millisecond">millisecond</a><a class="nav-link" href="#milliseconds">milliseconds</a><a class="nav-link" href="#min">min</a><a class="nav-link" href="#mins">mins</a><a class="nav-link" href="#minute">minute</a><a class="nav-link" href="#minutes">minutes</a><a class="nav-link" href="#mm">mm</a><a class="nav-link" href="#mm2">mm2</a><a class="nav-link" href="#mph">mph</a><a class="nav-link" href="#ms">ms</a><a class="nav-link" href="#ms2">ms2</a><a class="nav-link" href="#s">s</a><a class="nav-link" href="#sec">sec</a><a class="nav-link" href="#second">second</a><a class="nav-link" href="#seconds">seconds</a><a class="nav-link" href="#yard">yard</a><a class="nav-link" href="#yards">yards</a><a class="nav-link" href="#yd">yd</a><h3 >PROPERTIES</h3><a class="nav-link" href="#None">None</a><a class="nav-link" href="#unit">unit</a><h3 >METHODS</h3><a class="nav-link" href="#act">act(Action)</a><a class="nav-link" href="#act&lt;R>">act&lt;R&gt;(Func&lt;R&gt;)</a><a class="nav-link" href="#act&lt;T1, R>">act&lt;T1, R&gt;(Func&lt;T1, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, R>">act&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, R>">act&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, R>">act&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5, R>">act&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5, T6, R>">act&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5, T6, T7, R>">act&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5, T6, T7>">act&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5, T6>">act&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4, T5>">act&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3, T4>">act&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;)</a><a class="nav-link" href="#act&lt;T1, T2, T3>">act&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;)</a><a class="nav-link" href="#act&lt;T1, T2>">act&lt;T1, T2&gt;(Action&lt;T1, T2&gt;)</a><a class="nav-link" href="#act&lt;T1>">act&lt;T1&gt;(Action&lt;T1&gt;)</a><a class="nav-link" href="#append&lt;L, R>">append&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#append&lt;L, R>">append&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(T?, T?)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#append&lt;T>">append&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)</a><a class="nav-link" href="#append&lt;T1, T2, T3, T4>">append&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3&gt;, T4)</a><a class="nav-link" href="#append&lt;T1, T2, T3>">append&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2&gt;, T3)</a><a class="nav-link" href="#apply&lt;L, R, Res>">apply&lt;L, R, Res&gt;(Either&lt;L, Func&lt;R, Res&gt;&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#apply&lt;L, R, Res>">apply&lt;L, R, Res&gt;(EitherUnsafe&lt;L, Func&lt;R, Res&gt;&gt;, EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#apply&lt;L, T1, T2, R>">apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;)</a><a class="nav-link" href="#apply&lt;L, T1, T2, R>">apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;, Either&lt;L, T2&gt;)</a><a class="nav-link" href="#apply&lt;L, T1, T2, R>">apply&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, Func&lt;T1, T2, R&gt;&gt;, EitherUnsafe&lt;L, T1&gt;)</a><a class="nav-link" href="#apply&lt;L, T1, T2, R>">apply&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, Func&lt;T1, T2, R&gt;&gt;, EitherUnsafe&lt;L, T1&gt;, EitherUnsafe&lt;L, T2&gt;)</a><a class="nav-link" href="#apply&lt;T, R>">apply&lt;T, R&gt;(Option&lt;Func&lt;T, R&gt;&gt;, Option&lt;T&gt;)</a><a class="nav-link" href="#apply&lt;T, R>">apply&lt;T, R&gt;(OptionUnsafe&lt;Func&lt;T, R&gt;&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#apply&lt;T, R>">apply&lt;T, R&gt;(Try&lt;Func&lt;T, R&gt;&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#apply&lt;T, R>">apply&lt;T, R&gt;(TryOption&lt;Func&lt;T, R&gt;&gt;, TryOption&lt;T&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(Option&lt;Func&lt;T1, T2, R&gt;&gt;, Option&lt;T1&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(Option&lt;Func&lt;T1, T2, R&gt;&gt;, Option&lt;T1&gt;, Option&lt;T2&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;, OptionUnsafe&lt;T2&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;, Try&lt;T2&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(TryOption&lt;Func&lt;T1, T2, R&gt;&gt;, TryOption&lt;T1&gt;)</a><a class="nav-link" href="#apply&lt;T1, T2, R>">apply&lt;T1, T2, R&gt;(TryOption&lt;Func&lt;T1, T2, R&gt;&gt;, TryOption&lt;T1&gt;, TryOption&lt;T2&gt;)</a><a class="nav-link" href="#array&lt;T>">array&lt;T&gt;()</a><a class="nav-link" href="#array&lt;T>">array&lt;T&gt;(T)</a><a class="nav-link" href="#array&lt;T>">array&lt;T&gt;(T[])</a><a class="nav-link" href="#Array&lt;T>">Array&lt;T&gt;()</a><a class="nav-link" href="#Array&lt;T>">Array&lt;T&gt;(T)</a><a class="nav-link" href="#Array&lt;T>">Array&lt;T&gt;(T[])</a><a class="nav-link" href="#ask&lt;Env, Out, S, Ret>">ask&lt;Env, Out, S, Ret&gt;(Func&lt;Env, Ret&gt;)</a><a class="nav-link" href="#ask&lt;Env, Out, S>">ask&lt;Env, Out, S&gt;()</a><a class="nav-link" href="#ask&lt;Env>">ask&lt;Env&gt;()</a><a class="nav-link" href="#asks&lt;Env, R>">asks&lt;Env, R&gt;(Func&lt;Env, R&gt;)</a><a class="nav-link" href="#bifold&lt;T1, T2, S>">bifold&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T1, S&gt;, Func&lt;S, T2, S&gt;)</a><a class="nav-link" href="#bifoldBack&lt;T1, T2, S>">bifoldBack&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T2, S&gt;, Func&lt;S, T1, S&gt;)</a><a class="nav-link" href="#bimap&lt;L, R, LRet, RRet>">bimap&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#bimap&lt;L, R, LRet, RRet>">bimap&lt;L, R, LRet, RRet&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#bimap&lt;T1, T2, R1, R2>">bimap&lt;T1, T2, R1, R2&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, R1&gt;, Func&lt;T2, R2&gt;)</a><a class="nav-link" href="#bimapT&lt;L, R, LRet, RRet>">bimapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#bimapT&lt;L, R, LRet, RRet>">bimapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)</a><a class="nav-link" href="#bind&lt;L, R, LRet, RRet>">bind&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#bind&lt;L, R, LRet, RRet>">bind&lt;L, R, LRet, RRet&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, EitherUnsafe&lt;LRet, RRet&gt;&gt;, Func&lt;L, EitherUnsafe&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#bind&lt;L, R, Ret>">bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;L, Ret&gt;&gt;)</a><a class="nav-link" href="#bind&lt;L, R, Ret>">bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;L, R, Ret>">bind&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, EitherUnsafe&lt;L, Ret&gt;&gt;)</a><a class="nav-link" href="#bind&lt;L, R, Ret>">bind&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, EitherUnsafe&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(T?, Func&lt;T, R?&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(T?, Func&lt;T, R?&gt;, Func&lt;R?&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Option&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Option&lt;R&gt;&gt;, Func&lt;Option&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;, Func&lt;Exception, Try&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, TryOption&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, R>">bind&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, TryOption&lt;R&gt;&gt;, Func&lt;TryOption&lt;R&gt;&gt;, Func&lt;Exception, TryOption&lt;R&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T, U>">bind&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#bind&lt;T>">bind&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, NewType&lt;T&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;L, R2&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;L, R, R2>">bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;R&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Option&lt;R&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)</a><a class="nav-link" href="#bindAsync&lt;T, R>">bindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;L, R, LRet, RRet>">bindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;L, R, LRet, RRet>">bindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;LRet, RRet&gt;&gt;, Func&lt;L, EitherUnsafe&lt;LRet, RRet&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;L, R, Ret>">bindT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#bindT&lt;L, R, Ret>">bindT&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, EitherUnsafe&lt;Ret, R&gt;&gt;)</a><a class="nav-link" href="#choose&lt;S, T>">choose&lt;S, T&gt;(State&lt;S, Option&lt;T&gt;&gt;[])</a><a class="nav-link" href="#compose&lt;T1, T2, T3, T4, T5, T6, T7>">compose&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;, Func&lt;T5, T6&gt;, Func&lt;T6, T7&gt;)</a><a class="nav-link" href="#compose&lt;T1, T2, T3, T4, T5, T6>">compose&lt;T1, T2, T3, T4, T5, T6&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;, Func&lt;T5, T6&gt;)</a><a class="nav-link" href="#compose&lt;T1, T2, T3, T4, T5>">compose&lt;T1, T2, T3, T4, T5&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;)</a><a class="nav-link" href="#compose&lt;T1, T2, T3, T4>">compose&lt;T1, T2, T3, T4&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;)</a><a class="nav-link" href="#compose&lt;T1, T2, T3>">compose&lt;T1, T2, T3&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;)</a><a class="nav-link" href="#cons&lt;T>">cons&lt;T&gt;(T, IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#cons&lt;T>">cons&lt;T&gt;(T, Lst&lt;T&gt;)</a><a class="nav-link" href="#Cons&lt;T>">Cons&lt;T&gt;(T, IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#Cons&lt;T>">Cons&lt;T&gt;(T, Lst&lt;T&gt;)</a><a class="nav-link" href="#convert&lt;T>">convert&lt;T&gt;(string)</a><a class="nav-link" href="#count&lt;L, R>">count&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#count&lt;L, R>">count&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(NewType&lt;T&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(T?)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#count&lt;T>">count&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#countAsync&lt;L, R>">countAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#countAsync&lt;L, R>">countAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#countAsync&lt;T>">countAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#countAsync&lt;T>">countAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, R>">curry&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, R>">curry&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, R>">curry&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, R>">curry&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, T6, R>">curry&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, T6, T7, R>">curry&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;)</a><a class="nav-link" href="#curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;)</a><a class="nav-link" href="#delay">delay(Action, TimeSpan)</a><a class="nav-link" href="#delay">delay(Action, DateTime)</a><a class="nav-link" href="#delay&lt;T>">delay&lt;T&gt;(Func&lt;T&gt;, TimeSpan)</a><a class="nav-link" href="#delay&lt;T>">delay&lt;T&gt;(Func&lt;T&gt;, DateTime)</a><a class="nav-link" href="#divide&lt;L, R>">divide&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#divide&lt;L, R>">divide&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(T?, T?)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#divide&lt;T>">divide&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)</a><a class="nav-link" href="#empty&lt;T>">empty&lt;T&gt;()</a><a class="nav-link" href="#exceptionIs&lt;E>">exceptionIs&lt;E&gt;(Exception)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#exists&lt;L, R>">exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(T?, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#exists&lt;T>">exists&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;L, R>">existsAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;L, R>">existsAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;L, R>">existsAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;L, R>">existsAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;T>">existsAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;T>">existsAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;T>">existsAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsAsync&lt;T>">existsAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#existsT&lt;L, R>">existsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#existsT&lt;L, R>">existsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#existsT&lt;L, R>">existsT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#existsT&lt;L, R>">existsT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#expr">expr(Expression&lt;Action&gt;)</a><a class="nav-link" href="#expr&lt;R>">expr&lt;R&gt;(Expression&lt;Func&lt;R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, R>">expr&lt;T1, R&gt;(Expression&lt;Func&lt;T1, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, R>">expr&lt;T1, T2, R&gt;(Expression&lt;Func&lt;T1, T2, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, R>">expr&lt;T1, T2, T3, R&gt;(Expression&lt;Func&lt;T1, T2, T3, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, R>">expr&lt;T1, T2, T3, T4, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5, R>">expr&lt;T1, T2, T3, T4, T5, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5, T6, R>">expr&lt;T1, T2, T3, T4, T5, T6, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, T6, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5, T6, T7, R>">expr&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5, T6, T7>">expr&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5, T6>">expr&lt;T1, T2, T3, T4, T5, T6&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5, T6&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4, T5>">expr&lt;T1, T2, T3, T4, T5&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3, T4>">expr&lt;T1, T2, T3, T4&gt;(Expression&lt;Action&lt;T1, T2, T3, T4&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2, T3>">expr&lt;T1, T2, T3&gt;(Expression&lt;Action&lt;T1, T2, T3&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1, T2>">expr&lt;T1, T2&gt;(Expression&lt;Action&lt;T1, T2&gt;&gt;)</a><a class="nav-link" href="#expr&lt;T1>">expr&lt;T1&gt;(Expression&lt;Action&lt;T1&gt;&gt;)</a><a class="nav-link" href="#failed&lt;T>">failed&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#failure&lt;L, R>">failure&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#failure&lt;L, R>">failure&lt;L, R&gt;(Either&lt;L, R&gt;, R)</a><a class="nav-link" href="#failure&lt;T>">failure&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#failure&lt;T>">failure&lt;T&gt;(TryOption&lt;T&gt;, T)</a><a class="nav-link" href="#failure&lt;T>">failure&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#failure&lt;T>">failure&lt;T&gt;(Option&lt;T&gt;, T)</a><a class="nav-link" href="#Failure&lt;T>">Failure&lt;T&gt;(TryOption&lt;T&gt;, T)</a><a class="nav-link" href="#Failure&lt;T>">Failure&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#failureUnsafe&lt;L, R>">failureUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#failureUnsafe&lt;L, R>">failureUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, R)</a><a class="nav-link" href="#failureUnsafe&lt;T>">failureUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;IEnumerable&lt;T&gt;&gt;)</a><a class="nav-link" href="#failureUnsafe&lt;T>">failureUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#failureUnsafe&lt;T>">failureUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#failureUnsafe&lt;T>">failureUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, T)</a><a class="nav-link" href="#failwith">failwith(string)</a><a class="nav-link" href="#failwith&lt;R>">failwith&lt;R&gt;(string)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filter&lt;L, R>">filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(T?, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#filter&lt;T>">filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#filterT&lt;L, R>">filterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filterT&lt;L, R>">filterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filterT&lt;L, R>">filterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#filterT&lt;L, R>">filterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#flatten&lt;T>">flatten&lt;T&gt;(Try&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#flatten&lt;T>">flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;)</a><a class="nav-link" href="#flatten&lt;T>">flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;&gt;)</a><a class="nav-link" href="#fold&lt;L, R, S>">fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#fold&lt;L, R, S>">fold&lt;L, R, S&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#fold&lt;S, L, R>">fold&lt;S, L, R&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#fold&lt;S, L, R>">fold&lt;S, L, R&gt;(Either&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#fold&lt;S, L, R>">fold&lt;S, L, R&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#fold&lt;S, L, R>">fold&lt;S, L, R&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(T?, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(T?, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(Option&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(Option&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(OptionUnsafe&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, Exception, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(TryOption&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;S, T>">fold&lt;S, T&gt;(TryOption&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;, Func&lt;S, Exception, S&gt;)</a><a class="nav-link" href="#fold&lt;T, S>">fold&lt;T, S&gt;(NewType&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;T, S>">fold&lt;T, S&gt;(Task&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#fold&lt;T1, T2, S>">fold&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T1, T2, S&gt;)</a><a class="nav-link" href="#fold&lt;T1, T2, T3, S>">fold&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T1, T2, T3, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;L, R, S>">foldAsync&lt;L, R, S&gt;(Task&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;L, R, S>">foldAsync&lt;L, R, S&gt;(Either&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;L, R, S>">foldAsync&lt;L, R, S&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;L, R, S>">foldAsync&lt;L, R, S&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;T, S>">foldAsync&lt;T, S&gt;(Task&lt;Option&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;T, S>">foldAsync&lt;T, S&gt;(Option&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;T, S>">foldAsync&lt;T, S&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldAsync&lt;T, S>">foldAsync&lt;T, S&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#foldT&lt;L, R, S>">foldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#foldT&lt;L, R, S>">foldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#foldT&lt;L, R, S>">foldT&lt;L, R, S&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#foldT&lt;L, R, S>">foldT&lt;L, R, S&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forall&lt;L, R>">forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(T?, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forall&lt;T>">forall&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;, Func&lt;Exception, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;L, R>">forallAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;L, R>">forallAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;L, R>">forallAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;L, R>">forallAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;T>">forallAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;T>">forallAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;T>">forallAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallAsync&lt;T>">forallAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#forallT&lt;L, R>">forallT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forallT&lt;L, R>">forallT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forallT&lt;L, R>">forallT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#forallT&lt;L, R>">forallT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#fun">fun(Action)</a><a class="nav-link" href="#fun&lt;R>">fun&lt;R&gt;(Func&lt;R&gt;)</a><a class="nav-link" href="#fun&lt;T1, R>">fun&lt;T1, R&gt;(Func&lt;T1, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, R>">fun&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, R>">fun&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, R>">fun&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5, R>">fun&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5, T6, R>">fun&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5, T6, T7, R>">fun&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5, T6, T7>">fun&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5, T6>">fun&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4, T5>">fun&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3, T4>">fun&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2, T3>">fun&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;)</a><a class="nav-link" href="#fun&lt;T1, T2>">fun&lt;T1, T2&gt;(Action&lt;T1, T2&gt;)</a><a class="nav-link" href="#fun&lt;T1>">fun&lt;T1&gt;(Action&lt;T1&gt;)</a><a class="nav-link" href="#function&lt;T, R>">function&lt;T, R&gt;(Func&lt;T, Option&lt;R&gt;&gt;[])</a><a class="nav-link" href="#get&lt;Env, Out, S>">get&lt;Env, Out, S&gt;()</a><a class="nav-link" href="#get&lt;S>">get&lt;S&gt;()</a><a class="nav-link" href="#identity&lt;T>">identity&lt;T&gt;(T)</a><a class="nav-link" href="#ifFail&lt;T>">ifFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#ifFail&lt;T>">ifFail&lt;T&gt;(Try&lt;T&gt;, T)</a><a class="nav-link" href="#ifFail&lt;T>">ifFail&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#ifLeft&lt;L, R>">ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#ifLeft&lt;L, R>">ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, R&gt;)</a><a class="nav-link" href="#ifLeft&lt;L, R>">ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, R)</a><a class="nav-link" href="#ifLeft&lt;L, R>">ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#ifLeftUnsafe&lt;L, R>">ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#ifLeftUnsafe&lt;L, R>">ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, R&gt;)</a><a class="nav-link" href="#ifLeftUnsafe&lt;L, R>">ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, R)</a><a class="nav-link" href="#ifLeftUnsafe&lt;L, R>">ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(T?, Func&lt;T&gt;)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(T?, T)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(Option&lt;T&gt;, T)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#ifNone&lt;T>">ifNone&lt;T&gt;(TryOption&lt;T&gt;, T)</a><a class="nav-link" href="#ifNoneOrFail&lt;T>">ifNoneOrFail&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;, Func&lt;Exception, T&gt;)</a><a class="nav-link" href="#ifNoneUnsafe&lt;T>">ifNoneUnsafe&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#ifNoneUnsafe&lt;T>">ifNoneUnsafe&lt;T&gt;(Option&lt;T&gt;, T)</a><a class="nav-link" href="#ifNoneUnsafe&lt;T>">ifNoneUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#ifNoneUnsafe&lt;T>">ifNoneUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, T)</a><a class="nav-link" href="#ifRight&lt;L, R>">ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#ifRight&lt;L, R>">ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, L)</a><a class="nav-link" href="#ifRight&lt;L, R>">ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L&gt;)</a><a class="nav-link" href="#ifRight&lt;L, R>">ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, L&gt;)</a><a class="nav-link" href="#ifRightUnsafe&lt;L, R>">ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#ifRightUnsafe&lt;L, R>">ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, L)</a><a class="nav-link" href="#ifRightUnsafe&lt;L, R>">ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L&gt;)</a><a class="nav-link" href="#ifRightUnsafe&lt;L, R>">ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, L&gt;)</a><a class="nav-link" href="#ifSome&lt;T>">ifSome&lt;T&gt;(T?, Action&lt;T&gt;)</a><a class="nav-link" href="#ifSome&lt;T>">ifSome&lt;T&gt;(T?, Func&lt;T, Unit&gt;)</a><a class="nav-link" href="#ifSome&lt;T>">ifSome&lt;T&gt;(Option&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#ifSome&lt;T>">ifSome&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#ifSomeUnsafe&lt;T>">ifSomeUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#ifSucc&lt;T>">ifSucc&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#ignore&lt;T>">ignore&lt;T&gt;(T)</a><a class="nav-link" href="#isFail&lt;T>">isFail&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#isLeft&lt;L, R>">isLeft&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#isLeft&lt;L, R>">isLeft&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#isNone&lt;T>">isNone&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#isNone&lt;T>">isNone&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#isNone&lt;T>">isNone&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#isnull&lt;T>">isnull&lt;T&gt;(T)</a><a class="nav-link" href="#isRight&lt;L, R>">isRight&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#isRight&lt;L, R>">isRight&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#isSome&lt;T>">isSome&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#isSome&lt;T>">isSome&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#isSome&lt;T>">isSome&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#isSucc&lt;T>">isSucc&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(NewType&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(T?, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(Task&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iter&lt;T>">iter&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;, Action, Action&lt;Exception&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3, T4, T5, T6, T7>">iter&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3, T4, T5, T6>">iter&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3, T4, T5>">iter&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3, T4>">iter&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3>">iter&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2, T3>">iter&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1&gt;, Action&lt;T2&gt;, Action&lt;T3&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2>">iter&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1&gt;, Action&lt;T2&gt;)</a><a class="nav-link" href="#iter&lt;T1, T2>">iter&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)</a><a class="nav-link" href="#iterAsync&lt;L, R>">iterAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#iterAsync&lt;L, R>">iterAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#iterAsync&lt;L, R>">iterAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#iterAsync&lt;L, R>">iterAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)</a><a class="nav-link" href="#iterAsync&lt;T>">iterAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterAsync&lt;T>">iterAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterAsync&lt;T>">iterAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterAsync&lt;T>">iterAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#iterT&lt;L, R>">iterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#iterT&lt;L, R>">iterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#iterT&lt;L, R>">iterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#iterT&lt;L, R>">iterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#Left&lt;L, R>">Left&lt;L, R&gt;(L)</a><a class="nav-link" href="#Left&lt;L, R>">Left&lt;L, R&gt;(L?)</a><a class="nav-link" href="#lefts&lt;L, R>">lefts&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#lefts&lt;L, R>">lefts&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#leftToArray&lt;L, R>">leftToArray&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#leftToArray&lt;L, R>">leftToArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#leftToList&lt;L, R>">leftToList&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#leftToList&lt;L, R>">leftToList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#leftToQuery&lt;L, R>">leftToQuery&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#leftToQuery&lt;L, R>">leftToQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#LeftUnsafe&lt;L, R>">LeftUnsafe&lt;L, R&gt;(L)</a><a class="nav-link" href="#lift&lt;T>">lift&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#liftUnsafe&lt;T>">liftUnsafe&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#list&lt;T>">list&lt;T&gt;()</a><a class="nav-link" href="#list&lt;T>">list&lt;T&gt;(T[])</a><a class="nav-link" href="#List&lt;T>">List&lt;T&gt;()</a><a class="nav-link" href="#List&lt;T>">List&lt;T&gt;(T[])</a><a class="nav-link" href="#local&lt;Env, T, EnvLocal>">local&lt;Env, T, EnvLocal&gt;(Func&lt;EnvLocal, Env&gt;, Reader&lt;Env, T&gt;)</a><a class="nav-link" href="#local&lt;Env, T>">local&lt;Env, T&gt;(Func&lt;Env, Env&gt;, Reader&lt;Env, T&gt;)</a><a class="nav-link" href="#lpar&lt;T1, T2, R>">lpar&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;, T2)</a><a class="nav-link" href="#map&lt;K, V>">map&lt;K, V&gt;()</a><a class="nav-link" href="#map&lt;K, V>">map&lt;K, V&gt;(Tuple&lt;K, V&gt;[])</a><a class="nav-link" href="#map&lt;K, V>">map&lt;K, V&gt;(KeyValuePair&lt;K, V&gt;[])</a><a class="nav-link" href="#Map&lt;K, V>">Map&lt;K, V&gt;()</a><a class="nav-link" href="#Map&lt;K, V>">Map&lt;K, V&gt;(Tuple&lt;K, V&gt;[])</a><a class="nav-link" href="#Map&lt;K, V>">Map&lt;K, V&gt;(IEnumerable&lt;Tuple&lt;K, V&gt;&gt;)</a><a class="nav-link" href="#Map&lt;K, V>">Map&lt;K, V&gt;(KeyValuePair&lt;K, V&gt;[])</a><a class="nav-link" href="#Map&lt;K, V>">Map&lt;K, V&gt;(IEnumerable&lt;KeyValuePair&lt;K, V&gt;&gt;)</a><a class="nav-link" href="#map&lt;L, R, Ret>">map&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;)</a><a class="nav-link" href="#map&lt;L, R, Ret>">map&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Ret&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(T, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(T?, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(T?, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#map&lt;T, R>">map&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#map&lt;T, U>">map&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#map&lt;T>">map&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, T&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, R>">map&lt;T1, T2, R&gt;(T1, T2, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, R>">map&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, R1, R2>">map&lt;T1, T2, R1, R2&gt;(Tuple&lt;T1, T2&gt;, Func&lt;Tuple&lt;T1, T2&gt;, Tuple&lt;R1, R2&gt;&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, R>">map&lt;T1, T2, T3, R&gt;(T1, T2, T3, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, R>">map&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, R1, R2, R3>">map&lt;T1, T2, T3, R1, R2, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;Tuple&lt;T1, T2, T3&gt;, Tuple&lt;R1, R2, R3&gt;&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, R>">map&lt;T1, T2, T3, T4, R&gt;(T1, T2, T3, T4, Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, R>">map&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, T5, R>">map&lt;T1, T2, T3, T4, T5, R&gt;(T1, T2, T3, T4, T5, Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, T5, R>">map&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, T5, T6, R>">map&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#map&lt;T1, T2, T3, T4, T5, T6, T7, R>">map&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)</a><a class="nav-link" href="#mapAsync&lt;L, R, R2>">mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#mapAsync&lt;T, R>">mapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#mapFirst&lt;T1, T2, T3, R1>">mapFirst&lt;T1, T2, T3, R1&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, R1&gt;)</a><a class="nav-link" href="#mapLeft&lt;L, R, Ret>">mapLeft&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#mapLeft&lt;L, R, Ret>">mapLeft&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#mapLeftT&lt;L, R, Ret>">mapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#mapLeftT&lt;L, R, Ret>">mapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#mapSecond&lt;T1, T2, T3, R2>">mapSecond&lt;T1, T2, T3, R2&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T2, R2&gt;)</a><a class="nav-link" href="#mapThird&lt;T1, T2, T3, R3>">mapThird&lt;T1, T2, T3, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T3, R3&gt;)</a><a class="nav-link" href="#match&lt;K, V, R>">match&lt;K, V, R&gt;(Map&lt;K, V&gt;, K, Func&lt;V, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#match&lt;K, V>">match&lt;K, V&gt;(Map&lt;K, V&gt;, K, Action&lt;V&gt;, Action)</a><a class="nav-link" href="#match&lt;L, R, Ret>">match&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#match&lt;L, R, Ret>">match&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#match&lt;L, R, Ret>">match&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#Match&lt;L, R, Ret>">Match&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#Match&lt;L, R, Ret>">Match&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#match&lt;L, R>">match&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(T, Func&lt;T, Option&lt;R&gt;&gt;[])</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(T?, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, R)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, R, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#match&lt;T, R>">match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, R)</a><a class="nav-link" href="#Match&lt;T, R>">Match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)</a><a class="nav-link" href="#Match&lt;T, R>">Match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)</a><a class="nav-link" href="#match&lt;T>">match&lt;T&gt;(T?, Action&lt;T&gt;, Action)</a><a class="nav-link" href="#match&lt;T>">match&lt;T&gt;(Option&lt;T&gt;, Action&lt;T&gt;, Action)</a><a class="nav-link" href="#match&lt;T>">match&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)</a><a class="nav-link" href="#match&lt;T>">match&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;, Action, Action&lt;Exception&gt;)</a><a class="nav-link" href="#matchAsync&lt;T, R>">matchAsync&lt;T, R&gt;(T?, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#matchAsync&lt;T, R>">matchAsync&lt;T, R&gt;(T?, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Task&lt;R&gt;&gt;)</a><a class="nav-link" href="#matchObservable&lt;T, R>">matchObservable&lt;T, R&gt;(T?, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#matchObservable&lt;T, R>">matchObservable&lt;T, R&gt;(T?, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;IObservable&lt;R&gt;&gt;)</a><a class="nav-link" href="#matchObservable&lt;T, R>">matchObservable&lt;T, R&gt;(IObservable&lt;T?&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;L, R, Ret>">matchUnsafe&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;L, R>">matchUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;T, R>">matchUnsafe&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;T, R>">matchUnsafe&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;T, R>">matchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;T, R>">matchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)</a><a class="nav-link" href="#MatchUnsafe&lt;T, R>">MatchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)</a><a class="nav-link" href="#MatchUnsafe&lt;T, R>">MatchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)</a><a class="nav-link" href="#matchUnsafe&lt;T>">matchUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;, Action)</a><a class="nav-link" href="#memo&lt;T, R>">memo&lt;T, R&gt;(Func&lt;T, R&gt;)</a><a class="nav-link" href="#memo&lt;T>">memo&lt;T&gt;(Func&lt;T&gt;)</a><a class="nav-link" href="#memo&lt;T>">memo&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#memoUnsafe&lt;T, R>">memoUnsafe&lt;T, R&gt;(Func&lt;T, R&gt;)</a><a class="nav-link" href="#modify&lt;S, T>">modify&lt;S, T&gt;(State&lt;S, T&gt;, Func&lt;S, S&gt;)</a><a class="nav-link" href="#multiply&lt;L, R>">multiply&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#multiply&lt;L, R>">multiply&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(T?, T?)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#multiply&lt;T>">multiply&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)</a><a class="nav-link" href="#notnull&lt;T>">notnull&lt;T&gt;(T)</a><a class="nav-link" href="#Optional&lt;T>">Optional&lt;T&gt;(T)</a><a class="nav-link" href="#Optional&lt;T>">Optional&lt;T&gt;(T?)</a><a class="nav-link" href="#otherwise&lt;T, R>">otherwise&lt;T, R&gt;(Func&lt;T, R&gt;)</a><a class="nav-link" href="#par&lt;T1, T2, R>">par&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, R>">par&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, R>">par&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, R>">par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, R>">par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, R>">par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, R>">par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, R>">par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, R>">par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, R>">par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, R>">par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, R>">par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, R>">par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, R>">par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, R>">par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7, T8)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6, T7, T8)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7, T8>">par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6, T7>">par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6>">par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3, T4, T5)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6>">par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6>">par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6>">par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5, T6>">par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5>">par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2, T3, T4)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5>">par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5>">par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4, T5>">par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4>">par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1, T2, T3)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4>">par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3, T4>">par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2, T3>">par&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;, T1, T2)</a><a class="nav-link" href="#par&lt;T1, T2, T3>">par&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;, T1)</a><a class="nav-link" href="#par&lt;T1, T2>">par&lt;T1, T2&gt;(Action&lt;T1, T2&gt;, T1)</a><a class="nav-link" href="#parmap&lt;L, T1, T2, R>">parmap&lt;L, T1, T2, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;L, T1, T2, R>">parmap&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;L, T1, T2, T3, R>">parmap&lt;L, T1, T2, T3, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parmap&lt;L, T1, T2, T3, R>">parmap&lt;L, T1, T2, T3, R&gt;(EitherUnsafe&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, R>">parmap&lt;T1, T2, R&gt;(Option&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, R>">parmap&lt;T1, T2, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, R>">parmap&lt;T1, T2, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, R>">parmap&lt;T1, T2, R&gt;(TryOption&lt;T1&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, T3, R>">parmap&lt;T1, T2, T3, R&gt;(Option&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, T3, R>">parmap&lt;T1, T2, T3, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, T3, R>">parmap&lt;T1, T2, T3, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parmap&lt;T1, T2, T3, R>">parmap&lt;T1, T2, T3, R&gt;(TryOption&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#parseBool">parseBool(string)</a><a class="nav-link" href="#parseByte">parseByte(string)</a><a class="nav-link" href="#parseChar">parseChar(string)</a><a class="nav-link" href="#parseDateTime">parseDateTime(string)</a><a class="nav-link" href="#parseDecimal">parseDecimal(string)</a><a class="nav-link" href="#parseDouble">parseDouble(string)</a><a class="nav-link" href="#parseFloat">parseFloat(string)</a><a class="nav-link" href="#parseGuid">parseGuid(string)</a><a class="nav-link" href="#parseInt">parseInt(string)</a><a class="nav-link" href="#parseInt">parseInt(string, int)</a><a class="nav-link" href="#parseLong">parseLong(string)</a><a class="nav-link" href="#parseShort">parseShort(string)</a><a class="nav-link" href="#parseUInt">parseUInt(string)</a><a class="nav-link" href="#parseULong">parseULong(string)</a><a class="nav-link" href="#parseUShort">parseUShort(string)</a><a class="nav-link" href="#partition&lt;L, R>">partition&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#partition&lt;L, R>">partition&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#put&lt;Env, Out, S>">put&lt;Env, Out, S&gt;(S)</a><a class="nav-link" href="#put&lt;S>">put&lt;S&gt;(S)</a><a class="nav-link" href="#query&lt;T>">query&lt;T&gt;(T[])</a><a class="nav-link" href="#Query&lt;T>">Query&lt;T&gt;(T[])</a><a class="nav-link" href="#Queue&lt;T>">Queue&lt;T&gt;()</a><a class="nav-link" href="#Queue&lt;T>">Queue&lt;T&gt;(T[])</a><a class="nav-link" href="#raise&lt;R>">raise&lt;R&gt;(Exception)</a><a class="nav-link" href="#raiseapp&lt;R>">raiseapp&lt;R&gt;(string)</a><a class="nav-link" href="#random">random(int)</a><a class="nav-link" href="#randomBase64">randomBase64(int)</a><a class="nav-link" href="#range">range(char, char)</a><a class="nav-link" href="#range">range(IntegerRange[])</a><a class="nav-link" href="#range">range(CharRange[])</a><a class="nav-link" href="#Range">Range(int, int, int)</a><a class="nav-link" href="#Range">Range(char, char)</a><a class="nav-link" href="#Range">Range(IntegerRange[])</a><a class="nav-link" href="#Range">Range(CharRange[])</a><a class="nav-link" href="#Reader&lt;Env, T>">Reader&lt;Env, T&gt;(T)</a><a class="nav-link" href="#Right&lt;L, R>">Right&lt;L, R&gt;(R)</a><a class="nav-link" href="#Right&lt;L, R>">Right&lt;L, R&gt;(R?)</a><a class="nav-link" href="#rights&lt;L, R>">rights&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#rights&lt;L, R>">rights&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)</a><a class="nav-link" href="#rightToArray&lt;L, R>">rightToArray&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#rightToArray&lt;L, R>">rightToArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#rightToList&lt;L, R>">rightToList&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#rightToList&lt;L, R>">rightToList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#rightToQuery&lt;L, R>">rightToQuery&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#rightToQuery&lt;L, R>">rightToQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#RightUnsafe&lt;L, R>">RightUnsafe&lt;L, R&gt;(R)</a><a class="nav-link" href="#Rws&lt;Env, Out, S, T>">Rws&lt;Env, Out, S, T&gt;(T)</a><a class="nav-link" href="#seq&lt;L, T>">seq&lt;L, T&gt;(Either&lt;L, T&gt;)</a><a class="nav-link" href="#seq&lt;L, T>">seq&lt;L, T&gt;(EitherUnsafe&lt;L, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(T)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(T?)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T, T, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T, T, T, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T, T, T, T, T&gt;)</a><a class="nav-link" href="#seq&lt;T>">seq&lt;T&gt;(Tuple&lt;T, T, T, T, T, T, T&gt;)</a><a class="nav-link" href="#seq2&lt;T>">seq2&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#set&lt;T>">set&lt;T&gt;()</a><a class="nav-link" href="#set&lt;T>">set&lt;T&gt;(T)</a><a class="nav-link" href="#set&lt;T>">set&lt;T&gt;(T[])</a><a class="nav-link" href="#Set&lt;T>">Set&lt;T&gt;()</a><a class="nav-link" href="#Set&lt;T>">Set&lt;T&gt;(T)</a><a class="nav-link" href="#Set&lt;T>">Set&lt;T&gt;(T[])</a><a class="nav-link" href="#Some&lt;T>">Some&lt;T&gt;(T)</a><a class="nav-link" href="#Some&lt;T>">Some&lt;T&gt;(T?)</a><a class="nav-link" href="#somes&lt;T>">somes&lt;T&gt;(IEnumerable&lt;T?&gt;)</a><a class="nav-link" href="#somes&lt;T>">somes&lt;T&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;)</a><a class="nav-link" href="#somesUnsafe&lt;T>">somesUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;)</a><a class="nav-link" href="#SomeUnsafe&lt;T>">SomeUnsafe&lt;T&gt;(T)</a><a class="nav-link" href="#stack&lt;T>">stack&lt;T&gt;()</a><a class="nav-link" href="#Stack&lt;T>">Stack&lt;T&gt;()</a><a class="nav-link" href="#Stack&lt;T>">Stack&lt;T&gt;(T[])</a><a class="nav-link" href="#State&lt;S, T>">State&lt;S, T&gt;(T)</a><a class="nav-link" href="#subtract&lt;L, R>">subtract&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)</a><a class="nav-link" href="#subtract&lt;L, R>">subtract&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(T?, T?)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)</a><a class="nav-link" href="#subtract&lt;T>">subtract&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)</a><a class="nav-link" href="#sum">sum(NewType&lt;int&gt;)</a><a class="nav-link" href="#sum">sum(int?)</a><a class="nav-link" href="#sum">sum(Task&lt;int&gt;)</a><a class="nav-link" href="#sum">sum(Tuple&lt;int, int, int&gt;)</a><a class="nav-link" href="#sum">sum(Tuple&lt;double, double, double&gt;)</a><a class="nav-link" href="#sum">sum(Tuple&lt;float, float, float&gt;)</a><a class="nav-link" href="#sum">sum(Tuple&lt;decimal, decimal, decimal&gt;)</a><a class="nav-link" href="#sum&lt;T1, T2>">sum&lt;T1, T2&gt;(Tuple&lt;int, int&gt;)</a><a class="nav-link" href="#sum&lt;T1, T2>">sum&lt;T1, T2&gt;(Tuple&lt;double, double&gt;)</a><a class="nav-link" href="#sum&lt;T1, T2>">sum&lt;T1, T2&gt;(Tuple&lt;float, float&gt;)</a><a class="nav-link" href="#sum&lt;T1, T2>">sum&lt;T1, T2&gt;(Tuple&lt;decimal, decimal&gt;)</a><a class="nav-link" href="#sumAsync">sumAsync(Task&lt;Option&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumAsync">sumAsync(Option&lt;Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumAsync">sumAsync(Task&lt;OptionUnsafe&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumAsync">sumAsync(OptionUnsafe&lt;Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumAsync&lt;L>">sumAsync&lt;L&gt;(Task&lt;Either&lt;L, int&gt;&gt;)</a><a class="nav-link" href="#sumAsync&lt;L>">sumAsync&lt;L&gt;(Either&lt;L, Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#sumAsync&lt;L>">sumAsync&lt;L&gt;(Task&lt;EitherUnsafe&lt;L, int&gt;&gt;)</a><a class="nav-link" href="#sumAsync&lt;L>">sumAsync&lt;L&gt;(EitherUnsafe&lt;L, Task&lt;int&gt;&gt;)</a><a class="nav-link" href="#tell&lt;Env, Out, S>">tell&lt;Env, Out, S&gt;(Out)</a><a class="nav-link" href="#tell&lt;Out>">tell&lt;Out&gt;(Out)</a><a class="nav-link" href="#toArray&lt;L, R>">toArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#toArray&lt;L, R>">toArray&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#toArray&lt;T>">toArray&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toArray&lt;T>">toArray&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#toArray&lt;T>">toArray&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#toArray&lt;T>">toArray&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#toArray&lt;T>">toArray&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#toEither&lt;L, T>">toEither&lt;L, T&gt;(T?, L)</a><a class="nav-link" href="#toEither&lt;L, T>">toEither&lt;L, T&gt;(T?, Func&lt;L&gt;)</a><a class="nav-link" href="#toEitherUnsafe&lt;L, T>">toEitherUnsafe&lt;L, T&gt;(T?, L)</a><a class="nav-link" href="#toEitherUnsafe&lt;L, T>">toEitherUnsafe&lt;L, T&gt;(T?, Func&lt;L&gt;)</a><a class="nav-link" href="#toList&lt;L, R>">toList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#toList&lt;L, R>">toList&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#toList&lt;T>">toList&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toList&lt;T>">toList&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#toList&lt;T>">toList&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#toList&lt;T>">toList&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#toList&lt;T>">toList&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#toOption&lt;T>">toOption&lt;T&gt;(T?)</a><a class="nav-link" href="#toQuery&lt;L, R>">toQuery&lt;L, R&gt;(Either&lt;L, R&gt;)</a><a class="nav-link" href="#toQuery&lt;L, R>">toQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#toQuery&lt;T>">toQuery&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toQuery&lt;T>">toQuery&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#toQuery&lt;T>">toQuery&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#toQuery&lt;T>">toQuery&lt;T&gt;(Try&lt;T&gt;)</a><a class="nav-link" href="#toQuery&lt;T>">toQuery&lt;T&gt;(TryOption&lt;T&gt;)</a><a class="nav-link" href="#toQueue&lt;T>">toQueue&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toSet&lt;T>">toSet&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toStack&lt;T>">toStack&lt;T&gt;(IEnumerable&lt;T&gt;)</a><a class="nav-link" href="#toString&lt;T>">toString&lt;T&gt;(T)</a><a class="nav-link" href="#toTryOption&lt;L, T>">toTryOption&lt;L, T&gt;(T?, L)</a><a class="nav-link" href="#trifold&lt;T1, T2, T3, S>">trifold&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T1, S&gt;, Func&lt;S, T2, S&gt;, Func&lt;S, T3, S&gt;)</a><a class="nav-link" href="#trifoldBack&lt;T1, T2, T3, S>">trifoldBack&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T3, S&gt;, Func&lt;S, T2, S&gt;, Func&lt;S, T1, S&gt;)</a><a class="nav-link" href="#trimap&lt;T1, T2, T3, R1, R2, R3>">trimap&lt;T1, T2, T3, R1, R2, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, R1&gt;, Func&lt;T2, R2&gt;, Func&lt;T3, R3&gt;)</a><a class="nav-link" href="#Try&lt;T>">Try&lt;T&gt;(Func&lt;T&gt;)</a><a class="nav-link" href="#tryfun&lt;Env, T>">tryfun&lt;Env, T&gt;(Func&lt;Reader&lt;Env, T&gt;&gt;)</a><a class="nav-link" href="#tryfun&lt;Out, T>">tryfun&lt;Out, T&gt;(Func&lt;Writer&lt;Out, T&gt;&gt;)</a><a class="nav-link" href="#tryfun&lt;S, T>">tryfun&lt;S, T&gt;(Func&lt;State&lt;S, T&gt;&gt;)</a><a class="nav-link" href="#tryfun&lt;T>">tryfun&lt;T&gt;(Func&lt;Try&lt;T&gt;&gt;)</a><a class="nav-link" href="#tryfun&lt;T>">tryfun&lt;T&gt;(Func&lt;TryOption&lt;T&gt;&gt;)</a><a class="nav-link" href="#tryread&lt;Env, T>">tryread&lt;Env, T&gt;(Func&lt;Reader&lt;Env, T&gt;&gt;)</a><a class="nav-link" href="#trystate&lt;S, T>">trystate&lt;S, T&gt;(Func&lt;State&lt;S, T&gt;&gt;)</a><a class="nav-link" href="#tryuse&lt;T, R>">tryuse&lt;T, R&gt;(Func&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#tryuse&lt;T, R>">tryuse&lt;T, R&gt;(T, Func&lt;T, R&gt;)</a><a class="nav-link" href="#trywrite&lt;Out, T>">trywrite&lt;Out, T&gt;(Func&lt;Writer&lt;Out, T&gt;&gt;)</a><a class="nav-link" href="#tuple&lt;T1, T2, T3, T4, T5, T6, T7>">tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#Tuple&lt;T1, T2, T3, T4, T5, T6, T7>">Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(T1, T2, T3, T4, T5, T6, T7)</a><a class="nav-link" href="#tuple&lt;T1, T2, T3, T4, T5, T6>">tuple&lt;T1, T2, T3, T4, T5, T6&gt;(T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#Tuple&lt;T1, T2, T3, T4, T5, T6>">Tuple&lt;T1, T2, T3, T4, T5, T6&gt;(T1, T2, T3, T4, T5, T6)</a><a class="nav-link" href="#tuple&lt;T1, T2, T3, T4, T5>">tuple&lt;T1, T2, T3, T4, T5&gt;(T1, T2, T3, T4, T5)</a><a class="nav-link" href="#Tuple&lt;T1, T2, T3, T4, T5>">Tuple&lt;T1, T2, T3, T4, T5&gt;(T1, T2, T3, T4, T5)</a><a class="nav-link" href="#tuple&lt;T1, T2, T3, T4>">tuple&lt;T1, T2, T3, T4&gt;(T1, T2, T3, T4)</a><a class="nav-link" href="#Tuple&lt;T1, T2, T3, T4>">Tuple&lt;T1, T2, T3, T4&gt;(T1, T2, T3, T4)</a><a class="nav-link" href="#tuple&lt;T1, T2, T3>">tuple&lt;T1, T2, T3&gt;(T1, T2, T3)</a><a class="nav-link" href="#Tuple&lt;T1, T2, T3>">Tuple&lt;T1, T2, T3&gt;(T1, T2, T3)</a><a class="nav-link" href="#tuple&lt;T1, T2>">tuple&lt;T1, T2&gt;(T1, T2)</a><a class="nav-link" href="#Tuple&lt;T1, T2>">Tuple&lt;T1, T2&gt;(T1, T2)</a><a class="nav-link" href="#use&lt;T, R>">use&lt;T, R&gt;(Func&lt;T&gt;, Func&lt;T, R&gt;)</a><a class="nav-link" href="#use&lt;T, R>">use&lt;T, R&gt;(T, Func&lt;T, R&gt;)</a><a class="nav-link" href="#use&lt;T, U>">use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#use&lt;T, U>">use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;)</a><a class="nav-link" href="#use&lt;T, U>">use&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#use&lt;T, U>">use&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#with&lt;T, R>">with&lt;T, R&gt;(T, Func&lt;T, R&gt;)</a><a class="nav-link" href="#with&lt;T, R>">with&lt;T, R&gt;(Func&lt;T, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, R>">with&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, R>">with&lt;T1, T2, R&gt;(T1, T2, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, R>">With&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, R>">with&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, R>">with&lt;T1, T2, T3, R&gt;(T1, T2, T3, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, R>">With&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, R>">with&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, R>">With&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5, R>">with&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5, R>">With&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5, T6, R>">with&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5, T6, R>">With&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5, T6, T7, R>">with&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5, T6, T7, R>">With&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5, T6, T7>">with&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5, T6, T7>">With&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5, T6>">with&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5, T6>">With&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4, T5>">with&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4, T5>">With&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3, T4>">with&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3, T4>">With&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)</a><a class="nav-link" href="#with&lt;T1, T2, T3>">with&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)</a><a class="nav-link" href="#With&lt;T1, T2, T3>">With&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)</a><a class="nav-link" href="#with&lt;T1, T2>">with&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)</a><a class="nav-link" href="#With&lt;T1, T2>">With&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)</a><a class="nav-link" href="#Writer&lt;Out, T>">Writer&lt;Out, T&gt;(T)</a><a class="nav-link" href="#Writer&lt;Out, T>">Writer&lt;Out, T&gt;(T, IEnumerable&lt;Out&gt;)</a></div><div class="content-panel"><h1 >Prelude Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="ident">Prelude</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Fields</h2><div class="member-title"><a name="centimeter"></a>centimeter</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimeter </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">centimeter</span></div></div></div><div class="member-title"><a name="centimeter2"></a>centimeter2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimeter squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">centimeter2</span></div></div></div><div class="member-title"><a name="centimeters"></a>centimeters</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimeters </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">centimeters</span></div></div></div><div class="member-title"><a name="centimetre"></a>centimetre</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimetre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">centimetre</span></div></div></div><div class="member-title"><a name="centimetre2"></a>centimetre2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimetre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">centimetre2</span></div></div></div><div class="member-title"><a name="centimetres"></a>centimetres</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimetres </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">centimetres</span></div></div></div><div class="member-title"><a name="cm"></a>cm</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimetre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">cm</span></div></div></div><div class="member-title"><a name="cm2"></a>cm2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Centimetre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">cm2</span></div></div></div><div class="member-title"><a name="day"></a>day</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Day </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">day</span></div></div></div><div class="member-title"><a name="days"></a>days</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Day </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">days</span></div></div></div><div class="member-title"><a name="feet"></a>feet</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Feet </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">feet</span></div></div></div><div class="member-title"><a name="foot"></a>foot</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Feet </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">foot</span></div></div></div><div class="member-title"><a name="ft"></a>ft</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Feet </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">ft</span></div></div></div><div class="member-title"><a name="hour"></a>hour</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">hour</span></div></div></div><div class="member-title"><a name="hours"></a>hours</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">hours</span></div></div></div><div class="member-title"><a name="hr"></a>hr</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">hr</span></div></div></div><div class="member-title"><a name="hrs"></a>hrs</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">hrs</span></div></div></div><div class="member-title"><a name="inch"></a>inch</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Inch </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">inch</span></div></div></div><div class="member-title"><a name="inches"></a>inches</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Inch </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">inches</span></div></div></div><div class="member-title"><a name="kilometer"></a>kilometer</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometer </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">kilometer</span></div></div></div><div class="member-title"><a name="kilometer2"></a>kilometer2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometer squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">kilometer2</span></div></div></div><div class="member-title"><a name="kilometers"></a>kilometers</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometers </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">kilometers</span></div></div></div><div class="member-title"><a name="kilometre"></a>kilometre</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">kilometre</span></div></div></div><div class="member-title"><a name="kilometre2"></a>kilometre2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">kilometre2</span></div></div></div><div class="member-title"><a name="kilometres"></a>kilometres</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometres </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">kilometres</span></div></div></div><div class="member-title"><a name="km"></a>km</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">km</span></div></div></div><div class="member-title"><a name="km2"></a>km2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">km2</span></div></div></div><div class="member-title"><a name="kph"></a>kph</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Kilometres per hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Velocity</span> <span class="ident">kph</span></div></div></div><div class="member-title"><a name="m"></a>m</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">m</span></div></div></div><div class="member-title"><a name="m2"></a>m2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">m2</span></div></div></div><div class="member-title"><a name="meter"></a>meter</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Meter </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">meter</span></div></div></div><div class="member-title"><a name="meter2"></a>meter2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Meter squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">meter2</span></div></div></div><div class="member-title"><a name="meters"></a>meters</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Meters </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">meters</span></div></div></div><div class="member-title"><a name="metre"></a>metre</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">metre</span></div></div></div><div class="member-title"><a name="metre2"></a>metre2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">metre2</span></div></div></div><div class="member-title"><a name="metres"></a>metres</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metres </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">metres</span></div></div></div><div class="member-title"><a name="mile"></a>mile</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Mile </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">mile</span></div></div></div><div class="member-title"><a name="miles"></a>miles</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Mile </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">miles</span></div></div></div><div class="member-title"><a name="millimeter"></a>millimeter</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimeter </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">millimeter</span></div></div></div><div class="member-title"><a name="millimeter2"></a>millimeter2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimeter squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">millimeter2</span></div></div></div><div class="member-title"><a name="millimeters"></a>millimeters</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimeters </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">millimeters</span></div></div></div><div class="member-title"><a name="millimetre"></a>millimetre</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimetre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">millimetre</span></div></div></div><div class="member-title"><a name="millimetre2"></a>millimetre2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimetre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">millimetre2</span></div></div></div><div class="member-title"><a name="millimetres"></a>millimetres</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimetre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">millimetres</span></div></div></div><div class="member-title"><a name="millisecond"></a>millisecond</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millisecond </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">millisecond</span></div></div></div><div class="member-title"><a name="milliseconds"></a>milliseconds</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millisecond </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">milliseconds</span></div></div></div><div class="member-title"><a name="min"></a>min</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Minute </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">min</span></div></div></div><div class="member-title"><a name="mins"></a>mins</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Minute </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">mins</span></div></div></div><div class="member-title"><a name="minute"></a>minute</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Minute </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">minute</span></div></div></div><div class="member-title"><a name="minutes"></a>minutes</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Minute </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">minutes</span></div></div></div><div class="member-title"><a name="mm"></a>mm</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimetre </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">mm</span></div></div></div><div class="member-title"><a name="mm2"></a>mm2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millimetre squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Area</span> <span class="ident">mm2</span></div></div></div><div class="member-title"><a name="mph"></a>mph</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Miles per hour </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Velocity</span> <span class="ident">mph</span></div></div></div><div class="member-title"><a name="ms"></a>ms</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Millisecond </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">ms</span></div></div></div><div class="member-title"><a name="ms2"></a>ms2</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Metres per-second squared </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Accel</span> <span class="ident">ms2</span></div></div></div><div class="member-title"><a name="s"></a>s</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">s</span></div></div></div><div class="member-title"><a name="sec"></a>sec</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">sec</span></div></div></div><div class="member-title"><a name="second"></a>second</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">second</span></div></div></div><div class="member-title"><a name="seconds"></a>seconds</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Time</span> <span class="ident">seconds</span></div></div></div><div class="member-title"><a name="yard"></a>yard</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Yard </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">yard</span></div></div></div><div class="member-title"><a name="yards"></a>yards</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Yard </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">yards</span></div></div></div><div class="member-title"><a name="yd"></a>yd</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Yard </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Length</span> <span class="ident">yd</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="None"></a>None</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >&#39;No value&#39; state of Option T. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionNone</span> <span class="ident">None</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionNone</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="unit"></a>unit</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Unit constructor </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">unit</span>  { <span class="keyword">get</span>; }</div></div></div><h2 >Methods</h2><div class="member-title"><a name="act"></a>act(Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act__Action__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span></div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span> <span class="ident">act</span>(<span class="ident">Action</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span></div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act__Action__f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;R>"></a>act&lt;R&gt;(Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_R_Func_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span> <span class="ident">act</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span></div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_R_Func_R_f_"><div class="section_title">SOURCE</div><div class="code"> () =&gt; f()</div></div></div><div class="member-title"><a name="act&lt;T1, R>"></a>act&lt;T1, R&gt;(Func&lt;T1, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_R_Func_T1_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_R_Func_T1_R_f_"><div class="section_title">SOURCE</div><div class="code"> a1 =&gt; f(a1)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, R>"></a>act&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_R_Func_T1_T2_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_R_Func_T1_T2_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2) =&gt; f(a1, a2)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, R>"></a>act&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_R_Func_T1_T2_T3_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_R_Func_T1_T2_T3_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3) =&gt; f(a1, a2, a3)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, R>"></a>act&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4) =&gt; f(a1, a2, a3, a4)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5, R>"></a>act&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5) =&gt; f(a1, a2, a3, a4, a5)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5, T6, R>"></a>act&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5, a6) =&gt; f(a1, a2, a3, a4, a5, a6)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>act&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper; converts it to an Action by dropping the return value<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string, string&gt; thereIs = ...<br/><br/>     Action&lt;string,Unit&gt; thereIsNoReturn = (string x) =&gt; { thereis(x); };<br/><br/> You can use this function and do:<br/><br/>     var thereIsNoReturn = act(thereIs);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"><span >Action that is the same as the Func passed in, but with the return type dropped</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5, a6, a7) =&gt; f(a1, a2, a3, a4, a5, a6, a7)</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5, T6, T7>"></a>act&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5, T6>"></a>act&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4, T5>"></a>act&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3, T4>"></a>act&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_T4_Action_T1_T2_T3_T4_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_T4_Action_T1_T2_T3_T4_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1, T2, T3>"></a>act&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_T3_Action_T1_T2_T3_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_T3_Action_T1_T2_T3_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1, T2>"></a>act&lt;T1, T2&gt;(Action&lt;T1, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_T2_Action_T1_T2_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_T2_Action_T1_T2_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="act&lt;T1>"></a>act&lt;T1&gt;(Action&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-act_T1_Action_T1_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Action&lt;string&gt; putStr = (string x) =&gt; Console.WriteLine(x);<br/><br/> You can use this function and do:<br/><br/>     var putStr = act((string x) =&gt; Console.WriteLine(x));<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Action to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; <span class="ident">act</span>&lt;<span class="ident">T1</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div><div class="normal"><span >The same Action you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-act_T1_Action_T1_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="append&lt;L, R>"></a>append&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_L_R_Either_L_R_lhs__Either_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Right of one either to the Right of another For numeric values the behaviour is to sum the Rights (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">append</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_L_R_Either_L_R_lhs__Either_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;L, R>"></a>append&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Right of one either to the Right of another For numeric values the behaviour is to sum the Rights (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">append</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_NewType_T_value__NewType_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-append_T_NewType_T_value__NewType_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            value.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(T?, T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_T__lhs__T__rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Some(x) of one option to the Some(y) of another. For numeric values the behaviour is to sum the Somes (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the T type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? lhs, <span class="ident">T</span>? rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"><span >lhs + rhs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-append_T_T__lhs__T__rhs_"><div class="section_title">SOURCE</div><div class="code">
            if (!lhs.HasValue &amp;&amp; !rhs.HasValue) return lhs;  // None  + None  = None
            if (!rhs.HasValue) return lhs;                   // Value + None  = Value
            if (!lhs.HasValue) return rhs;                   // None  + Value = Value
            return TypeDesc.Append(lhs.Value, rhs.Value, TypeDesc&lt;T&gt;.Default);
        </div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_Option_T_lhs__Option_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Some(x) of one option to the Some(y) of another.  If either of the options are None then the result is None For numeric values the behaviour is to sum the Somes (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_T_Option_T_lhs__Option_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Some(x) of one option to the Some(y) of another.  If either of the options are None then the result is None For numeric values the behaviour is to sum the Somes (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_Try_T_lhs__Try_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the Try(x) to Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to sum the Trys (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_T_Try_T_lhs__Try_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T>"></a>append&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T_TryOption_T_lhs__TryOption_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append the TryOption(x) to TryOption(y). If either of the TryOptions throw then the result is Fail If either of the TryOptions return None then the result is None For numeric values the behaviour is to sum the TryOptions (lhs + rhs) For string values the behaviour is to concatenate the strings For Lst/Stck/Que values the behaviour is to concatenate the lists For Map or Set values the behaviour is to merge the sets Otherwise if the R type derives from IAppendable then the behaviour is to call lhs.Append(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs + rhs</span></div></div></div><div style="display:none" id="code-append_T_TryOption_T_lhs__TryOption_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Append(rhs)</div></div></div><div class="member-title"><a name="append&lt;T1, T2, T3, T4>"></a>append&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3&gt;, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T1_T2_T3_T4_Tuple_T1_T2_T3_self__T4__fourth_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append an extra item to the tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fourth</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">T4</span> fourth)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-append_T1_T2_T3_T4_Tuple_T1_T2_T3_self__T4__fourth_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(self.Item1, self.Item2, self.Item3, fourth)</div></div></div><div class="member-title"><a name="append&lt;T1, T2, T3>"></a>append&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2&gt;, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-append_T1_T2_T3_Tuple_T1_T2_self__T3__third_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append an extra item to the tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">third</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">append</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">T3</span> third)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-append_T1_T2_T3_Tuple_T1_T2_self__T3__third_"><div class="section_title">SOURCE</div><div class="code">
            self.Append(third)</div></div></div><div class="member-title"><a name="apply&lt;L, R, Res>"></a>apply&lt;L, R, Res&gt;(Either&lt;L, Func&lt;R, Res&gt;&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_R_Res_Either_L_Func&lt;R, Res>_either__Either_L_R_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt;</div></div><div class="arg-desc">Either function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Res</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt; either, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function</span></div></div></div><div style="display:none" id="code-apply_L_R_Res_Either_L_Func&lt;R, Res>_either__Either_L_R_arg_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;L, R, Res>"></a>apply&lt;L, R, Res&gt;(EitherUnsafe&lt;L, Func&lt;R, Res&gt;&gt;, EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_R_Res_EitherUnsafe_L_Func&lt;R, Res>_either__EitherUnsafe_L_R_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt;</div></div><div class="arg-desc">Either function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Res</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Res</span>&gt;&gt; either, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Res</span>&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function</span></div></div></div><div style="display:none" id="code-apply_L_R_Res_EitherUnsafe_L_Func&lt;R, Res>_either__EitherUnsafe_L_R_arg_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;L, T1, T2, R>"></a>apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_either__Either_L_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; either, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function: an Either function of arity 1</span></div></div></div><div style="display:none" id="code-apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_either__Either_L_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;L, T1, T2, R>"></a>apply&lt;L, T1, T2, R&gt;(Either&lt;L, Func&lt;T1, T2, R&gt;&gt;, Either&lt;L, T1&gt;, Either&lt;L, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_either__Either_L_T1_arg1__Either_L_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Either values to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; either, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg1, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional arguments to the optional function</span></div></div></div><div style="display:none" id="code-apply_L_T1_T2_R_Either_L_Func&lt;T1, T2, R>_either__Either_L_T1_arg1__Either_L_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="apply&lt;L, T1, T2, R>"></a>apply&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, Func&lt;T1, T2, R&gt;&gt;, EitherUnsafe&lt;L, T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_T1_T2_R_EitherUnsafe_L_Func&lt;T1, T2, R>_either__EitherUnsafe_L_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Either value to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; either, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the Either argument to the Either function: an Either function of arity 1</span></div></div></div><div style="display:none" id="code-apply_L_T1_T2_R_EitherUnsafe_L_Func&lt;T1, T2, R>_either__EitherUnsafe_L_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;L, T1, T2, R>"></a>apply&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, Func&lt;T1, T2, R&gt;&gt;, EitherUnsafe&lt;L, T1&gt;, EitherUnsafe&lt;L, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_L_T1_T2_R_EitherUnsafe_L_Func&lt;T1, T2, R>_either__EitherUnsafe_L_T1_arg1__EitherUnsafe_L_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Either values to an Either function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Either argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Either argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; either, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; arg1, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional arguments to the optional function</span></div></div></div><div style="display:none" id="code-apply_L_T1_T2_R_EitherUnsafe_L_Func&lt;T1, T2, R>_either__EitherUnsafe_L_T1_arg1__EitherUnsafe_L_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            either.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="apply&lt;T, R>"></a>apply&lt;T, R&gt;(Option&lt;Func&lt;T, R&gt;&gt;, Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T_R_Option_Func&lt;T, R>_option__Option_T_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Optional value to an Optional function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional argument to the optional function</span></div></div></div><div style="display:none" id="code-apply_T_R_Option_Func&lt;T, R>_option__Option_T_arg_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T, R>"></a>apply&lt;T, R&gt;(OptionUnsafe&lt;Func&lt;T, R&gt;&gt;, OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T_R_OptionUnsafe_Func&lt;T, R>_option__OptionUnsafe_T_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Optional value to an Optional function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional argument to the optional function</span></div></div></div><div style="display:none" id="code-apply_T_R_OptionUnsafe_Func&lt;T, R>_option__OptionUnsafe_T_arg_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T, R>"></a>apply&lt;T, R&gt;(Try&lt;Func&lt;T, R&gt;&gt;, Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T_R_Try_Func&lt;T, R>_self__Try_T_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply a Try value to a Try function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the Try argument to the Try function</span></div></div></div><div style="display:none" id="code-apply_T_R_Try_Func&lt;T, R>_self__Try_T_arg_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T, R>"></a>apply&lt;T, R&gt;(TryOption&lt;Func&lt;T, R&gt;&gt;, TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T_R_TryOption_Func&lt;T, R>_self__TryOption_T_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply a TryOption value to a TryOption function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">TryOption function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">TryOption argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the TryOption argument to the TryOption function</span></div></div></div><div style="display:none" id="code-apply_T_R_TryOption_Func&lt;T, R>_self__TryOption_T_arg_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(Option&lt;Func&lt;T1, T2, R&gt;&gt;, Option&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_Option_Func&lt;T1, T2, R>_option__Option_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Optional value to an Optional function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the optional argument to the optional function: an optonal function of arity 1</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_Option_Func&lt;T1, T2, R>_option__Option_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(Option&lt;Func&lt;T1, T2, R&gt;&gt;, Option&lt;T1&gt;, Option&lt;T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_Option_Func&lt;T1, T2, R>_option__Option_T1_arg1__Option_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Optional values to an Optional function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt; arg1, <span class="ident">Option</span>&lt;<span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional arguments to the optional function</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_Option_Func&lt;T1, T2, R>_option__Option_T1_arg1__Option_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_OptionUnsafe_Func&lt;T1, T2, R>_option__OptionUnsafe_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply an Optional value to an Optional function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the optional argument to the optional function: an optonal function of arity 1</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_OptionUnsafe_Func&lt;T1, T2, R>_option__OptionUnsafe_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(OptionUnsafe&lt;Func&lt;T1, T2, R&gt;&gt;, OptionUnsafe&lt;T1&gt;, OptionUnsafe&lt;T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_OptionUnsafe_Func&lt;T1, T2, R>_option__OptionUnsafe_T1_arg1__OptionUnsafe_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Optional values to an Optional function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Optional function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Optional argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; option, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; arg1, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the optional arguments to the optional function</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_OptionUnsafe_Func&lt;T1, T2, R>_option__OptionUnsafe_T1_arg1__OptionUnsafe_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            option.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_Try_Func&lt;T1, T2, R>_self__Try_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply a Try value to a Try function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the Try argument to the Try function: a Try function of arity 1</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_Try_Func&lt;T1, T2, R>_self__Try_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(Try&lt;Func&lt;T1, T2, R&gt;&gt;, Try&lt;T1&gt;, Try&lt;T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_Try_Func&lt;T1, T2, R>_self__Try_T1_arg1__Try_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply Try values to a Try function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Try function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Try argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Try argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; arg1, <span class="ident">Try</span>&lt;<span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the Try arguments to the Try function</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_Try_Func&lt;T1, T2, R>_self__Try_T1_arg1__Try_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(TryOption&lt;Func&lt;T1, T2, R&gt;&gt;, TryOption&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_TryOption_Func&lt;T1, T2, R>_self__TryOption_T1_arg_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply a TryOption value to a TryOption function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">TryOption function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">TryOption argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt; arg)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Returns the result of applying the TryOption argument to the TryOption function: a TryOption function of arity 1</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_TryOption_Func&lt;T1, T2, R>_self__TryOption_T1_arg_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg)</div></div></div><div class="member-title"><a name="apply&lt;T1, T2, R>"></a>apply&lt;T1, T2, R&gt;(TryOption&lt;Func&lt;T1, T2, R&gt;&gt;, TryOption&lt;T1&gt;, TryOption&lt;T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-apply_T1_T2_R_TryOption_Func&lt;T1, T2, R>_self__TryOption_T1_arg1__TryOption_T2_arg2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Apply TryOption values to a TryOption function of arity 2 </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">TryOption function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg1</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">TryOption argument</div></div><div class="arg"><div class="arg-header"><div class="arg-name">arg2</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T2</span>&gt;</div></div><div class="arg-desc">TryOption argument</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">apply</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt; arg1, <span class="ident">TryOption</span>&lt;<span class="ident">T2</span>&gt; arg2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Returns the result of applying the TryOption arguments to TryOption Try function</span></div></div></div><div style="display:none" id="code-apply_T1_T2_R_TryOption_Func&lt;T1, T2, R>_self__TryOption_T1_arg1__TryOption_T2_arg2_"><div class="section_title">SOURCE</div><div class="code">
            self.Apply(arg1, arg2)</div></div></div><div class="member-title"><a name="array&lt;T>"></a>array&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-array_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Array&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">array</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-array_T_"><div class="section_title">SOURCE</div><div class="code">
            new T[0]</div></div></div><div class="member-title"><a name="array&lt;T>"></a>array&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-array_T_T__item_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Array&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">array</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> item)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-array_T_T__item_"><div class="section_title">SOURCE</div><div class="code">
            new T[1] {item}</div></div></div><div class="member-title"><a name="array&lt;T>"></a>array&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-array_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Array&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">array</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-array_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            var a = new T[items.Length];
            int i = 0;
            foreach (var item in items)
            {
                a[i] = item;
                i++;
            }
            return a;
        </div></div></div><div class="member-title"><a name="Array&lt;T>"></a>Array&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Array_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">Array</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-Array_T_"><div class="section_title">SOURCE</div><div class="code">
            new T[0]</div></div></div><div class="member-title"><a name="Array&lt;T>"></a>Array&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Array_T_T__item_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">Array</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> item)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-Array_T_T__item_"><div class="section_title">SOURCE</div><div class="code">
            new T[1] { item }</div></div></div><div class="member-title"><a name="Array&lt;T>"></a>Array&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Array_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">Array</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-Array_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            var a = new T[items.Length];
            int i = 0;
            foreach (var item in items)
            {
                a[i] = item;
                i++;
            }
            return a;
        </div></div></div><div class="member-title"><a name="ask&lt;Env, Out, S, Ret>"></a>ask&lt;Env, Out, S, Ret&gt;(Func&lt;Env, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ask_Env_Out_S_Ret_Func_Env_Ret_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >RWS monad &#39;ask&#39; Gets the &#39;environment&#39; and maps it </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt; <span class="ident">ask</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">Ret</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Rws monad with the mapped environment in as the wrapped value</span></div></div></div><div style="display:none" id="code-ask_Env_Out_S_Ret_Func_Env_Ret_map_"><div class="section_title">SOURCE</div><div class="code">
            rws =&gt; new RwsResult&lt;Out, S, Ret&gt;(new Out[0], rws.Item2, map(rws.Item1))</div></div></div><div class="member-title"><a name="ask&lt;Env, Out, S>"></a>ask&lt;Env, Out, S&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ask_Env_Out_S_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >RWS monad &#39;ask&#39; Gets the &#39;environment&#39; so it can be used  </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Env</span>&gt; <span class="ident">ask</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Env</span>&gt;</div><div class="normal"><span >Rws monad with the environment in as the wrapped value</span></div></div></div><div style="display:none" id="code-ask_Env_Out_S_"><div class="section_title">SOURCE</div><div class="code">
            rws =&gt; new RwsResult&lt;Out, S, Env&gt;(new Out[0], rws.Item2, rws.Item1)</div></div></div><div class="member-title"><a name="ask&lt;Env>"></a>ask&lt;Env&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ask_Env_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Reader monad &#39;ask&#39; Gets the &#39;environment&#39; so it can be used  </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Env</span>&gt; <span class="ident">ask</span>&lt;<span class="ident">Env</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">Env</span>&gt;</div><div class="normal"><span >Reader monad with the environment in as the wrapped value</span></div></div></div><div style="display:none" id="code-ask_Env_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; new ReaderResult&lt;Env&gt;(env)</div></div></div><div class="member-title"><a name="asks&lt;Env, R>"></a>asks&lt;Env, R&gt;(Func&lt;Env, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-asks_Env_R_Func_Env_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Reader monad &#39;ask&#39; Gets the &#39;environment&#39; and maps it </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt; <span class="ident">asks</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Reader monad with the mapped environment in as the wrapped value</span></div></div></div><div style="display:none" id="code-asks_Env_R_Func_Env_R_map_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; new ReaderResult&lt;R&gt;(map(env))</div></div></div><div class="member-title"><a name="bifold&lt;T1, T2, S>"></a>bifold&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T1, S&gt;, Func&lt;S, T2, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bifold_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T1_S_firstFold__Func_S_T2_S_secondFold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">bifold</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt; firstFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt; secondFold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-bifold_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T1_S_firstFold__Func_S_T2_S_secondFold_"><div class="section_title">SOURCE</div><div class="code">
            self.BiFold(state, firstFold, secondFold)</div></div></div><div class="member-title"><a name="bifoldBack&lt;T1, T2, S>"></a>bifoldBack&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T2, S&gt;, Func&lt;S, T1, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bifoldBack_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T2_S_firstFold__Func_S_T1_S_secondFold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-fold back </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">bifoldBack</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt; firstFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt; secondFold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-bifoldBack_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T2_S_firstFold__Func_S_T1_S_secondFold_"><div class="section_title">SOURCE</div><div class="code">
            self.BiFoldBack(state, firstFold, secondFold)</div></div></div><div class="member-title"><a name="bimap&lt;L, R, LRet, RRet>"></a>bimap&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bimap_L_R_LRet_RRet_Either_L_R_either__Func_R_RRet_Right__Func_L_LRet_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div><div class="arg-desc">Right map function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div><div class="arg-desc">Left map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">bimap</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-bimap_L_R_LRet_RRet_Either_L_R_either__Func_R_RRet_Right__Func_L_LRet_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.BiMap(Right, Left)</div></div></div><div class="member-title"><a name="bimap&lt;L, R, LRet, RRet>"></a>bimap&lt;L, R, LRet, RRet&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bimap_L_R_LRet_RRet_EitherUnsafe_L_R_either__Func_R_RRet_Right__Func_L_LRet_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div><div class="arg-desc">Right map function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div><div class="arg-desc">Left map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">bimap</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-bimap_L_R_LRet_RRet_EitherUnsafe_L_R_either__Func_R_RRet_Right__Func_L_LRet_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.BiMap(Right, Left)</div></div></div><div class="member-title"><a name="bimap&lt;T1, T2, R1, R2>"></a>bimap&lt;T1, T2, R1, R2&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, R1&gt;, Func&lt;T2, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bimap_T1_T2_R1_R2_Tuple_T1_T2_self__Func_T1_R1_firstMap__Func_T2_R2_secondMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt; <span class="ident">bimap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R1</span>, <span class="ident">R2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt; firstMap, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt; secondMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bimap_T1_T2_R1_R2_Tuple_T1_T2_self__Func_T1_R1_firstMap__Func_T2_R2_secondMap_"><div class="section_title">SOURCE</div><div class="code">
            self.BiMap(firstMap, secondMap)</div></div></div><div class="member-title"><a name="bimapT&lt;L, R, LRet, RRet>"></a>bimapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bimapT_L_R_LRet_RRet_IEnumerable_Either&lt;L, R>_self__Func_R_RRet_Right__Func_L_LRet_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">bimapT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bimapT_L_R_LRet_RRet_IEnumerable_Either&lt;L, R>_self__Func_R_RRet_Right__Func_L_LRet_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.BiMap(Right, Left))</div></div></div><div class="member-title"><a name="bimapT&lt;L, R, LRet, RRet>"></a>bimapT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, RRet&gt;, Func&lt;L, LRet&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bimapT_L_R_LRet_RRet_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_RRet_Right__Func_L_LRet_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">bimapT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">RRet</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">LRet</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bimapT_L_R_LRet_RRet_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_RRet_Right__Func_L_LRet_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.BiMap(Right, Left))</div></div></div><div class="member-title"><a name="bind&lt;L, R, LRet, RRet>"></a>bind&lt;L, R, LRet, RRet&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_LRet_RRet_Either_L_R_either__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Right bind function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Left bind function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_LRet_RRet_Either_L_R_either__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(Right, Left)</div></div></div><div class="member-title"><a name="bind&lt;L, R, LRet, RRet>"></a>bind&lt;L, R, LRet, RRet&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, EitherUnsafe&lt;LRet, RRet&gt;&gt;, Func&lt;L, EitherUnsafe&lt;LRet, RRet&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_LRet_RRet_EitherUnsafe_L_R_either__Func_R_EitherUnsafe&lt;LRet, RRet>_Right__Func_L_EitherUnsafe&lt;LRet, RRet>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Right bind function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div><div class="arg-desc">Left bind function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_LRet_RRet_EitherUnsafe_L_R_either__Func_R_EitherUnsafe&lt;LRet, RRet>_Right__Func_L_EitherUnsafe&lt;LRet, RRet>_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(Right, Left)</div></div></div><div class="member-title"><a name="bind&lt;L, R, Ret>"></a>bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Either&lt;L, Ret&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_Ret_Either_L_R_either__Func_R_Either&lt;L, Ret>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_Ret_Either_L_R_either__Func_R_Either&lt;L, Ret>_binder_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;L, R, Ret>"></a>bind&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_Ret_Either_L_R_either__Func_L_Either&lt;Ret, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_Ret_Either_L_R_either__Func_L_Either&lt;Ret, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;L, R, Ret>"></a>bind&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, EitherUnsafe&lt;L, Ret&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_Ret_EitherUnsafe_L_R_either__Func_R_EitherUnsafe&lt;L, Ret>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_Ret_EitherUnsafe_L_R_either__Func_R_EitherUnsafe&lt;L, Ret>_binder_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;L, R, Ret>"></a>bind&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, EitherUnsafe&lt;Ret, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_L_R_Ret_EitherUnsafe_L_R_either__Func_L_EitherUnsafe&lt;Ret, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function https://en.wikipedia.org/wiki/Monad_(functional_programming) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Bound Either</span></div></div></div><div style="display:none" id="code-bind_L_R_Ret_EitherUnsafe_L_R_either__Func_L_EitherUnsafe&lt;Ret, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            either.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(T?, Func&lt;T, R?&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_T__self__Func_T_R_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>?&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>? <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>?&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div><div class="code"><span class="keyword">where</span> <span class="ident">R</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-bind_T_R_T__self__Func_T_R_binder_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? binder(self.Value)
                : default(R?)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(T?, Func&lt;T, R?&gt;, Func&lt;R?&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_T__self__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>?&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>?&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>? <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>?&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>?&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div><div class="code"><span class="keyword">where</span> <span class="ident">R</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-bind_T_R_T__self__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Option&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_Option_T_option__Func_T_Option&lt;R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_Option_T_option__Func_T_Option&lt;R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            option.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Option&lt;R&gt;&gt;, Func&lt;Option&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_Option_T_option__Func_T_Option&lt;R>_Some__Func_Option&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_Option_T_option__Func_T_Option&lt;R>_Some__Func_Option&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Bind(Some, None)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_OptionUnsafe_T_option__Func_T_OptionUnsafe&lt;R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_OptionUnsafe_T_option__Func_T_OptionUnsafe&lt;R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            option.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_Try_T_tryDel__Func_T_Try&lt;R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_Try_T_tryDel__Func_T_Try&lt;R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;R&gt;&gt;, Func&lt;Exception, Try&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_Try_T_self__Func_T_Try&lt;R>_Succ__Func_Exception_Try&lt;R>_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_Try_T_self__Func_T_Try&lt;R>_Succ__Func_Exception_Try&lt;R>_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Bind(Succ, Fail)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, TryOption&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_TryOption_T_tryDel__Func_T_TryOption&lt;R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_TryOption_T_tryDel__Func_T_TryOption&lt;R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Bind(binder)</div></div></div><div class="member-title"><a name="bind&lt;T, R>"></a>bind&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, TryOption&lt;R&gt;&gt;, Func&lt;TryOption&lt;R&gt;&gt;, Func&lt;Exception, TryOption&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_R_TryOption_T_tryDel__Func_T_TryOption&lt;R>_Some__Func_TryOption&lt;R>_None__Func_Exception_TryOption&lt;R>_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_R_TryOption_T_tryDel__Func_T_TryOption&lt;R>_Some__Func_TryOption&lt;R>_None__Func_Exception_TryOption&lt;R>_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Bind(Some, None, Fail)</div></div></div><div class="member-title"><a name="bind&lt;T, U>"></a>bind&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_U_Task_T_self__Func_T_Task&lt;U>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind operation for Task </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_U_Task_T_self__Func_T_Task&lt;U>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.Bind(bind)</div></div></div><div class="member-title"><a name="bind&lt;T>"></a>bind&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, NewType&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bind_T_NewType_T_value__Func_T_NewType&lt;T>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">bind</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bind_T_NewType_T_value__Func_T_NewType&lt;T>_bind_"><div class="section_title">SOURCE</div><div class="code">
            value.Bind(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Either&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Either&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Either&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Either&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Either&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;Either&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;Either&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_EitherUnsafe_L_R_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_EitherUnsafe_L_R_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_EitherUnsafe&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_EitherUnsafe&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;L, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_EitherUnsafe&lt;L, R2>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_EitherUnsafe&lt;L, R2>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;L, R, R2>"></a>bindAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;EitherUnsafe&lt;L, R2&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_Task&lt;EitherUnsafe&lt;L, R2>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Option_T_self__Func_T_Task&lt;Option&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Option_T_self__Func_T_Task&lt;Option&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Task_Option&lt;T>_self__Func_T_Task&lt;Option&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Task_Option&lt;T>_self__Func_T_Task&lt;Option&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Option&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Task_Option&lt;T>_self__Func_T_Option&lt;R>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Task_Option&lt;T>_self__Func_T_Option&lt;R>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Option&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Option_Task&lt;T>_self__Func_T_Option&lt;R>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Option_Task&lt;T>_self__Func_T_Option&lt;R>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;Option&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Option_Task&lt;T>_self__Func_T_Task&lt;Option&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Option_Task&lt;T>_self__Func_T_Task&lt;Option&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_OptionUnsafe_T_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_OptionUnsafe_T_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;R>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_OptionUnsafe&lt;R>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, OptionUnsafe&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_OptionUnsafe&lt;R>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_OptionUnsafe&lt;R>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindAsync&lt;T, R>"></a>bindAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;OptionUnsafe&lt;R&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">bindAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_Task&lt;OptionUnsafe&lt;R>>_bind_"><div class="section_title">SOURCE</div><div class="code">
            self.BindAsync(bind)</div></div></div><div class="member-title"><a name="bindT&lt;L, R, LRet, RRet>"></a>bindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Either&lt;LRet, RRet&gt;&gt;, Func&lt;L, Either&lt;LRet, RRet&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_L_R_LRet_RRet_IEnumerable_Either&lt;L, R>_self__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_L_R_LRet_RRet_IEnumerable_Either&lt;L, R>_self__Func_R_Either&lt;LRet, RRet>_Right__Func_L_Either&lt;LRet, RRet>_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Bind(Right, Left))</div></div></div><div class="member-title"><a name="bindT&lt;L, R, LRet, RRet>"></a>bindT&lt;L, R, LRet, RRet&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, EitherUnsafe&lt;LRet, RRet&gt;&gt;, Func&lt;L, EitherUnsafe&lt;LRet, RRet&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_L_R_LRet_RRet_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_EitherUnsafe&lt;LRet, RRet>_Right__Func_L_EitherUnsafe&lt;LRet, RRet>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">LRet</span>, <span class="ident">RRet</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_L_R_LRet_RRet_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_EitherUnsafe&lt;LRet, RRet>_Right__Func_L_EitherUnsafe&lt;LRet, RRet>_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Bind(Right, Left))</div></div></div><div class="member-title"><a name="bindT&lt;L, R, Ret>"></a>bindT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Either&lt;Ret, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_L_R_Ret_IEnumerable_Either&lt;L, R>_self__Func_L_Either&lt;Ret, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_L_R_Ret_IEnumerable_Either&lt;L, R>_self__Func_L_Either&lt;Ret, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Bind(binder))</div></div></div><div class="member-title"><a name="bindT&lt;L, R, Ret>"></a>bindT&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, EitherUnsafe&lt;Ret, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bindT_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_EitherUnsafe&lt;Ret, R>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">bindT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-bindT_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_EitherUnsafe&lt;Ret, R>_binder_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Bind(binder))</div></div></div><div class="member-title"><a name="choose&lt;S, T>"></a>choose&lt;S, T&gt;(State&lt;S, Option&lt;T&gt;&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-choose_S_T_State_S_Option&lt;T>_monads_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Chooses the first monad result that has a Some(x) for the value </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">monads</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; <span class="ident">choose</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;[] monads)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-choose_S_T_State_S_Option&lt;T>_monads_"><div class="section_title">SOURCE</div><div class="code">
            return state =&gt;
            {
                foreach (var monad in monads)
                {
                    var res = monad(state);
                    if (!res.IsBottom &amp;&amp; res.Value.IsSome)
                    {
                        return res;
                    }
                }
                return StateResult.Return&lt;S, Option&lt;T&gt;&gt;(state, None);
            };
        </div></div></div><div class="member-title"><a name="compose&lt;T1, T2, T3, T4, T5, T6, T7>"></a>compose&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;, Func&lt;T5, T6&gt;, Func&lt;T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-compose_T1_T2_T3_T4_T5_T6_T7_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d__Func_T5_T6_e__Func_T6_T7_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Function composition </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T7</span>&gt; <span class="ident">compose</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; a, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; b, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt; c, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt; d, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt; e, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T7</span>&gt;</div><div class="normal"><span >c(b(a(v)))</span></div></div></div><div style="display:none" id="code-compose_T1_T2_T3_T4_T5_T6_T7_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d__Func_T5_T6_e__Func_T6_T7_f_"><div class="section_title">SOURCE</div><div class="code">
            v =&gt; f(e(d(c(b(a(v))))))</div></div></div><div class="member-title"><a name="compose&lt;T1, T2, T3, T4, T5, T6>"></a>compose&lt;T1, T2, T3, T4, T5, T6&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;, Func&lt;T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-compose_T1_T2_T3_T4_T5_T6_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d__Func_T5_T6_e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Function composition </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T6</span>&gt; <span class="ident">compose</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; a, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; b, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt; c, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt; d, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt; e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T6</span>&gt;</div><div class="normal"><span >c(b(a(v)))</span></div></div></div><div style="display:none" id="code-compose_T1_T2_T3_T4_T5_T6_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d__Func_T5_T6_e_"><div class="section_title">SOURCE</div><div class="code">
            v =&gt; e(d(c(b(a(v)))))</div></div></div><div class="member-title"><a name="compose&lt;T1, T2, T3, T4, T5>"></a>compose&lt;T1, T2, T3, T4, T5&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;, Func&lt;T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-compose_T1_T2_T3_T4_T5_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Function composition </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T5</span>&gt; <span class="ident">compose</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; a, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; b, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt; c, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt; d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T5</span>&gt;</div><div class="normal"><span >c(b(a(v)))</span></div></div></div><div style="display:none" id="code-compose_T1_T2_T3_T4_T5_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c__Func_T4_T5_d_"><div class="section_title">SOURCE</div><div class="code">
            v =&gt; d(c(b(a(v))))</div></div></div><div class="member-title"><a name="compose&lt;T1, T2, T3, T4>"></a>compose&lt;T1, T2, T3, T4&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;, Func&lt;T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-compose_T1_T2_T3_T4_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Function composition </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T4</span>&gt; <span class="ident">compose</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; a, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; b, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt; c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T4</span>&gt;</div><div class="normal"><span >c(b(a(v)))</span></div></div></div><div style="display:none" id="code-compose_T1_T2_T3_T4_Func_T1_T2_a__Func_T2_T3_b__Func_T3_T4_c_"><div class="section_title">SOURCE</div><div class="code">
            v =&gt; c(b(a(v)))</div></div></div><div class="member-title"><a name="compose&lt;T1, T2, T3>"></a>compose&lt;T1, T2, T3&gt;(Func&lt;T1, T2&gt;, Func&lt;T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-compose_T1_T2_T3_Func_T1_T2_a__Func_T2_T3_b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Function composition </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T3</span>&gt; <span class="ident">compose</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; a, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T3</span>&gt;</div><div class="normal"><span >b(a(v))</span></div></div></div><div style="display:none" id="code-compose_T1_T2_T3_Func_T1_T2_a__Func_T2_T3_b_"><div class="section_title">SOURCE</div><div class="code">
            v =&gt; b(a(v))</div></div></div><div class="member-title"><a name="cons&lt;T>"></a>cons&lt;T&gt;(T, IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-cons_T_T__head__IEnumerable_T_tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Construct a list from head and tail head becomes the first item in the list Is lazy </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">head</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">tail</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Cons&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">cons</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">T</span> head, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-cons_T_T__head__IEnumerable_T_tail_"><div class="section_title">SOURCE</div><div class="code">
            yield return head;
            foreach (var item in tail)
            {
                yield return item;
            }
        </div></div></div><div class="member-title"><a name="cons&lt;T>"></a>cons&lt;T&gt;(T, Lst&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-cons_T_T__head__Lst_T_tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Construct a list from head and tail </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">head</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">tail</div><div class="arg-type"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Cons&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">cons</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">T</span> head, <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-cons_T_T__head__Lst_T_tail_"><div class="section_title">SOURCE</div><div class="code">
            tail.Insert(0, head)</div></div></div><div class="member-title"><a name="Cons&lt;T>"></a>Cons&lt;T&gt;(T, IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Cons_T_T__head__IEnumerable_T_tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Construct a list from head and tail head becomes the first item in the list Is lazy </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">head</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">tail</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Cons</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">T</span> head, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Cons_T_T__head__IEnumerable_T_tail_"><div class="section_title">SOURCE</div><div class="code">
            yield return head;
            foreach (var item in tail)
            {
                yield return item;
            }
        </div></div></div><div class="member-title"><a name="Cons&lt;T>"></a>Cons&lt;T&gt;(T, Lst&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Cons_T_T__head__Lst_T_tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Construct a list from head and tail </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">head</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">tail</div><div class="arg-type"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Cons</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">T</span> head, <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Cons_T_T__head__Lst_T_tail_"><div class="section_title">SOURCE</div><div class="code">
            tail.Insert(0, head)</div></div></div><div class="member-title"><a name="convert&lt;T>"></a>convert&lt;T&gt;(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-convert_T_string__text_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">text</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">convert</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">string</span> text)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-convert_T_string__text_"><div class="section_title">SOURCE</div><div class="code">
            if (text == null)
            {
                return None;
            }

            try
            {
                var val = (T)Convert.ChangeType(text, typeof(T));
                return val;
            }
            catch
            {
                return None;
            }
        </div></div></div><div class="member-title"><a name="count&lt;L, R>"></a>count&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Counts the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to count</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if the Either is in a Right state, 0 otherwise.</span></div></div></div><div style="display:none" id="code-count_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.Count()</div></div></div><div class="member-title"><a name="count&lt;L, R>"></a>count&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Counts the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to count</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if the Either is in a Right state, 0 otherwise.</span></div></div></div><div style="display:none" id="code-count_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.Count()</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(NewType&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_NewType_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_NewType_T_value_"><div class="section_title">SOURCE</div><div class="code">
            1</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_T__self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns 1 if there is a value, 0 otherwise </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if there is a value, 0 otherwise</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-count_T_T__self_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? 1
                : 0</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.Count()</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.Count()</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(Task&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_Task_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the Count of a Task T.  Returns either 1 or 0 if cancelled or faulted. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_Task_T_self_"><div class="section_title">SOURCE</div><div class="code"> self.Count()</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Count()</div></div></div><div class="member-title"><a name="count&lt;T>"></a>count&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-count_T_TryOption_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">count</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-count_T_TryOption_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Count()</div></div></div><div class="member-title"><a name="countAsync&lt;L, R>"></a>countAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countAsync_L_R_Task_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">countAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countAsync_L_R_Task_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.CountAsync()</div></div></div><div class="member-title"><a name="countAsync&lt;L, R>"></a>countAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countAsync_L_R_Task_EitherUnsafe&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">countAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countAsync_L_R_Task_EitherUnsafe&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.CountAsync()</div></div></div><div class="member-title"><a name="countAsync&lt;T>"></a>countAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countAsync_T_Task_Option&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">countAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countAsync_T_Task_Option&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.CountAsync()</div></div></div><div class="member-title"><a name="countAsync&lt;T>"></a>countAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-countAsync_T_Task_OptionUnsafe&lt;T>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">countAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-countAsync_T_Task_OptionUnsafe&lt;T>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.CountAsync()</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, R>"></a>curry&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_R_Func_T1_T2_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;f&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_R_Func_T1_T2_R_f_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; f(a, b)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, R>"></a>curry&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_R_Func_T1_T2_T3_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;f&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_R_Func_T1_T2_T3_R_f_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; f(a, b, c)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, R>"></a>curry&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;f&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; f(a, b, c, d)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, R>"></a>curry&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;f&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; f(a, b, c, d, e)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, T6, R>"></a>curry&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;func&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)(f)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; (T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>curry&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;func&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)(f)(g)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; (T6 f) =&gt; (T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;func&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)(f)(g)(h)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; (T6 f) =&gt; (T7 g) =&gt; (T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;func&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)(f)(g)(h)(i)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; (T6 f) =&gt; (T7 g) =&gt; (T8 h) =&gt; (T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>curry&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-curry_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Curry the function &#39;func&#39; provided. You can then partially apply by calling: <br/><br/>     var curried = curry(f);     var r = curried(a)(b)(c)(d)(e)(f)(g)(h)(i)(j)<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">Func</span>&lt;<span class="ident">T10</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; <span class="ident">curry</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">Func</span>&lt;<span class="ident">T10</span>, <span class="ident">R</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-curry_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; (T2 b) =&gt; (T3 c) =&gt; (T4 d) =&gt; (T5 e) =&gt; (T6 f) =&gt; (T7 g) =&gt; (T8 h) =&gt; (T9 i) =&gt; (T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="delay"></a>delay(Action, TimeSpan)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-delay__Action__f__TimeSpan__delayFor_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Execute an action after a specified delay </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span></div></div><div class="arg-desc">Action to execute</div></div><div class="arg"><div class="arg-header"><div class="arg-name">delayFor</div><div class="arg-type"><span class="ident">TimeSpan</span></div></div><div class="arg-desc">Time span to delay for</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">delay</span>(<span class="ident">Action</span> f, <span class="ident">TimeSpan</span> delayFor)</div></div><div style="display:none" id="code-delay__Action__f__TimeSpan__delayFor_"><div class="section_title">SOURCE</div><div class="code">
            if (delayFor.TotalMilliseconds &lt; 1)
            {
                f();
            }
            else
            {
                Task.Delay(delayFor).ContinueWith(_ =&gt; f());
            }
            return unit;
        </div></div></div><div class="member-title"><a name="delay"></a>delay(Action, DateTime)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-delay__Action__f__DateTime__delayUntil_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Execute a function at a specific time </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span></div></div><div class="arg-desc">Action to execute</div></div><div class="arg"><div class="arg-header"><div class="arg-name">delayUntil</div><div class="arg-type"><span class="ident">DateTime</span></div></div><div class="arg-desc">DateTime to wake up at.</div></div><div class="section_title">REMARKS</div><span >This will fail to be accurate across a Daylight Saving Time boundary </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">delay</span>(<span class="ident">Action</span> f, <span class="ident">DateTime</span> delayUntil)</div></div><div style="display:none" id="code-delay__Action__f__DateTime__delayUntil_"><div class="section_title">SOURCE</div><div class="code">
            delay(f, delayUntil.ToUniversalTime() - DateTime.UtcNow)</div></div></div><div class="member-title"><a name="delay&lt;T>"></a>delay&lt;T&gt;(Func&lt;T&gt;, TimeSpan)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-delay_T_Func_T_f__TimeSpan__delayFor_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Execute a function after a specified delay </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Function to execute</div></div><div class="arg"><div class="arg-header"><div class="arg-name">delayFor</div><div class="arg-type"><span class="ident">TimeSpan</span></div></div><div class="arg-desc">Time span to delay for</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">delay</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; f, <span class="ident">TimeSpan</span> delayFor)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >IObservable T with the result</span></div></div></div><div style="display:none" id="code-delay_T_Func_T_f__TimeSpan__delayFor_"><div class="section_title">SOURCE</div><div class="code">
            delayFor.TotalMilliseconds &lt; 1
                ? Observable.Return(f()).Take(1)
                : Task.Delay(delayFor).ContinueWith(_ =&gt; f()).ToObservable().Take(1)</div></div></div><div class="member-title"><a name="delay&lt;T>"></a>delay&lt;T&gt;(Func&lt;T&gt;, DateTime)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-delay_T_Func_T_f__DateTime__delayUntil_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Execute a function at a specific time </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Function to execute</div></div><div class="arg"><div class="arg-header"><div class="arg-name">delayUntil</div><div class="arg-type"><span class="ident">DateTime</span></div></div><div class="arg-desc">DateTime to wake up at.</div></div><div class="section_title">REMARKS</div><span >This will fail to be accurate across a Daylight Saving Time boundary </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">delay</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; f, <span class="ident">DateTime</span> delayUntil)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >IObservable T with the result</span></div></div></div><div style="display:none" id="code-delay_T_Func_T_f__DateTime__delayUntil_"><div class="section_title">SOURCE</div><div class="code">
            delay(f, delayUntil.ToUniversalTime() - DateTime.UtcNow)</div></div></div><div class="member-title"><a name="divide&lt;L, R>"></a>divide&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_L_R_Either_L_R_lhs__Either_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide the Rights  For numeric values the behaviour is to divide the Rights (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_L_R_Either_L_R_lhs__Either_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;L, R>"></a>divide&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide the Rights  For numeric values the behaviour is to divide the Rights (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_NewType_T_value__NewType_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-divide_T_NewType_T_value__NewType_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            value.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(T?, T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_T__lhs__T__rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide the Somes. For numeric values the behaviour is to divide the Somes (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the T type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? lhs, <span class="ident">T</span>? rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"><span >lhs / rhs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-divide_T_T__lhs__T__rhs_"><div class="section_title">SOURCE</div><div class="code">
            if (!lhs.HasValue) return lhs;  // zero / rhs  = zero
            if (!rhs.HasValue) return rhs;  // lhs  / zero = undefined: zero
            return TypeDesc.Divide(lhs.Value, rhs.Value, TypeDesc&lt;T&gt;.Default);
        </div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_Option_T_lhs__Option_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide the Somes.  If either of the options are None then the result is None For numeric values the behaviour is to divide the Somes (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_T_Option_T_lhs__Option_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide the Somes.  If either of the options are None then the result is None For numeric values the behaviour is to divide the Somes (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_Try_T_lhs__Try_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide Try(x) by Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to divide the Trys (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_T_Try_T_lhs__Try_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="divide&lt;T>"></a>divide&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-divide_T_TryOption_T_lhs__TryOption_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divide TryOption(x) by TryOption(y).   If either of the TryOptions throw then the result is Fail If either of the TryOptions return None then the result is None For numeric values the behaviour is to divide the TryOptions (lhs / rhs) For Lst values the behaviour is to divide all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IDivisible then the behaviour is to call lhs.Divide(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">divide</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs / rhs</span></div></div></div><div style="display:none" id="code-divide_T_TryOption_T_lhs__TryOption_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Divide(rhs)</div></div></div><div class="member-title"><a name="empty&lt;T>"></a>empty&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-empty_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an empty IEnumerable T </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use List.empty&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">empty</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-empty_T_"><div class="section_title">SOURCE</div><div class="code">
            new Lst&lt;T&gt;()</div></div></div><div class="member-title"><a name="exceptionIs&lt;E>"></a>exceptionIs&lt;E&gt;(Exception)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exceptionIs_E_Exception__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Identifies an exception as being of type E </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">Exception</span></div></div><div class="arg-desc">Exception to test</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exceptionIs</span>&lt;<span class="ident">E</span>&gt;(<span class="ident">Exception</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if e is of type E</span></div></div></div><div style="display:none" id="code-exceptionIs_E_Exception__e_"><div class="section_title">SOURCE</div><div class="code">
            if (e is E) return true;
            if (e.InnerException == null) return false;
            return exceptionIs&lt;E&gt;(e.InnerException);
        </div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_Either_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-exists_L_R_Either_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_Either_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-exists_L_R_Either_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  False otherwise or if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-exists_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(Right,Left)</div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-exists_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check existence of</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-exists_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;L, R>"></a>exists&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  False otherwise or if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-exists_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Exists(Right, Left)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_NewType_T_value__Func_T_bool_predicate_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">predicate</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; predicate)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_NewType_T_value__Func_T_bool_predicate_"><div class="section_title">SOURCE</div><div class="code">
            predicate(value.Value)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(T?, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_T__self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists Nullable.  Imagine the item has zero or one items depending on whether it&#39;s in a None state or not.  This function runs a predicate against the value if it exists, returns false if it doesn&#39;t. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-exists_T_T__self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? pred(self.Value)
                : false</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_T__self__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Exists Nullable.  Imagine the item has zero or one items depending on whether it&#39;s in a None state or not.  This function runs a predicate against the value if it exists, returns false if it doesn&#39;t. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Some predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">None predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-exists_T_T__self__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_Option_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_Option_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_Option_T_option__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_Option_T_option__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Exists(Some, None)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_OptionUnsafe_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_OptionUnsafe_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_Task_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns false if the Task is cancelled or faulted, otherwise it returns the result of pred(Result) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_Task_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_Try_T_tryDel__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_Try_T_tryDel__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_Try_T_self__Func_T_bool_Succ__Func_Exception_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_Try_T_self__Func_T_bool_Succ__Func_Exception_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(Succ,Fail)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_TryOption_T_tryDel__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_TryOption_T_tryDel__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Exists(pred)</div></div></div><div class="member-title"><a name="exists&lt;T>"></a>exists&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;, Func&lt;Exception, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-exists_T_TryOption_T_tryDel__Func_T_bool_Some__Func_bool_None__Func_Exception_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">exists</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-exists_T_TryOption_T_tryDel__Func_T_bool_Some__Func_bool_None__Func_Exception_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Exists(Some, None, Fail)</div></div></div><div class="member-title"><a name="existsAsync&lt;L, R>"></a>existsAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;L, R>"></a>existsAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;L, R>"></a>existsAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;L, R>"></a>existsAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;T>"></a>existsAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_T_Task_Option&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_T_Task_Option&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;T>"></a>existsAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_T_Option_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_T_Option_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;T>"></a>existsAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_T_Task_OptionUnsafe&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_T_Task_OptionUnsafe&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsAsync&lt;T>"></a>existsAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsAsync_T_OptionUnsafe_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">existsAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-existsAsync_T_OptionUnsafe_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ExistsAsync(pred)</div></div></div><div class="member-title"><a name="existsT&lt;L, R>"></a>existsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(x =&gt; x.Exists(pred))</div></div></div><div class="member-title"><a name="existsT&lt;L, R>"></a>existsT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(x =&gt; x.Exists(Right, Left))</div></div></div><div class="member-title"><a name="existsT&lt;L, R>"></a>existsT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(x =&gt; x.Exists(pred))</div></div></div><div class="member-title"><a name="existsT&lt;L, R>"></a>existsT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-existsT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">existsT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-existsT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Exists(x =&gt; x.Exists(Right, Left))</div></div></div><div class="member-title"><a name="expr"></a>expr(Expression&lt;Action&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr__Expression_Action_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&gt; <span class="ident">expr</span>(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr__Expression_Action_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;R>"></a>expr&lt;R&gt;(Expression&lt;Func&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_R_Expression_Func&lt;R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_R_Expression_Func&lt;R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, R>"></a>expr&lt;T1, R&gt;(Expression&lt;Func&lt;T1, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_R_Expression_Func&lt;T1, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_R_Expression_Func&lt;T1, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, R>"></a>expr&lt;T1, T2, R&gt;(Expression&lt;Func&lt;T1, T2, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_R_Expression_Func&lt;T1, T2, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_R_Expression_Func&lt;T1, T2, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, R>"></a>expr&lt;T1, T2, T3, R&gt;(Expression&lt;Func&lt;T1, T2, T3, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_R_Expression_Func&lt;T1, T2, T3, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_R_Expression_Func&lt;T1, T2, T3, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, R>"></a>expr&lt;T1, T2, T3, T4, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_R_Expression_Func&lt;T1, T2, T3, T4, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_R_Expression_Func&lt;T1, T2, T3, T4, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5, R>"></a>expr&lt;T1, T2, T3, T4, T5, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_R_Expression_Func&lt;T1, T2, T3, T4, T5, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_R_Expression_Func&lt;T1, T2, T3, T4, T5, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5, T6, R>"></a>expr&lt;T1, T2, T3, T4, T5, T6, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, T6, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_T6_R_Expression_Func&lt;T1, T2, T3, T4, T5, T6, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_T6_R_Expression_Func&lt;T1, T2, T3, T4, T5, T6, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>expr&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Expression&lt;Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_T6_T7_R_Expression_Func&lt;T1, T2, T3, T4, T5, T6, T7, R>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_T6_T7_R_Expression_Func&lt;T1, T2, T3, T4, T5, T6, T7, R>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5, T6, T7>"></a>expr&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_T6_T7_Expression_Action&lt;T1, T2, T3, T4, T5, T6, T7>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_T6_T7_Expression_Action&lt;T1, T2, T3, T4, T5, T6, T7>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5, T6>"></a>expr&lt;T1, T2, T3, T4, T5, T6&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5, T6&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_T6_Expression_Action&lt;T1, T2, T3, T4, T5, T6>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_T6_Expression_Action&lt;T1, T2, T3, T4, T5, T6>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4, T5>"></a>expr&lt;T1, T2, T3, T4, T5&gt;(Expression&lt;Action&lt;T1, T2, T3, T4, T5&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_T5_Expression_Action&lt;T1, T2, T3, T4, T5>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_T5_Expression_Action&lt;T1, T2, T3, T4, T5>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3, T4>"></a>expr&lt;T1, T2, T3, T4&gt;(Expression&lt;Action&lt;T1, T2, T3, T4&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_T4_Expression_Action&lt;T1, T2, T3, T4>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_T4_Expression_Action&lt;T1, T2, T3, T4>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2, T3>"></a>expr&lt;T1, T2, T3&gt;(Expression&lt;Action&lt;T1, T2, T3&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_T3_Expression_Action&lt;T1, T2, T3>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_T3_Expression_Action&lt;T1, T2, T3>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1, T2>"></a>expr&lt;T1, T2&gt;(Expression&lt;Action&lt;T1, T2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_T2_Expression_Action&lt;T1, T2>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_T2_Expression_Action&lt;T1, T2>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="expr&lt;T1>"></a>expr&lt;T1&gt;(Expression&lt;Action&lt;T1&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-expr_T1_Expression_Action&lt;T1>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Expression inference </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;&gt; <span class="ident">expr</span>&lt;<span class="ident">T1</span>&gt;(<span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Expression</span>&lt;<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;&gt;</div><div class="normal"><span >Same expression passed in, just gives the type system a chance to infer</span></div></div></div><div style="display:none" id="code-expr_T1_Expression_Action&lt;T1>_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="failed&lt;T>"></a>failed&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failed_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Exception</span>&gt; <span class="ident">failed</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Exception</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-failed_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            map(tryDel, 
                Succ: _  =&gt; new NotSupportedException(),
                Fail: ex =&gt; ex
                )</div></div></div><div class="member-title"><a name="failure&lt;L, R>"></a>failure&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_L_R_Either_L_R_either__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifLeft&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">failure</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_L_R_Either_L_R_either__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            either.Failure(None)</div></div></div><div class="member-title"><a name="failure&lt;L, R>"></a>failure&lt;L, R&gt;(Either&lt;L, R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_L_R_Either_L_R_either__R__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifLeft&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">failure</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">R</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_L_R_Either_L_R_either__R__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            either.Failure(noneValue)</div></div></div><div class="member-title"><a name="failure&lt;T>"></a>failure&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_T_TryOption_T_tryDel__Func_T_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifNone|ifNoneOrFail&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failure</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_T_TryOption_T_tryDel__Func_T_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Failure(Fail)</div></div></div><div class="member-title"><a name="failure&lt;T>"></a>failure&lt;T&gt;(TryOption&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_T_TryOption_T_tryDel__T__failValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">failValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifNone|ifNoneOrFail&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failure</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">T</span> failValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_T_TryOption_T_tryDel__T__failValue_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Failure(failValue)</div></div></div><div class="member-title"><a name="failure&lt;T>"></a>failure&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_T_Option_T_option__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifNone&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failure</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_T_Option_T_option__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Failure(None)</div></div></div><div class="member-title"><a name="failure&lt;T>"></a>failure&lt;T&gt;(Option&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failure_T_Option_T_option__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failure&#39; has been deprecated.  Please use &#39;ifNone&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failure</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failure_T_Option_T_option__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            option.Failure(noneValue)</div></div></div><div class="member-title"><a name="Failure&lt;T>"></a>Failure&lt;T&gt;(TryOption&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Failure_T_TryOption_T_self__T__defaultValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the Some(value) of the TryOption or a default if it&#39;s None or Fail </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;Failure&#39; has been deprecated.  Please use &#39;IfNone|IfNoneOrFail&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">Failure</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">T</span> defaultValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Failure_T_TryOption_T_self__T__defaultValue_"><div class="section_title">SOURCE</div><div class="code">
            if (isnull(defaultValue)) throw new ArgumentNullException(nameof(defaultValue));

            var res = self.Try();
            if (res.IsFaulted || res.Value.IsNone)
                return defaultValue;
            else
                return res.Value.Value;
        </div></div></div><div class="member-title"><a name="Failure&lt;T>"></a>Failure&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Failure_T_TryOption_T_self__Func_T_defaultAction_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the Some(value) of the TryOption or a default if it&#39;s None or Fail </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultAction</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;Failure&#39; has been deprecated.  Please use &#39;IfNone|IfNoneOrFail&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">Failure</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; defaultAction)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Failure_T_TryOption_T_self__Func_T_defaultAction_"><div class="section_title">SOURCE</div><div class="code">
            var res = self.Try();
            if (res.IsFaulted || res.Value.IsNone)
                return defaultAction();
            else
                return res.Value.Value;
        </div></div></div><div class="member-title"><a name="failureUnsafe&lt;L, R>"></a>failureUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifLeftUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">failureUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            either.FailureUnsafe(None)</div></div></div><div class="member-title"><a name="failureUnsafe&lt;L, R>"></a>failureUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_L_R_EitherUnsafe_L_R_either__R__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifLeftUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">failureUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">R</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_L_R_EitherUnsafe_L_R_either__R__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            either.FailureUnsafe(noneValue)</div></div></div><div class="member-title"><a name="failureUnsafe&lt;T>"></a>failureUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;IEnumerable&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list__Func_IEnumerable&lt;T>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifNoneUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">failureUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list__Func_IEnumerable&lt;T>_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(list, v =&gt; new T[1] { v }, None)</div></div></div><div class="member-title"><a name="failureUnsafe&lt;T>"></a>failureUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list__IEnumerable_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifNoneUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">failureUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list__IEnumerable_T_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(list, v =&gt; new T[1] { v }, () =&gt; None)</div></div></div><div class="member-title"><a name="failureUnsafe&lt;T>"></a>failureUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_T_OptionUnsafe_T_option__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifNoneUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failureUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_T_OptionUnsafe_T_option__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            option.FailureUnsafe(None)</div></div></div><div class="member-title"><a name="failureUnsafe&lt;T>"></a>failureUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failureUnsafe_T_OptionUnsafe_T_option__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;failureUnsafe&#39; has been deprecated.  Please use &#39;ifNoneUnsafe&#39; instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">failureUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-failureUnsafe_T_OptionUnsafe_T_option__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            option.FailureUnsafe(noneValue)</div></div></div><div class="member-title"><a name="failwith"></a>failwith(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failwith__string__message_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Raises a lazy Exception with the message provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">message</div><div class="arg-type"><span class="keyword">string</span></div></div><div class="arg-desc">Exception message</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span> <span class="ident">failwith</span>(<span class="keyword">string</span> message)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span></div><div class="normal"><span >Action that when executed throws</span></div></div></div><div style="display:none" id="code-failwith__string__message_"><div class="section_title">SOURCE</div><div class="code">
            () =&gt; { throw new Exception(message); }</div></div></div><div class="member-title"><a name="failwith&lt;R>"></a>failwith&lt;R&gt;(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-failwith_R_string__message_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Raises an Exception wigth the messge provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">message</div><div class="arg-type"><span class="keyword">string</span></div></div><div class="arg-desc">Exception message</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">failwith</span>&lt;<span class="ident">R</span>&gt;(<span class="keyword">string</span> message)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Throws an exception</span></div></div></div><div style="display:none" id="code-failwith_R_string__message_"><div class="section_title">SOURCE</div><div class="code">
            throw new Exception(message);
        </div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_Either_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_Either_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_Either_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Right state it is returned as-is.   If in the Left state the predicate is applied to the Left value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_Either_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state then the Left predicate is run against it. If the Either is in the Right state then the Right predicate is run against it. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(Right, Left)</div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate function</div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Right state it is returned as-is.   If in the Left state the predicate is applied to the Left value. If the predicate returns True the Either is returned as-is. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;L, R>"></a>filter&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-filter the Either </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The Either won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in the Left state then the Left predicate is run against it. If the Either is in the Right state then the Right predicate is run against it. If the predicate returns False the Either is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-filter_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Filter(Right, Left)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(T?, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_T__self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-filter_T_T__self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? pred(self.Value)
                    ? self
                    : default(T?)
                : self</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_T__self__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-filter_T_T__self__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                    ? self
                    : default(T?)
                : None()
                    ? self
                    : default(T?)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_Option_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_Option_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_Option_T_option__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_Option_T_option__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Filter(Some, None)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_OptionUnsafe_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_OptionUnsafe_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_Task_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filters the task.  This throws a BottomException when pred(Result) returns false </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_Task_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_Try_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_Try_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Filter(pred)</div></div></div><div class="member-title"><a name="filter&lt;T>"></a>filter&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filter_T_Try_T_self__Func_T_bool_Succ__Func_Exception_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">filter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filter_T_Try_T_self__Func_T_bool_Succ__Func_Exception_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Filter(Succ, Fail)</div></div></div><div class="member-title"><a name="filterT&lt;L, R>"></a>filterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Filter(pred))</div></div></div><div class="member-title"><a name="filterT&lt;L, R>"></a>filterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Filter(Right, Left))</div></div></div><div class="member-title"><a name="filterT&lt;L, R>"></a>filterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Filter(pred))</div></div></div><div class="member-title"><a name="filterT&lt;L, R>"></a>filterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-filterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">filterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-filterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.Filter(Right, Left))</div></div></div><div class="member-title"><a name="flatten&lt;T>"></a>flatten&lt;T&gt;(Try&lt;Try&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-flatten_T_Try_Try&lt;T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-flatten_T_Try_Try&lt;T>_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Flatten()</div></div></div><div class="member-title"><a name="flatten&lt;T>"></a>flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-flatten_T_Try_Try&lt;Try&lt;T>>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-flatten_T_Try_Try&lt;Try&lt;T>>_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Flatten()</div></div></div><div class="member-title"><a name="flatten&lt;T>"></a>flatten&lt;T&gt;(Try&lt;Try&lt;Try&lt;Try&lt;T&gt;&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-flatten_T_Try_Try&lt;Try&lt;Try&lt;T>>>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">flatten</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-flatten_T_Try_Try&lt;Try&lt;Try&lt;T>>>_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Flatten()</div></div></div><div class="member-title"><a name="fold&lt;L, R, S>"></a>fold&lt;L, R, S&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_L_R_S_Either_L_R_either__S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Right fold function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Left fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_L_R_S_Either_L_R_either__S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, Right, Left)</div></div></div><div class="member-title"><a name="fold&lt;L, R, S>"></a>fold&lt;L, R, S&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_L_R_S_EitherUnsafe_L_R_either__S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Right fold function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Left fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_L_R_S_EitherUnsafe_L_R_either__S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, Right, Left)</div></div></div><div class="member-title"><a name="fold&lt;S, L, R>"></a>fold&lt;S, L, R&gt;(Either&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_L_R_Either_L_R_either__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_L_R_Either_L_R_either__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, L, R>"></a>fold&lt;S, L, R&gt;(Either&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_L_R_Either_L_R_either__S__state__Func_S_L_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_L_R_Either_L_R_either__S__state__Func_S_L_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, L, R>"></a>fold&lt;S, L, R&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_L_R_EitherUnsafe_L_R_either__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_L_R_EitherUnsafe_L_R_either__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, L, R>"></a>fold&lt;S, L, R&gt;(EitherUnsafe&lt;L, R&gt;, S, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_L_R_EitherUnsafe_L_R_either__S__state__Func_S_L_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the either into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_L_R_EitherUnsafe_L_R_either__S__state__Func_S_L_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            either.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(T?, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_T__self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds Nullable into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-fold_S_T_T__self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? folder(state, self.Value)
                : state</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(T?, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_T__self__S__state__Func_S_T_S_Some__Func_S_S_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds Nullable into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Some</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for None</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-fold_S_T_T__self__S__state__Func_S_T_S_Some__Func_S_S_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(state, self.Value)
                : None(state)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(Option&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_Option_T_option__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the option into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Option to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_Option_T_option__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            option.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(Option&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_Option_T_option__S__state__Func_S_T_S_Some__Func_S_S_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the option into an S https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Option to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Some</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for None</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_Option_T_option__S__state__Func_S_T_S_Some__Func_S_S_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Fold(state, Some, None)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(OptionUnsafe&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_OptionUnsafe_T_option__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the option into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Option to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_OptionUnsafe_T_option__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            option.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_Try_T_tryDel__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the value of Try into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_Try_T_tryDel__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(Try&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, Exception, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_Try_T_self__S__state__Func_S_T_S_Succ__Func_S_Exception_S_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the result of Try into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function when Try succeeds</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function when Try fails</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_Try_T_self__S__state__Func_S_T_S_Succ__Func_S_Exception_S_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, Succ, Fail)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(TryOption&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_TryOption_T_tryDel__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the value of TryOption into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_TryOption_T_tryDel__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;S, T>"></a>fold&lt;S, T&gt;(TryOption&lt;T&gt;, S, Func&lt;S, T, S&gt;, Func&lt;S, S&gt;, Func&lt;S, Exception, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_S_T_TryOption_T_tryDel__S__state__Func_S_T_S_Some__Func_S_S_None__Func_S_Exception_S_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the result of TryOption into an S. https://en.wikipedia.org/wiki/Fold_(higher-order_function) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Try to fold</div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Some</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for None</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Fold function for Failure</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Exception</span>, <span class="ident">S</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Folded state</span></div></div></div><div style="display:none" id="code-fold_S_T_TryOption_T_tryDel__S__state__Func_S_T_S_Some__Func_S_S_None__Func_S_Exception_S_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Fold(state, Some, None, Fail)</div></div></div><div class="member-title"><a name="fold&lt;T, S>"></a>fold&lt;T, S&gt;(NewType&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_T_S_NewType_T_value__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-fold_T_S_NewType_T_value__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            value.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;T, S>"></a>fold&lt;T, S&gt;(Task&lt;T&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_T_S_Task_T_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Folds the Task.  Returns folder(state,Result) if not faulted or cancelled.  Returns state otherwise. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-fold_T_S_Task_T_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, folder)</div></div></div><div class="member-title"><a name="fold&lt;T1, T2, S>"></a>fold&lt;T1, T2, S&gt;(Tuple&lt;T1, T2&gt;, S, Func&lt;S, T1, T2, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T1_T2_S_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-fold_T1_T2_S_Tuple_T1_T2_self__S__state__Func_S_T1_T2_S_fold_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, fold)</div></div></div><div class="member-title"><a name="fold&lt;T1, T2, T3, S>"></a>fold&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T1, T2, T3, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fold_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T1_T2_T3_S_fold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">fold</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt; fold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-fold_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T1_T2_T3_S_fold_"><div class="section_title">SOURCE</div><div class="code">
            fold(state, self.Item1, self.Item2, self.Item3)</div></div></div><div class="member-title"><a name="foldAsync&lt;L, R, S>"></a>foldAsync&lt;L, R, S&gt;(Task&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_L_R_S_Task_Either&lt;L, R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_L_R_S_Task_Either&lt;L, R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;L, R, S>"></a>foldAsync&lt;L, R, S&gt;(Either&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_L_R_S_Either_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_L_R_S_Either_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;L, R, S>"></a>foldAsync&lt;L, R, S&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_L_R_S_Task_EitherUnsafe&lt;L, R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_L_R_S_Task_EitherUnsafe&lt;L, R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;L, R, S>"></a>foldAsync&lt;L, R, S&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_L_R_S_EitherUnsafe_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_L_R_S_EitherUnsafe_L_Task&lt;R>_self__S__state__Func_S_R_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;T, S>"></a>foldAsync&lt;T, S&gt;(Task&lt;Option&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_T_S_Task_Option&lt;T>_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_T_S_Task_Option&lt;T>_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;T, S>"></a>foldAsync&lt;T, S&gt;(Option&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_T_S_Option_Task&lt;T>_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_T_S_Option_Task&lt;T>_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;T, S>"></a>foldAsync&lt;T, S&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_T_S_Task_OptionUnsafe&lt;T>_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_T_S_Task_OptionUnsafe&lt;T>_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldAsync&lt;T, S>"></a>foldAsync&lt;T, S&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, S, Func&lt;S, T, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldAsync_T_S_OptionUnsafe_Task&lt;T>_self__S__state__Func_S_T_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">foldAsync</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-foldAsync_T_S_OptionUnsafe_Task&lt;T>_self__S__state__Func_S_T_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.FoldAsync(state, folder)</div></div></div><div class="member-title"><a name="foldT&lt;L, R, S>"></a>foldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_L_R_S_IEnumerable_Either&lt;L, R>_self__S__state__Func_S_L_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">foldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_L_R_S_IEnumerable_Either&lt;L, R>_self__S__state__Func_S_L_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, (s, e) =&gt; e.Fold(s, folder))</div></div></div><div class="member-title"><a name="foldT&lt;L, R, S>"></a>foldT&lt;L, R, S&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_L_R_S_IEnumerable_Either&lt;L, R>_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">foldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_L_R_S_IEnumerable_Either&lt;L, R>_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, (s, e) =&gt; e.Fold(s, Right, Left))</div></div></div><div class="member-title"><a name="foldT&lt;L, R, S>"></a>foldT&lt;L, R, S&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_L_R_S_IEnumerable_EitherUnsafe&lt;L, R>_self__S__state__Func_S_L_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">foldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_L_R_S_IEnumerable_EitherUnsafe&lt;L, R>_self__S__state__Func_S_L_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, (s, e) =&gt; e.Fold(s, folder))</div></div></div><div class="member-title"><a name="foldT&lt;L, R, S>"></a>foldT&lt;L, R, S&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-foldT_L_R_S_IEnumerable_EitherUnsafe&lt;L, R>_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">foldT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-foldT_L_R_S_IEnumerable_EitherUnsafe&lt;L, R>_self__S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Fold(state, (s, e) =&gt; e.Fold(s, Right, Left))</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_Either_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state.   True if the Either is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-forall_L_R_Either_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_Either_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state.   True if the Either is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-forall_L_R_Either_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  True if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-forall_L_R_Either_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(Right, Left)</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state.   True if the Either is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-forall_L_R_EitherUnsafe_L_R_either__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to forall</div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state.   True if the Either is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-forall_L_R_EitherUnsafe_L_R_either__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;L, R>"></a>forall&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Either if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Right predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Left predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  True if the Either is in a bottom state.</span></div></div></div><div style="display:none" id="code-forall_L_R_EitherUnsafe_L_R_either__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.ForAll(Right, Left)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_NewType_T_value__Func_T_bool_predicate_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">predicate</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; predicate)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_NewType_T_value__Func_T_bool_predicate_"><div class="section_title">SOURCE</div><div class="code">
            predicate(value.Value)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(T?, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_T__self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll Nullable.  Imagine the item has zero or one items depending on whether it&#39;s in a None state or not.  This function runs a predicate against the value if it exists, returns true if it doesn&#39;t (because the predicate holds &#39;for all&#39; items). </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-forall_T_T__self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? pred(self.Value)
                : true</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(T?, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_T__self__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ForAll Nullable.  Imagine the item has zero or one items depending on whether it&#39;s in a None state or not.  This function runs a predicate against the value if it exists, returns true if it doesn&#39;t (because the predicate holds &#39;for all&#39; items). </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">Some predicate</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div><div class="arg-desc">None predicate</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-forall_T_T__self__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_Option_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_Option_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Option&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_Option_T_option__Func_T_bool_Some__Func_bool_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_Option_T_option__Func_T_bool_Some__Func_bool_None_"><div class="section_title">SOURCE</div><div class="code">
            option.ForAll(Some, None)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_OptionUnsafe_T_option__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_OptionUnsafe_T_option__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            option.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_Task_T_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns false if the Task is cancelled or faulted, otherwise it returns the result of pred(Result) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_Task_T_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_Try_T_tryDel__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_Try_T_tryDel__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(Try&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;Exception, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_Try_T_tryDel__Func_T_bool_Succ__Func_Exception_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_Try_T_tryDel__Func_T_bool_Succ__Func_Exception_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ForAll(Succ,Fail)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_TryOption_T_tryDel__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_TryOption_T_tryDel__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ForAll(pred)</div></div></div><div class="member-title"><a name="forall&lt;T>"></a>forall&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T, bool&gt;, Func&lt;bool&gt;, Func&lt;Exception, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forall_T_TryOption_T_tryDel__Func_T_bool_Some__Func_bool_None__Func_Exception_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forall</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="keyword">bool</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forall_T_TryOption_T_tryDel__Func_T_bool_Some__Func_bool_None__Func_Exception_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ForAll(Some, None, Fail)</div></div></div><div class="member-title"><a name="forallAsync&lt;L, R>"></a>forallAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_L_R_Task_Either&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;L, R>"></a>forallAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_L_R_Either_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;L, R>"></a>forallAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;L, R>"></a>forallAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;T>"></a>forallAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_T_Task_Option&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_T_Task_Option&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;T>"></a>forallAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_T_Option_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_T_Option_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;T>"></a>forallAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_T_Task_OptionUnsafe&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_T_Task_OptionUnsafe&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallAsync&lt;T>"></a>forallAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallAsync_T_OptionUnsafe_Task&lt;T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">forallAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-forallAsync_T_OptionUnsafe_Task&lt;T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.ForAllAsync(pred)</div></div></div><div class="member-title"><a name="forallT&lt;L, R>"></a>forallT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_L_R_IEnumerable_Either&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.ForAll(pred)).Any()</div></div></div><div class="member-title"><a name="forallT&lt;L, R>"></a>forallT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_L_R_IEnumerable_Either&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.ForAll(Right, Left)).Any()</div></div></div><div class="member-title"><a name="forallT&lt;L, R>"></a>forallT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.ForAll(pred)).Any()</div></div></div><div class="member-title"><a name="forallT&lt;L, R>"></a>forallT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-forallT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">forallT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-forallT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.ForAll(Right, Left)).Any()</div></div></div><div class="member-title"><a name="fun"></a>fun(Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun__Action__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span></div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">fun</span>(<span class="ident">Action</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun__Action__f_"><div class="section_title">SOURCE</div><div class="code"> () =&gt; { f(); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;R>"></a>fun&lt;R&gt;(Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_R_Func_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_R_Func_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, R>"></a>fun&lt;T1, R&gt;(Func&lt;T1, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_R_Func_T1_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_R_Func_T1_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, R>"></a>fun&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_R_Func_T1_T2_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_R_Func_T1_T2_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, R>"></a>fun&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_R_Func_T1_T2_T3_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_R_Func_T1_T2_T3_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, R>"></a>fun&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5, R>"></a>fun&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5, T6, R>"></a>fun&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>fun&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Func type inference helper<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;int,int,int&gt; add = (int x, int y) =&gt; x + y;<br/><br/> You can use this function and do:<br/><br/>     var add = fun((int x, int y) =&gt; x + y);<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >The same func you gave it, but allows the type system to work out what f is</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_f_"><div class="section_title">SOURCE</div><div class="code"> f</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5, T6, T7>"></a>fun&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5, a6, a7) =&gt; { f(a1, a2, a3, a4, a5, a6, a7); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5, T6>"></a>fun&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5, a6) =&gt; { f(a1, a2, a3, a4, a5, a6); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4, T5>"></a>fun&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4, a5) =&gt; { f(a1, a2, a3, a4, a5); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3, T4>"></a>fun&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_T4_Action_T1_T2_T3_T4_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_T4_Action_T1_T2_T3_T4_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3, a4) =&gt; { f(a1, a2, a3, a4); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1, T2, T3>"></a>fun&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_T3_Action_T1_T2_T3_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_T3_Action_T1_T2_T3_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2, a3) =&gt; { f(a1, a2, a3); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1, T2>"></a>fun&lt;T1, T2&gt;(Action&lt;T1, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_T2_Action_T1_T2_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_T2_Action_T1_T2_f_"><div class="section_title">SOURCE</div><div class="code"> (a1, a2) =&gt; { f(a1, a2); return unit; }</div></div></div><div class="member-title"><a name="fun&lt;T1>"></a>fun&lt;T1&gt;(Action&lt;T1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fun_T1_Action_T1_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Action type inference helper and converts it to a Func that returns a Unit instead of void<br/><br/> Try it with lambdas, instead of doing:<br/><br/>     Func&lt;string,Unit&gt; putStr = (string x) =&gt; { Console.WriteLine(x); return unit; }<br/><br/> You can use this function and do:<br/><br/>     var putStr = fun((string x) =&gt; Console.WriteLine(x) );<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div></div><div class="arg-desc">Function to infer</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Unit</span>&gt; <span class="ident">fun</span>&lt;<span class="ident">T1</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Func that returns a Unit</span></div></div></div><div style="display:none" id="code-fun_T1_Action_T1_f_"><div class="section_title">SOURCE</div><div class="code"> (a1) =&gt; { f(a1); return unit; }</div></div></div><div class="member-title"><a name="function&lt;T, R>"></a>function&lt;T, R&gt;(Func&lt;T, Option&lt;R&gt;&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-function_T_R_Func_T_Option&lt;R>_clauses_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Pattern matching for values </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">clauses</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;[]</div></div><div class="arg-desc">Clauses to test</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">function</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;[] clauses)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Result</span></div></div></div><div style="display:none" id="code-function_T_R_Func_T_Option&lt;R>_clauses_"><div class="section_title">SOURCE</div><div class="code"> (T value) =&gt;
         {
             foreach (var clause in clauses)
             {
                 var res = clause(value);
                 if (res.IsSome) return res.IfNone(default(R));
             }
             throw new Exception(&quot;Match not exhaustive&quot;);
         }</div></div></div><div class="member-title"><a name="get&lt;Env, Out, S>"></a>get&lt;Env, Out, S&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-get_Env_Out_S_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the state from monad into its wrapped value (RWS) </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">S</span>&gt; <span class="ident">get</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">S</span>&gt;</div><div class="normal"><span >Rws monad with state in the value</span></div></div></div><div style="display:none" id="code-get_Env_Out_S_"><div class="section_title">SOURCE</div><div class="code">
            rws =&gt; new RwsResult&lt;Out, S, S&gt;(new Out[0], rws.Item2, rws.Item2)</div></div></div><div class="member-title"><a name="get&lt;S>"></a>get&lt;S&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-get_S_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the state from monad into its wrapped value </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; <span class="ident">get</span>&lt;<span class="ident">S</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div><div class="normal"><span >State monad with state in the value</span></div></div></div><div style="display:none" id="code-get_S_"><div class="section_title">SOURCE</div><div class="code">
            state =&gt; new StateResult&lt;S, S&gt;(state, state)</div></div></div><div class="member-title"><a name="identity&lt;T>"></a>identity&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-identity_T_T__x_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Identity function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">identity</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> x)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-identity_T_T__x_"><div class="section_title">SOURCE</div><div class="code"> x</div></div></div><div class="member-title"><a name="ifFail&lt;T>"></a>ifFail&lt;T&gt;(Try&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifFail_T_Try_T_tryDel__Func_T_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifFail</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifFail_T_Try_T_tryDel__Func_T_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfFail(Fail)</div></div></div><div class="member-title"><a name="ifFail&lt;T>"></a>ifFail&lt;T&gt;(Try&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifFail_T_Try_T_tryDel__T__failValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">failValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifFail</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">T</span> failValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifFail_T_Try_T_tryDel__T__failValue_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfFail(failValue)</div></div></div><div class="member-title"><a name="ifFail&lt;T>"></a>ifFail&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifFail_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ExceptionMatch</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ifFail</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ExceptionMatch</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ifFail_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfFail()</div></div></div><div class="member-title"><a name="ifLeft&lt;L, R>"></a>ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeft_L_R_Either_L_R_either__Func_R_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left function if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeft_L_R_Either_L_R_either__Func_R_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeft(Left)</div></div></div><div class="member-title"><a name="ifLeft&lt;L, R>"></a>ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeft_L_R_Either_L_R_either__Func_L_R_leftMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the leftMap function if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; leftMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeft_L_R_Either_L_R_either__Func_L_R_leftMap_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeft(leftMap)</div></div></div><div class="member-title"><a name="ifLeft&lt;L, R>"></a>ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeft_L_R_Either_L_R_either__R__rightValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the rightValue if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rightValue</div><div class="arg-type"><span class="ident">R</span></div></div><div class="arg-desc">Value to return if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">R</span> rightValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeft_L_R_Either_L_R_either__R__rightValue_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeft(rightValue)</div></div></div><div class="member-title"><a name="ifLeft&lt;L, R>"></a>ifLeft&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeft_L_R_Either_L_R_either__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left action if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-ifLeft_L_R_Either_L_R_either__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeft(Left)</div></div></div><div class="member-title"><a name="ifLeftUnsafe&lt;L, R>"></a>ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left function if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeftUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeftUnsafe(Left)</div></div></div><div class="member-title"><a name="ifLeftUnsafe&lt;L, R>"></a>ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Func_L_R_leftMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the leftMap function if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeftUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; leftMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Func_L_R_leftMap_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeftUnsafe(leftMap)</div></div></div><div class="member-title"><a name="ifLeftUnsafe&lt;L, R>"></a>ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__R__rightValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the rightValue if the Either is in a Left state. Returns the Right value if the Either is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rightValue</div><div class="arg-type"><span class="ident">R</span></div></div><div class="arg-desc">Value to return if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">ifLeftUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">R</span> rightValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__R__rightValue_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeftUnsafe(rightValue)</div></div></div><div class="member-title"><a name="ifLeftUnsafe&lt;L, R>"></a>ifLeftUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left action if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Right value if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifLeftUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-ifLeftUnsafe_L_R_EitherUnsafe_L_R_either__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfLeftUnsafe(Left)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(T?, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_T__self__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-ifNone_T_T__self__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            self.Match(identity, None)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(T?, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_T__self__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-ifNone_T_T__self__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            self.Match(identity, () =&gt; noneValue)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_Option_T_option__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNone_T_Option_T_option__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNone(None)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(Option&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_Option_T_option__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNone_T_Option_T_option__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNone(noneValue)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_TryOption_T_tryDel__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNone_T_TryOption_T_tryDel__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfNone(None)</div></div></div><div class="member-title"><a name="ifNone&lt;T>"></a>ifNone&lt;T&gt;(TryOption&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNone_T_TryOption_T_tryDel__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNone_T_TryOption_T_tryDel__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfNone(noneValue)</div></div></div><div class="member-title"><a name="ifNoneOrFail&lt;T>"></a>ifNoneOrFail&lt;T&gt;(TryOption&lt;T&gt;, Func&lt;T&gt;, Func&lt;Exception, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNoneOrFail_T_TryOption_T_tryDel__Func_T_None__Func_Exception_T_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNoneOrFail</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNoneOrFail_T_TryOption_T_tryDel__Func_T_None__Func_Exception_T_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfNoneOrFail(None,Fail)</div></div></div><div class="member-title"><a name="ifNoneUnsafe&lt;T>"></a>ifNoneUnsafe&lt;T&gt;(Option&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNoneUnsafe_T_Option_T_option__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNoneUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNoneUnsafe_T_Option_T_option__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNoneUnsafe(None)</div></div></div><div class="member-title"><a name="ifNoneUnsafe&lt;T>"></a>ifNoneUnsafe&lt;T&gt;(Option&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNoneUnsafe_T_Option_T_option__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNoneUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNoneUnsafe_T_Option_T_option__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNoneUnsafe(noneValue)</div></div></div><div class="member-title"><a name="ifNoneUnsafe&lt;T>"></a>ifNoneUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNoneUnsafe_T_OptionUnsafe_T_option__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNoneUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNoneUnsafe_T_OptionUnsafe_T_option__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNoneUnsafe(None)</div></div></div><div class="member-title"><a name="ifNoneUnsafe&lt;T>"></a>ifNoneUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifNoneUnsafe_T_OptionUnsafe_T_option__T__noneValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">noneValue</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">ifNoneUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">T</span> noneValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ifNoneUnsafe_T_OptionUnsafe_T_option__T__noneValue_"><div class="section_title">SOURCE</div><div class="code">
            option.IfNoneUnsafe(noneValue)</div></div></div><div class="member-title"><a name="ifRight&lt;L, R>"></a>ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRight_L_R_Either_L_R_either__Action_R_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right action if the Either is in a Right state, otherwise does nothing </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Action to invoke</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right)</div></div><div style="display:none" id="code-ifRight_L_R_Either_L_R_either__Action_R_Right_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRight(Right)</div></div></div><div class="member-title"><a name="ifRight&lt;L, R>"></a>ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRight_L_R_Either_L_R_either__L__leftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the leftValue if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftValue</div><div class="arg-type"><span class="ident">L</span></div></div><div class="arg-desc">Value to return if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">L</span> leftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRight_L_R_Either_L_R_either__L__leftValue_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRight(leftValue)</div></div></div><div class="member-title"><a name="ifRight&lt;L, R>"></a>ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRight_L_R_Either_L_R_either__Func_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of Left() if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Left value if in the Right state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRight_L_R_Either_L_R_either__Func_L_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRight(Left)</div></div></div><div class="member-title"><a name="ifRight&lt;L, R>"></a>ifRight&lt;L, R&gt;(Either&lt;L, R&gt;, Func&lt;R, L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRight_L_R_Either_L_R_either__Func_R_L_leftMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of leftMap if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Left value if in the Right state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt; leftMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRight_L_R_Either_L_R_either__Func_R_L_leftMap_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRight(leftMap)</div></div></div><div class="member-title"><a name="ifRightUnsafe&lt;L, R>"></a>ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Action_R_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right action if the Either is in a Right state, otherwise does nothing </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Action to invoke</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifRightUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right)</div></div><div style="display:none" id="code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Action_R_Right_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRightUnsafe(Right)</div></div></div><div class="member-title"><a name="ifRightUnsafe&lt;L, R>"></a>ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__L__leftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the leftValue if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftValue</div><div class="arg-type"><span class="ident">L</span></div></div><div class="arg-desc">Value to return if in the Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRightUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">L</span> leftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__L__leftValue_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRightUnsafe(leftValue)</div></div></div><div class="member-title"><a name="ifRightUnsafe&lt;L, R>"></a>ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Func_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of Left() if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Left value if in the Right state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRightUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Func_L_Left_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRightUnsafe(Left)</div></div></div><div class="member-title"><a name="ifRightUnsafe&lt;L, R>"></a>ifRightUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_L_leftMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of leftMap if the Either is in a Right state. Returns the Left value if the Either is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">leftMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt;</div></div><div class="arg-desc">Function to generate a Left value if in the Right state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span> <span class="ident">ifRightUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt; leftMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-ifRightUnsafe_L_R_EitherUnsafe_L_R_either__Func_R_L_leftMap_"><div class="section_title">SOURCE</div><div class="code">
           either.IfRightUnsafe(leftMap)</div></div></div><div class="member-title"><a name="ifSome&lt;T>"></a>ifSome&lt;T&gt;(T?, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSome_T_T__self__Action_T_someHandler_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the someHandler if Nullable is in the Some state, otherwise nothing happens. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">someHandler</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; someHandler)</div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-ifSome_T_T__self__Action_T_someHandler_"><div class="section_title">SOURCE</div><div class="code">
            if (self.HasValue)
            {
                someHandler(self.Value);
            }
            return unit;
        </div></div></div><div class="member-title"><a name="ifSome&lt;T>"></a>ifSome&lt;T&gt;(T?, Func&lt;T, Unit&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSome_T_T__self__Func_T_Unit_someHandler_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the someHandler if Nullable is in the Some state, otherwise nothing happens. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">someHandler</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Unit</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Unit</span>&gt; someHandler)</div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-ifSome_T_T__self__Func_T_Unit_someHandler_"><div class="section_title">SOURCE</div><div class="code">
            if (self.HasValue)
            {
                someHandler(self.Value);
            }
            return unit;
        </div></div></div><div class="member-title"><a name="ifSome&lt;T>"></a>ifSome&lt;T&gt;(Option&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSome_T_Option_T_option__Action_T_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some)</div></div><div style="display:none" id="code-ifSome_T_Option_T_option__Action_T_Some_"><div class="section_title">SOURCE</div><div class="code"> 
            option.IfSome(Some)</div></div></div><div class="member-title"><a name="ifSome&lt;T>"></a>ifSome&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSome_T_TryOption_T_tryDel__Action_T_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some)</div></div><div style="display:none" id="code-ifSome_T_TryOption_T_tryDel__Action_T_Some_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfSome(Some)</div></div></div><div class="member-title"><a name="ifSomeUnsafe&lt;T>"></a>ifSomeUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSomeUnsafe_T_OptionUnsafe_T_option__Action_T_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSomeUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some)</div></div><div style="display:none" id="code-ifSomeUnsafe_T_OptionUnsafe_T_option__Action_T_Some_"><div class="section_title">SOURCE</div><div class="code">
            option.IfSomeUnsafe(Some)</div></div></div><div class="member-title"><a name="ifSucc&lt;T>"></a>ifSucc&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ifSucc_T_Try_T_tryDel__Action_T_Succ_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ifSucc</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Succ)</div></div><div style="display:none" id="code-ifSucc_T_Try_T_tryDel__Action_T_Succ_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.IfSucc(Succ)</div></div></div><div class="member-title"><a name="ignore&lt;T>"></a>ignore&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ignore_T_T__anything_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Takes any value, ignores it, returns a unit </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">anything</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Value to ignore</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">ignore</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> anything)</div></div><div style="display:none" id="code-ignore_T_T__anything_"><div class="section_title">SOURCE</div><div class="code">
            unit</div></div></div><div class="member-title"><a name="isFail&lt;T>"></a>isFail&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isFail_T_Try_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isFail</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isFail_T_Try_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.Try().IsFaulted</div></div></div><div class="member-title"><a name="isLeft&lt;L, R>"></a>isLeft&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isLeft_L_R_Either_L_R_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state</span></div></div></div><div style="display:none" id="code-isLeft_L_R_Either_L_R_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsLeft</div></div></div><div class="member-title"><a name="isLeft&lt;L, R>"></a>isLeft&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isLeft_L_R_EitherUnsafe_L_R_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Left state</span></div></div></div><div style="display:none" id="code-isLeft_L_R_EitherUnsafe_L_R_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsLeft</div></div></div><div class="member-title"><a name="isNone&lt;T>"></a>isNone&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isNone_T_Option_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Check if Option is in a None state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Option</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if value is in a None state</span></div></div></div><div style="display:none" id="code-isNone_T_Option_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsNone</div></div></div><div class="member-title"><a name="isNone&lt;T>"></a>isNone&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isNone_T_OptionUnsafe_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isNone_T_OptionUnsafe_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsNone</div></div></div><div class="member-title"><a name="isNone&lt;T>"></a>isNone&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isNone_T_TryOption_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isNone</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isNone_T_TryOption_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.Try().Value.IsNone</div></div></div><div class="member-title"><a name="isnull&lt;T>"></a>isnull&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isnull_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isnull</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isnull_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            Object.ReferenceEquals(value, null)</div></div></div><div class="member-title"><a name="isRight&lt;L, R>"></a>isRight&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isRight_L_R_Either_L_R_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state</span></div></div></div><div style="display:none" id="code-isRight_L_R_Either_L_R_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsRight</div></div></div><div class="member-title"><a name="isRight&lt;L, R>"></a>isRight&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isRight_L_R_EitherUnsafe_L_R_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to check</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isRight</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Either is in a Right state</span></div></div></div><div style="display:none" id="code-isRight_L_R_EitherUnsafe_L_R_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsRight</div></div></div><div class="member-title"><a name="isSome&lt;T>"></a>isSome&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isSome_T_Option_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Check if Option is in a Some state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Option</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if value is in a Some state</span></div></div></div><div style="display:none" id="code-isSome_T_Option_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsSome</div></div></div><div class="member-title"><a name="isSome&lt;T>"></a>isSome&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isSome_T_OptionUnsafe_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isSome_T_OptionUnsafe_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.IsSome</div></div></div><div class="member-title"><a name="isSome&lt;T>"></a>isSome&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isSome_T_TryOption_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isSome</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isSome_T_TryOption_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.Try().Value.IsSome</div></div></div><div class="member-title"><a name="isSucc&lt;T>"></a>isSucc&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-isSucc_T_Try_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">isSucc</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-isSucc_T_Try_T_value_"><div class="section_title">SOURCE</div><div class="code">
            !isFail(value)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(NewType&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_NewType_T_value__Action_T_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; f)</div></div><div style="display:none" id="code-iter_T_NewType_T_value__Action_T_f_"><div class="section_title">SOURCE</div><div class="code">
            value.Iter(f)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(T?, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_T__self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate Nullable.  Imagine the item has zero or one items depending on whether it&#39;s in a None state or not. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Action to invoke with the value if not in None state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-iter_T_T__self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IfSome(action)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(Task&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_Task_T_self__Action_T_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterates the Task.  Invokes f(Result) if not faulted or cancelled </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; f)</div></div><div style="display:none" id="code-iter_T_Task_T_self__Action_T_f_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(f)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_Try_T_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iter_T_Try_T_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(action)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_Try_T_self__Action_T_Succ__Action_Exception_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Succ, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; Fail)</div></div><div style="display:none" id="code-iter_T_Try_T_self__Action_T_Succ__Action_Exception_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(Succ, Fail)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_TryOption_T_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div></div><div style="display:none" id="code-iter_T_TryOption_T_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(action)</div></div></div><div class="member-title"><a name="iter&lt;T>"></a>iter&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;, Action, Action&lt;Exception&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T_TryOption_T_self__Action_T_Some__Action__None__Action_Exception_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some, <span class="ident">Action</span> None, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; Fail)</div></div><div style="display:none" id="code-iter_T_TryOption_T_self__Action_T_Some__Action__None__Action_Exception_Fail_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(Some, None, Fail)</div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3, T4, T5, T6, T7>"></a>iter&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3, T4, T5, T6>"></a>iter&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3, T4, T5>"></a>iter&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3, T4>"></a>iter&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3>"></a>iter&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2, T3>"></a>iter&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1&gt;, Action&lt;T2&gt;, Action&lt;T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_first__Action_T2_second__Action_T3_third_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">first</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">second</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">third</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; first, <span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt; second, <span class="ident">Action</span>&lt;<span class="ident">T3</span>&gt; third)</div></div><div style="display:none" id="code-iter_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_first__Action_T2_second__Action_T3_third_"><div class="section_title">SOURCE</div><div class="code">
            first(self.Item1);
            second(self.Item2);
            third(self.Item3);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iter&lt;T1, T2>"></a>iter&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1&gt;, Action&lt;T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_Tuple_T1_T2_self__Action_T1_first__Action_T2_second_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">first</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">second</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>&gt; first, <span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt; second)</div></div><div style="display:none" id="code-iter_T1_T2_Tuple_T1_T2_self__Action_T1_first__Action_T2_second_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(first, second)</div></div></div><div class="member-title"><a name="iter&lt;T1, T2>"></a>iter&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iter_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iter</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; func)</div></div><div style="display:none" id="code-iter_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="iterAsync&lt;L, R>"></a>iterAsync&lt;L, R&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_L_R_Task_Either&lt;L, R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_L_R_Task_Either&lt;L, R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;L, R>"></a>iterAsync&lt;L, R&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_L_R_Either_L_Task&lt;R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_L_R_Either_L_Task&lt;R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;L, R>"></a>iterAsync&lt;L, R&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_L_R_Task_EitherUnsafe&lt;L, R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;L, R>"></a>iterAsync&lt;L, R&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Action_R_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_L_R_EitherUnsafe_L_Task&lt;R>_self__Action_R_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;T>"></a>iterAsync&lt;T&gt;(Task&lt;Option&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_T_Task_Option&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_T_Task_Option&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;T>"></a>iterAsync&lt;T&gt;(Option&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_T_Option_Task&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_T_Option_Task&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;T>"></a>iterAsync&lt;T&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_T_Task_OptionUnsafe&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_T_Task_OptionUnsafe&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterAsync&lt;T>"></a>iterAsync&lt;T&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Action&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterAsync_T_OptionUnsafe_Task&lt;T>_self__Action_T_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">iterAsync</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-iterAsync_T_OptionUnsafe_Task&lt;T>_self__Action_T_action_"><div class="section_title">SOURCE</div><div class="code">
            self.IterAsync(action)</div></div></div><div class="member-title"><a name="iterT&lt;L, R>"></a>iterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_L_R_IEnumerable_Either&lt;L, R>_self__Action_L_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; action)</div></div><div style="display:none" id="code-iterT_L_R_IEnumerable_Either&lt;L, R>_self__Action_L_action_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(x =&gt; x.Iter(action))</div></div></div><div class="member-title"><a name="iterT&lt;L, R>"></a>iterT&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_L_R_IEnumerable_Either&lt;L, R>_self__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-iterT_L_R_IEnumerable_Either&lt;L, R>_self__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(x =&gt; x.Iter(Right, Left))</div></div></div><div class="member-title"><a name="iterT&lt;L, R>"></a>iterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Action_L_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; action)</div></div><div style="display:none" id="code-iterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Action_L_action_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(x =&gt; x.Iter(action))</div></div></div><div class="member-title"><a name="iterT&lt;L, R>"></a>iterT&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-iterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">iterT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-iterT_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.Iter(x =&gt; x.Iter(Right, Left))</div></div></div><div class="member-title"><a name="Left&lt;L, R>"></a>Left&lt;L, R&gt;(L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Left_L_R_L__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor Constructs an Either in a Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">L</span></div></div><div class="arg-desc">Left value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Left</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">L</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div></div><div style="display:none" id="code-Left_L_R_L__value_"><div class="section_title">SOURCE</div><div class="code">
            Either&lt;L, R&gt;.Left(value)</div></div></div><div class="member-title"><a name="Left&lt;L, R>"></a>Left&lt;L, R&gt;(L?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Left_L_R_L__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor from Nullable Constructs an Either in a Left state or throws a ValueIsNullException if the value is null </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">L</span>?</div></div><div class="arg-desc">Left value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Left</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">L</span>? value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">L</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-Left_L_R_L__value_"><div class="section_title">SOURCE</div><div class="code">
            isnull(value)
                ? raise&lt;Either&lt;L, R&gt;&gt;(new ValueIsNullException())
                : Either&lt;L, R&gt;.Left(value.Value)</div></div></div><div class="member-title"><a name="lefts&lt;L, R>"></a>lefts&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-lefts_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Left&#39; elements. All the &#39;Left&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt; <span class="ident">lefts</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-lefts_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Lefts()</div></div></div><div class="member-title"><a name="lefts&lt;L, R>"></a>lefts&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-lefts_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Left&#39; elements. All the &#39;Left&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt; <span class="ident">lefts</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-lefts_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Lefts()</div></div></div><div class="member-title"><a name="leftToArray&lt;L, R>"></a>leftToArray&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToArray_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an array of L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span>[] <span class="ident">leftToArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span>[]</div><div class="normal"><span >If the Either is in a Right state, an array of L with one item.  A zero length array of L otherwise</span></div></div></div><div style="display:none" id="code-leftToArray_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftToArray()</div></div></div><div class="member-title"><a name="leftToArray&lt;L, R>"></a>leftToArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToArray_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an array of L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">L</span>[] <span class="ident">leftToArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span>[]</div><div class="normal"><span >If the Either is in a Right state, an array of L with one item.  A zero length array of L otherwise</span></div></div></div><div style="display:none" id="code-leftToArray_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftToArray()</div></div></div><div class="member-title"><a name="leftToList&lt;L, R>"></a>leftToList&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToList_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt; <span class="ident">leftToList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the Either is in a Left state, a Lst of L with one item.  A zero length Lst L otherwise</span></div></div></div><div style="display:none" id="code-leftToList_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftToList()</div></div></div><div class="member-title"><a name="leftToList&lt;L, R>"></a>leftToList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToList_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt; <span class="ident">leftToList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the Either is in a Left state, a Lst of L with one item.  A zero length Lst L otherwise</span></div></div></div><div style="display:none" id="code-leftToList_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftToList()</div></div></div><div class="member-title"><a name="leftToQuery&lt;L, R>"></a>leftToQuery&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToQuery_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">L</span>&gt; <span class="ident">leftToQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the Either is in a Left state, an IQueryable of L with one item.  A zero length IQueryable L otherwise</span></div></div></div><div style="display:none" id="code-leftToQuery_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftAsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="leftToQuery&lt;L, R>"></a>leftToQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-leftToQuery_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of L </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">L</span>&gt; <span class="ident">leftToQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the Either is in a Left state, an IQueryable of L with one item.  A zero length IQueryable L otherwise</span></div></div></div><div style="display:none" id="code-leftToQuery_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.LeftAsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="LeftUnsafe&lt;L, R>"></a>LeftUnsafe&lt;L, R&gt;(L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LeftUnsafe_L_R_L__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor Constructs an Either in a Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">L</span></div></div><div class="arg-desc">Left value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">LeftUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">L</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div></div><div style="display:none" id="code-LeftUnsafe_L_R_L__value_"><div class="section_title">SOURCE</div><div class="code">
            EitherUnsafe&lt;L, R&gt;.Left(value)</div></div></div><div class="member-title"><a name="lift&lt;T>"></a>lift&lt;T&gt;(Task&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-lift_T_Task_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts the value from the Task - here for completeness so that the HKT work. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">lift</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-lift_T_Task_T_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Lift()</div></div></div><div class="member-title"><a name="liftUnsafe&lt;T>"></a>liftUnsafe&lt;T&gt;(Task&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-liftUnsafe_T_Task_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts the value from the Task - here for completeness so that the HKT work. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">liftUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div><div style="display:none" id="code-liftUnsafe_T_Task_T_self_"><div class="section_title">SOURCE</div><div class="code">
            self.LiftUnsafe()</div></div></div><div class="member-title"><a name="list&lt;T>"></a>list&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-list_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable list </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;List&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">list</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-list_T_"><div class="section_title">SOURCE</div><div class="code">
            new Lst&lt;T&gt;()</div></div></div><div class="member-title"><a name="list&lt;T>"></a>list&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-list_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable list </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;List&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">list</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-list_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            new Lst&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="List&lt;T>"></a>List&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-List_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable list </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">List</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-List_T_"><div class="section_title">SOURCE</div><div class="code">
            new Lst&lt;T&gt;()</div></div></div><div class="member-title"><a name="List&lt;T>"></a>List&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-List_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable list </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">List</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-List_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            new Lst&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="local&lt;Env, T, EnvLocal>"></a>local&lt;Env, T, EnvLocal&gt;(Func&lt;EnvLocal, Env&gt;, Reader&lt;Env, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-local_Env_T_EnvLocal_Func_EnvLocal_Env_f__Reader_Env_T_m_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes a computation in a modified environment </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">EnvLocal</span>, <span class="ident">Env</span>&gt;</div></div><div class="arg-desc">The function to modify the environment.</div></div><div class="arg"><div class="arg-header"><div class="arg-name">m</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div><div class="arg-desc">Reader to modify</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">EnvLocal</span>, <span class="ident">T</span>&gt; <span class="ident">local</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>, <span class="ident">EnvLocal</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">EnvLocal</span>, <span class="ident">Env</span>&gt; f, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; m)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">EnvLocal</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Modified reader</span></div></div></div><div style="display:none" id="code-local_Env_T_EnvLocal_Func_EnvLocal_Env_f__Reader_Env_T_m_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; m(f(env))</div></div></div><div class="member-title"><a name="local&lt;Env, T>"></a>local&lt;Env, T&gt;(Func&lt;Env, Env&gt;, Reader&lt;Env, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-local_Env_T_Func_Env_Env_f__Reader_Env_T_m_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes a computation in a modified environment </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">Env</span>&gt;</div></div><div class="arg-desc">The function to modify the environment.</div></div><div class="arg"><div class="arg-header"><div class="arg-name">m</div><div class="arg-type"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div></div><div class="arg-desc">Reader to modify</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">local</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">Env</span>&gt; f, <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; m)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Modified reader</span></div></div></div><div style="display:none" id="code-local_Env_T_Func_Env_Env_f__Reader_Env_T_m_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; m(f(env))</div></div></div><div class="member-title"><a name="lpar&lt;T1, T2, R>"></a>lpar&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-lpar_T1_T2_R_Func_T1_T2_R_func__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Left partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt; <span class="ident">lpar</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-lpar_T1_T2_R_Func_T1_T2_R_func__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T1 a) =&gt; func(a, b)</div></div></div><div class="member-title"><a name="map&lt;K, V>"></a>map&lt;K, V&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_K_V_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Map&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_K_V_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.empty&lt;K, V&gt;()</div></div></div><div class="member-title"><a name="map&lt;K, V>"></a>map&lt;K, V&gt;(Tuple&lt;K, V&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_K_V_Tuple_K_V_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Map&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_K_V_Tuple_K_V_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(items)</div></div></div><div class="member-title"><a name="map&lt;K, V>"></a>map&lt;K, V&gt;(KeyValuePair&lt;K, V&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_K_V_KeyValuePair_K_V_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Map&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_K_V_KeyValuePair_K_V_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(from x in items
                                        select Tuple(x.Key, x.Value))</div></div></div><div class="member-title"><a name="Map&lt;K, V>"></a>Map&lt;K, V&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_K_V_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.empty&lt;K, V&gt;()</div></div></div><div class="member-title"><a name="Map&lt;K, V>"></a>Map&lt;K, V&gt;(Tuple&lt;K, V&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_Tuple_K_V_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_K_V_Tuple_K_V_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(items)</div></div></div><div class="member-title"><a name="Map&lt;K, V>"></a>Map&lt;K, V&gt;(IEnumerable&lt;Tuple&lt;K, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_IEnumerable_Tuple&lt;K, V>_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_K_V_IEnumerable_Tuple&lt;K, V>_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(items)</div></div></div><div class="member-title"><a name="Map&lt;K, V>"></a>Map&lt;K, V&gt;(KeyValuePair&lt;K, V&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_KeyValuePair_K_V_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_K_V_KeyValuePair_K_V_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(from x in items
                                        select Tuple(x.Key, x.Value))</div></div></div><div class="member-title"><a name="Map&lt;K, V>"></a>Map&lt;K, V&gt;(IEnumerable&lt;KeyValuePair&lt;K, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_IEnumerable_KeyValuePair&lt;K, V>_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">KeyValuePair</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_K_V_IEnumerable_KeyValuePair&lt;K, V>_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Map.createRange(items)</div></div></div><div class="member-title"><a name="map&lt;L, R, Ret>"></a>map&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_L_R_Ret_Either_L_R_either__Func_R_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">map</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-map_L_R_Ret_Either_L_R_either__Func_R_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            either.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;L, R, Ret>"></a>map&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_L_R_Ret_EitherUnsafe_L_R_either__Func_R_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">map</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-map_L_R_Ret_EitherUnsafe_L_R_either__Func_R_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            either.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(T, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_T__value__Func_T_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects a value into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span> value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_T__value__Func_T_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(T?, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_T__self__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>? <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div><div class="code"><span class="keyword">where</span> <span class="ident">R</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-map_T_R_T__self__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? mapper(self.Value)
                : default(R?)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(T?, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_T__self__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>? <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>?</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div><div class="code"><span class="keyword">where</span> <span class="ident">R</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-map_T_R_T__self__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : default(R?)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_Option_T_option__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_Option_T_option__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_Option_T_option__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_Option_T_option__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Map(Some, None)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_OptionUnsafe_T_option__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_OptionUnsafe_T_option__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_Try_T_tryDel__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_Try_T_tryDel__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_Try_T_tryDel__Func_T_R_Succ__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_Try_T_tryDel__Func_T_R_Succ__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Map(Succ, Fail)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_TryOption_T_tryDel__Func_T_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_TryOption_T_tryDel__Func_T_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Map(mapper)</div></div></div><div class="member-title"><a name="map&lt;T, R>"></a>map&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Map(Some, None, Fail)</div></div></div><div class="member-title"><a name="map&lt;T, U>"></a>map&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_U_Task_T_self__Func_T_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns map(Result) if not faulted or cancelled. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_U_Task_T_self__Func_T_U_map_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(map)</div></div></div><div class="member-title"><a name="map&lt;T>"></a>map&lt;T&gt;(NewType&lt;T&gt;, Func&lt;T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T_NewType_T_value__Func_T_T_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T_NewType_T_value__Func_T_T_map_"><div class="section_title">SOURCE</div><div class="code">
            value.Map(map)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, R>"></a>map&lt;T1, T2, R&gt;(T1, T2, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_R_T1__value1__T2__value2__Func_T1_T2_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_R_T1__value1__T2__value2__Func_T1_T2_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, R>"></a>map&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map to R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_map_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(map)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, R1, R2>"></a>map&lt;T1, T2, R1, R2&gt;(Tuple&lt;T1, T2&gt;, Func&lt;Tuple&lt;T1, T2&gt;, Tuple&lt;R1, R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_R1_R2_Tuple_T1_T2_self__Func_Tuple&lt;T1, T2>_Tuple&lt;R1, R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;, <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R1</span>, <span class="ident">R2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;, <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_R1_R2_Tuple_T1_T2_self__Func_Tuple&lt;T1, T2>_Tuple&lt;R1, R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(map)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, R>"></a>map&lt;T1, T2, T3, R&gt;(T1, T2, T3, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_R_T1__value1__T2__value2__T3__value3__Func_T1_T2_T3_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">T3</span> value3, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_R_T1__value1__T2__value2__T3__value3__Func_T1_T2_T3_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2, value3)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, R>"></a>map&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map to R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_map_"><div class="section_title">SOURCE</div><div class="code">
            map(self.Item1, self.Item2, self.Item3)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, R1, R2, R3>"></a>map&lt;T1, T2, T3, R1, R2, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;Tuple&lt;T1, T2, T3&gt;, Tuple&lt;R1, R2, R3&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_R1_R2_R3_Tuple_T1_T2_T3_self__Func_Tuple&lt;T1, T2, T3>_Tuple&lt;R1, R2, R3>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;, <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt; <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;, <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_R1_R2_R3_Tuple_T1_T2_T3_self__Func_Tuple&lt;T1, T2, T3>_Tuple&lt;R1, R2, R3>_map_"><div class="section_title">SOURCE</div><div class="code">
            map(self)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, R>"></a>map&lt;T1, T2, T3, T4, R&gt;(T1, T2, T3, T4, Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_R_T1__value1__T2__value2__T3__value3__T4__value4__Func_T1_T2_T3_T4_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">T3</span> value3, <span class="ident">T4</span> value4, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_R_T1__value1__T2__value2__T3__value3__T4__value4__Func_T1_T2_T3_T4_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2, value3, value4)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, R>"></a>map&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, T5, R>"></a>map&lt;T1, T2, T3, T4, T5, R&gt;(T1, T2, T3, T4, T5, Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_T5_R_T1__value1__T2__value2__T3__value3__T4__value4__T5__value5__Func_T1_T2_T3_T4_T5_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value5</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">T3</span> value3, <span class="ident">T4</span> value4, <span class="ident">T5</span> value5, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_T5_R_T1__value1__T2__value2__T3__value3__T4__value4__T5__value5__Func_T1_T2_T3_T4_T5_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2, value3, value4, value5)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, T5, R>"></a>map&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, T5, T6, R>"></a>map&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6)</div></div></div><div class="member-title"><a name="map&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>map&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-map_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">map</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-map_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Either&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Either_L_R_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Task&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Task_Either&lt;L, R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Either&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Either_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_EitherUnsafe_L_R_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_EitherUnsafe_L_R_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(Task&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_Task_EitherUnsafe&lt;L, R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_R2_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_R2_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;L, R, R2>"></a>mapAsync&lt;L, R, R2&gt;(EitherUnsafe&lt;L, Task&lt;R&gt;&gt;, Func&lt;R, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">R2</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_L_R_R2_EitherUnsafe_L_Task&lt;R>_self__Func_R_Task&lt;R2>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Option_T_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Option_T_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Task_Option&lt;T>_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Task_Option&lt;T>_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Task&lt;Option&lt;T&gt;&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Task_Option&lt;T>_self__Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Task_Option&lt;T>_self__Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Option_Task&lt;T>_self__Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Option_Task&lt;T>_self__Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Option&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Option_Task&lt;T>_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Option_Task&lt;T>_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_OptionUnsafe_T_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_OptionUnsafe_T_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(Task&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_Task_OptionUnsafe&lt;T>_self__Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapAsync&lt;T, R>"></a>mapAsync&lt;T, R&gt;(OptionUnsafe&lt;Task&lt;T&gt;&gt;, Func&lt;T, Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_Task&lt;R>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">mapAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapAsync_T_R_OptionUnsafe_Task&lt;T>_self__Func_T_Task&lt;R>_map_"><div class="section_title">SOURCE</div><div class="code">
            self.MapAsync(map)</div></div></div><div class="member-title"><a name="mapFirst&lt;T1, T2, T3, R1>"></a>mapFirst&lt;T1, T2, T3, R1&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, R1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapFirst_T1_T2_T3_R1_Tuple_T1_T2_T3_self__Func_T1_R1_firstMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >First item-map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">mapFirst</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R1</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt; firstMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapFirst_T1_T2_T3_R1_Tuple_T1_T2_T3_self__Func_T1_R1_firstMap_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(firstMap(self.Item1), self.Item2, self.Item3)</div></div></div><div class="member-title"><a name="mapLeft&lt;L, R, Ret>"></a>mapLeft&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapLeft_L_R_Ret_Either_L_R_either__Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">mapLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-mapLeft_L_R_Ret_Either_L_R_either__Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            either.MapLeft(mapper)</div></div></div><div class="member-title"><a name="mapLeft&lt;L, R, Ret>"></a>mapLeft&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapLeft_L_R_Ret_EitherUnsafe_L_R_either__Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Either if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to map</div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Map function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">mapLeft</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped Either</span></div></div></div><div style="display:none" id="code-mapLeft_L_R_Ret_EitherUnsafe_L_R_either__Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            either.MapLeft(mapper)</div></div></div><div class="member-title"><a name="mapLeftT&lt;L, R, Ret>"></a>mapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapLeftT_L_R_Ret_IEnumerable_Either&lt;L, R>_self__Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">mapLeftT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapLeftT_L_R_Ret_IEnumerable_Either&lt;L, R>_self__Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.MapLeft(mapper))</div></div></div><div class="member-title"><a name="mapLeftT&lt;L, R, Ret>"></a>mapLeftT&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapLeftT_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">mapLeftT</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapLeftT_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_self__Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            self.Map(x =&gt; x.MapLeft(mapper))</div></div></div><div class="member-title"><a name="mapSecond&lt;T1, T2, T3, R2>"></a>mapSecond&lt;T1, T2, T3, R2&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T2, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapSecond_T1_T2_T3_R2_Tuple_T1_T2_T3_self__Func_T2_R2_secondMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second item-map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">R2</span>, <span class="ident">T3</span>&gt; <span class="ident">mapSecond</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt; secondMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">R2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapSecond_T1_T2_T3_R2_Tuple_T1_T2_T3_self__Func_T2_R2_secondMap_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(self.Item1, secondMap(self.Item2), self.Item3)</div></div></div><div class="member-title"><a name="mapThird&lt;T1, T2, T3, R3>"></a>mapThird&lt;T1, T2, T3, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T3, R3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-mapThird_T1_T2_T3_R3_Tuple_T1_T2_T3_self__Func_T3_R3_thirdMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Second item-map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">thirdMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R3</span>&gt; <span class="ident">mapThird</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R3</span>&gt; thirdMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-mapThird_T1_T2_T3_R3_Tuple_T1_T2_T3_self__Func_T3_R3_thirdMap_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(self.Item1, self.Item2, thirdMap(self.Item3))</div></div></div><div class="member-title"><a name="match&lt;K, V, R>"></a>match&lt;K, V, R&gt;(Map&lt;K, V&gt;, K, Func&lt;V, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_K_V_R_Map_K_V_map__K__key__Func_V_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">K</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>, <span class="ident">R</span>&gt;(<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; map, <span class="ident">K</span> key, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_K_V_R_Map_K_V_map__K__key__Func_V_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            match(LanguageExt.Map.find(map, key),
                   Some,
                   None )</div></div></div><div class="member-title"><a name="match&lt;K, V>"></a>match&lt;K, V&gt;(Map&lt;K, V&gt;, K, Action&lt;V&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_K_V_Map_K_V_map__K__key__Action_V_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">K</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">V</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; map, <span class="ident">K</span> key, <span class="ident">Action</span>&lt;<span class="ident">V</span>&gt; Some, <span class="ident">Action</span> None)</div></div><div style="display:none" id="code-match_K_V_Map_K_V_map__K__key__Action_V_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            match(LanguageExt.Map.find(map, key),
                   Some,
                   None)</div></div></div><div class="member-title"><a name="match&lt;L, R, Ret>"></a>match&lt;L, R, Ret&gt;(Either&lt;L, R&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_L_R_Ret_Either_L_R_either__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left function depending on the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Function to invoke if in a Right state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Function to invoke if in a Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Ret</span> <span class="ident">match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Ret</span></div><div class="normal"><span >The return value of the invoked function</span></div></div></div><div style="display:none" id="code-match_L_R_Ret_Either_L_R_either__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Match(Right, Left)</div></div></div><div class="member-title"><a name="match&lt;L, R, Ret>"></a>match&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_L_R_Ret_IEnumerable_Either&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match over a sequence of Eithers </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Sequence to match over</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Right match function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Left match function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt; <span class="ident">match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt;</div><div class="normal"><span >Sequence of mapped values</span></div></div></div><div style="display:none" id="code-match_L_R_Ret_IEnumerable_Either&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var item in list)
            {
                if (item.IsBottom) continue;
                if (item.IsLeft) yield return Left(item.LeftValue);
                if (item.IsRight) yield return Right(item.RightValue);
            }
        </div></div></div><div class="member-title"><a name="match&lt;L, R, Ret>"></a>match&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match over a sequence of Eithers </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Sequence to match over</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Right match function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Left match function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt; <span class="ident">match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt;</div><div class="normal"><span >Sequence of mapped values</span></div></div></div><div style="display:none" id="code-match_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var item in list)
            {
                if (item.IsBottom) continue;
                if (item.IsLeft) yield return Left(item.LeftValue);
                if (item.IsRight) yield return Right(item.RightValue);
            }
        </div></div></div><div class="member-title"><a name="Match&lt;L, R, Ret>"></a>Match&lt;L, R, Ret&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_L_R_Ret_IEnumerable_Either&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match over a sequence of Eithers </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Sequence to match over</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Right match function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Left match function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt; <span class="ident">Match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt;</div><div class="normal"><span >Sequence of mapped values</span></div></div></div><div style="display:none" id="code-Match_L_R_Ret_IEnumerable_Either&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            match(list, Right, Left)</div></div></div><div class="member-title"><a name="Match&lt;L, R, Ret>"></a>Match&lt;L, R, Ret&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match over a sequence of Eithers </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Sequence to match over</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Right match function</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Left match function</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt; <span class="ident">Match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Ret</span>&gt;</div><div class="normal"><span >Sequence of mapped values</span></div></div></div><div style="display:none" id="code-Match_L_R_Ret_IEnumerable_EitherUnsafe&lt;L, R>_list__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            match(list, Right, Left)</div></div></div><div class="member-title"><a name="match&lt;L, R>"></a>match&lt;L, R&gt;(Either&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_L_R_Either_L_R_either__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left action depending on the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Action to invoke if in a Right state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Action to invoke if in a Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-match_L_R_Either_L_R_either__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.Match(Right, Left)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(T, Func&lt;T, Option&lt;R&gt;&gt;[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_T__value__Func_T_Option&lt;R>_clauses_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Pattern matching for values </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Value to match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">clauses</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;[]</div></div><div class="arg-desc">Clauses to test</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span> value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;[] clauses)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Result</span></div></div></div><div style="display:none" id="code-match_T_R_T__value__Func_T_Option&lt;R>_clauses_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var clause in clauses)
            {
                var res = clause(value);
                if (res.IsSome) return res.IfNone(default(R));
            }
            throw new Exception(&quot;Match not exhaustive&quot;);
        </div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Two</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Two, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, Two, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Two</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Three</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Two, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Three, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, Two, Three, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Two</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Three</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Four</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Two, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Three, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Four, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, Two, Three, Four, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_T_R_Five__Func_T_T_T_T_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Two</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Three</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Four</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Five</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Two, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Three, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Four, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Five, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_T_R_Five__Func_T_T_T_T_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, Two, Three, Four, Five, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;T&gt;, Func&lt;R&gt;, Func&lt;T, R&gt;, Func&lt;T, T, R&gt;, Func&lt;T, T, T, R&gt;, Func&lt;T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, T, R&gt;, Func&lt;T, T, T, T, T, T, IEnumerable&lt;T&gt;, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_T_R_Five__Func_T_T_T_T_T_T_R_Six__Func_T_T_T_T_T_T_IEnumerable&lt;T>_R_More_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >List matching </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">One</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Two</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Three</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Four</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Five</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Six</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">More</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; list, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; One, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Two, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Three, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Four, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Five, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt; Six, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;, <span class="ident">R</span>&gt; More)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_T_list__Func_R_Empty__Func_T_R_One__Func_T_T_R_Two__Func_T_T_T_R_Three__Func_T_T_T_T_R_Four__Func_T_T_T_T_T_R_Five__Func_T_T_T_T_T_T_R_Six__Func_T_T_T_T_T_T_IEnumerable&lt;T>_R_More_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(Empty, One, Two, Three, Four, Five, Six, More)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(T?, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_T__self__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable and return a non-null R. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >A non-null R</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-match_T_R_T__self__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_Option_T_option__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_Option_T_option__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            option.Match(Some, None)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(
                None,
                opt =&gt; opt.Some(v =&gt; Some(v)).None(None),
                (x, xs) =&gt; x.Some(v =&gt; Some(v)).None(None).Concat(match(xs, Some, None)) // TODO: Flatten recursion
            )</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_"><div class="section_title">SOURCE</div><div class="code">
            match(list, Some, () =&gt; None)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_Try_T_tryDel__Func_T_R_Succ__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_Try_T_tryDel__Func_T_R_Succ__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Succ, Fail)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(Try&lt;T&gt;, Func&lt;T, R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_Try_T_tryDel__Func_T_R_Succ__R__Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Succ, <span class="ident">R</span> Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_Try_T_tryDel__Func_T_R_Succ__R__Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Succ, Fail)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Some, None, Fail)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, R, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__R__None__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">R</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">R</span> None, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__R__None__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Some, None, Fail)</div></div></div><div class="member-title"><a name="match&lt;T, R>"></a>match&lt;T, R&gt;(TryOption&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;, R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__R__Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None, <span class="ident">R</span> Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-match_T_R_TryOption_T_tryDel__Func_T_R_Some__Func_R_None__R__Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Some, None, Fail)</div></div></div><div class="member-title"><a name="Match&lt;T, R>"></a>Match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            match(list, Some, None)</div></div></div><div class="member-title"><a name="Match&lt;T, R>"></a>Match&lt;T, R&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Match</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Match_T_R_IEnumerable_Option&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_"><div class="section_title">SOURCE</div><div class="code">
            match(list, Some, () =&gt; None)</div></div></div><div class="member-title"><a name="match&lt;T>"></a>match&lt;T&gt;(T?, Action&lt;T&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_T__self__Action_T_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable T </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Some match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div><div class="arg-desc">None match</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some, <span class="ident">Action</span> None)</div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-match_T_T__self__Action_T_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            if (self.HasValue)
            {
                Some(self.Value);
            }
            else
            {
                None();
            }
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="match&lt;T>"></a>match&lt;T&gt;(Option&lt;T&gt;, Action&lt;T&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_Option_T_option__Action_T_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some, <span class="ident">Action</span> None)</div></div><div style="display:none" id="code-match_T_Option_T_option__Action_T_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            option.Match(Some, None)</div></div></div><div class="member-title"><a name="match&lt;T>"></a>match&lt;T&gt;(Try&lt;T&gt;, Action&lt;T&gt;, Action&lt;Exception&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_Try_T_tryDel__Action_T_Succ__Action_Exception_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Succ, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; Fail)</div></div><div style="display:none" id="code-match_T_Try_T_tryDel__Action_T_Succ__Action_Exception_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Succ, Fail)</div></div></div><div class="member-title"><a name="match&lt;T>"></a>match&lt;T&gt;(TryOption&lt;T&gt;, Action&lt;T&gt;, Action, Action&lt;Exception&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-match_T_TryOption_T_tryDel__Action_T_Some__Action__None__Action_Exception_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">match</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some, <span class="ident">Action</span> None, <span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; Fail)</div></div><div style="display:none" id="code-match_T_TryOption_T_tryDel__Action_T_Some__Action__None__Action_Exception_Fail_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.Match(Some, None, Fail)</div></div></div><div class="member-title"><a name="matchAsync&lt;T, R>"></a>matchAsync&lt;T, R&gt;(T?, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchAsync_T_R_T__self__Func_T_Task&lt;R>_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable and return a promise for an R. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >A promise to return an R</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-matchAsync_T_R_T__self__Func_T_Task&lt;R>_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? await Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="matchAsync&lt;T, R>"></a>matchAsync&lt;T, R&gt;(T?, Func&lt;T, Task&lt;R&gt;&gt;, Func&lt;Task&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchAsync_T_R_T__self__Func_T_Task&lt;R>_Some__Func_Task&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable and return a promise for an R. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchAsync</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >A promise to return an R</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-matchAsync_T_R_T__self__Func_T_Task&lt;R>_Some__Func_Task&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? await Some(self.Value)
                : await None()</div></div></div><div class="member-title"><a name="matchObservable&lt;T, R>"></a>matchObservable&lt;T, R&gt;(T?, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchObservable_T_R_T__self__Func_T_IObservable&lt;R>_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable and return an observable stream of Rs. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >A stream of Rs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-matchObservable_T_R_T__self__Func_T_IObservable&lt;R>_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : Observable.Return(None())</div></div></div><div class="member-title"><a name="matchObservable&lt;T, R>"></a>matchObservable&lt;T, R&gt;(T?, Func&lt;T, IObservable&lt;R&gt;&gt;, Func&lt;IObservable&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchObservable_T_R_T__self__Func_T_IObservable&lt;R>_Some__Func_IObservable&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Nullable and return an observable stream of Rs. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >A stream of Rs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-matchObservable_T_R_T__self__Func_T_IObservable&lt;R>_Some__Func_IObservable&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None()</div></div></div><div class="member-title"><a name="matchObservable&lt;T, R>"></a>matchObservable&lt;T, R&gt;(IObservable&lt;T?&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchObservable_T_R_IObservable_T_self__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the IObservable&lt;Nullable&lt;T&gt;&gt; and return a stream of non-null Rs. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IObservable</span>&lt;<span class="ident">T</span>?&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Some handler</div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">None handler</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchObservable</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IObservable</span>&lt;<span class="ident">T</span>?&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >A stream of Rs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-matchObservable_T_R_IObservable_T_self__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            self.Select(nullable =&gt; nullable.Match(Some, None))</div></div></div><div class="member-title"><a name="matchUnsafe&lt;L, R, Ret>"></a>matchUnsafe&lt;L, R, Ret&gt;(EitherUnsafe&lt;L, R&gt;, Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_L_R_Ret_EitherUnsafe_L_R_either__Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left function depending on the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Function to invoke if in a Right state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc">Function to invoke if in a Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Ret</span> <span class="ident">matchUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Ret</span></div><div class="normal"><span >The return value of the invoked function</span></div></div></div><div style="display:none" id="code-matchUnsafe_L_R_Ret_EitherUnsafe_L_R_either__Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.MatchUnsafe(Right, Left)</div></div></div><div class="member-title"><a name="matchUnsafe&lt;L, R>"></a>matchUnsafe&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_L_R_EitherUnsafe_L_R_either__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left action depending on the state of the Either provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to match</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc">Action to invoke if in a Right state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc">Action to invoke if in a Left state</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">matchUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either, <span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-matchUnsafe_L_R_EitherUnsafe_L_R_either__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            either.MatchUnsafe(Right, Left)</div></div></div><div class="member-title"><a name="matchUnsafe&lt;T, R>"></a>matchUnsafe&lt;T, R&gt;(Option&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_T_R_Option_T_option__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">matchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-matchUnsafe_T_R_Option_T_option__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            option.MatchUnsafe(Some, None)</div></div></div><div class="member-title"><a name="matchUnsafe&lt;T, R>"></a>matchUnsafe&lt;T, R&gt;(OptionUnsafe&lt;T&gt;, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_T_R_OptionUnsafe_T_option__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">matchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-matchUnsafe_T_R_OptionUnsafe_T_option__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            option.MatchUnsafe(Some, None)</div></div></div><div class="member-title"><a name="matchUnsafe&lt;T, R>"></a>matchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-matchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            list.Match(
                None,
                opt =&gt; opt.SomeUnsafe(v =&gt; Some(v)).None(None),
                (x, xs) =&gt; x.SomeUnsafe(v =&gt; Some(v)).None(None).Concat(matchUnsafe(xs, Some, None)) // TODO: Flatten recursion
            )</div></div></div><div class="member-title"><a name="matchUnsafe&lt;T, R>"></a>matchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">matchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-matchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(list, Some, () =&gt; None)</div></div></div><div class="member-title"><a name="MatchUnsafe&lt;T, R>"></a>MatchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, Func&lt;IEnumerable&lt;R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__Func_IEnumerable&lt;R>_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(list, Some, None)</div></div></div><div class="member-title"><a name="MatchUnsafe&lt;T, R>"></a>MatchUnsafe&lt;T, R&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;, Func&lt;T, IEnumerable&lt;R&gt;&gt;, IEnumerable&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">MatchUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; Some, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafe_T_R_IEnumerable_OptionUnsafe&lt;T>_list__Func_T_IEnumerable&lt;R>_Some__IEnumerable_R_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(list, Some, () =&gt; None)</div></div></div><div class="member-title"><a name="matchUnsafe&lt;T>"></a>matchUnsafe&lt;T&gt;(OptionUnsafe&lt;T&gt;, Action&lt;T&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-matchUnsafe_T_OptionUnsafe_T_option__Action_T_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">matchUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; Some, <span class="ident">Action</span> None)</div></div><div style="display:none" id="code-matchUnsafe_T_OptionUnsafe_T_option__Action_T_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            option.MatchUnsafe(Some, None)</div></div></div><div class="member-title"><a name="memo&lt;T, R>"></a>memo&lt;T, R&gt;(Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-memo_T_R_Func_T_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a Func&lt;T,R&gt; that wraps func.  Each time the resulting Func&lt;T,R&gt; is called with a new value, its result is memoized (cached). Subsequent calls use the memoized value.  <br/><br/> Remarks:      Thread-safe and memory-leak safe.   </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">memo</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-memo_T_R_Func_T_R_func_"><div class="section_title">SOURCE</div><div class="code">
            var cache = new WeakDict&lt;T, R&gt;();
            var syncMap = new ConcurrentDictionary&lt;T, object&gt;();

            return inp =&gt;
                matchUnsafe(cache.TryGetValue(inp),
                    Some: x =&gt; x,
                    None: () =&gt;
                    {
                        R res;
                        var sync = syncMap.GetOrAdd(inp, new object());
                        lock (sync)
                        {
                            res = cache.GetOrAdd(inp, func);
                        }
                        syncMap.TryRemove(inp, out sync);
                        return res;
                    });
        </div></div></div><div class="member-title"><a name="memo&lt;T>"></a>memo&lt;T&gt;(Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-memo_T_Func_T_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a Func&lt;T&gt; that wraps func.  The first call to the resulting Func&lt;T&gt; will cache the result. Subsequent calls return the cached item. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; <span class="ident">memo</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-memo_T_Func_T_func_"><div class="section_title">SOURCE</div><div class="code">
            var value = new Lazy&lt;T&gt;(func, true);
            return () =&gt; value.Value;
        </div></div></div><div class="member-title"><a name="memo&lt;T>"></a>memo&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-memo_T_IEnumerable_T_seq_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Enumerable memoization.  As an enumerable is enumerated each item is retained in an internal list, so that future evalation of the enumerable isn&#39;t done.  Only items not seen before are evaluated.  <br/><br/> This minimises one of the major problems with the IEnumerable / yield return  pattern by causing at-most-once evaluation of each item.  <br/><br/> Use the IEnumerable extension method Memo for convenience. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">seq</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Enumerable to memoize</div></div><div class="section_title">REMARKS</div><span >Although this allows efficient lazy evaluation, it does come at a memory cost. Each item is cached internally, so this method doesn&#39;t allow for evaluation of infinite sequences. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">memo</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; seq)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >IEnumerable with caching properties</span></div></div></div><div style="display:none" id="code-memo_T_IEnumerable_T_seq_"><div class="section_title">SOURCE</div><div class="code">
            new LanguageExt.MemoEnumerable&lt;T&gt;(seq)</div></div></div><div class="member-title"><a name="memoUnsafe&lt;T, R>"></a>memoUnsafe&lt;T, R&gt;(Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-memoUnsafe_T_R_Func_T_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a Func&lt;T,R&gt; that wraps func.  Each time the resulting Func&lt;T,R&gt; is called with a new value, its result is memoized (cached). Subsequent calls use the memoized value.  <br/><br/> Remarks:      No mechanism for freeing cached values and therefore can cause a     memory leak when holding onto the Func&lt;T,R&gt; reference.     Uses a ConcurrentDictionary for the cache and is thread-safe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; <span class="ident">memoUnsafe</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-memoUnsafe_T_R_Func_T_R_func_"><div class="section_title">SOURCE</div><div class="code">
            var cache = new ConcurrentDictionary&lt;T, R&gt;();
            var syncMap = new ConcurrentDictionary&lt;T, object&gt;();
            return inp =&gt;
            {
                R res;
                if (!cache.TryGetValue(inp, out res))
                {
                    var sync = syncMap.GetOrAdd(inp, new object());
                    lock (sync)
                    {
                        res = cache.GetOrAdd(inp, func);
                    }
                    syncMap.TryRemove(inp, out sync);
                }
                return res;
            };
        </div></div></div><div class="member-title"><a name="modify&lt;S, T>"></a>modify&lt;S, T&gt;(State&lt;S, T&gt;, Func&lt;S, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-modify_S_T_State_S_T_self__Func_S_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Modify the state in a State computation, leave the value alone </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">modify</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >State monad with state set and with a Unit value</span></div></div></div><div style="display:none" id="code-modify_S_T_State_S_T_self__Func_S_S_f_"><div class="section_title">SOURCE</div><div class="code">
            self.Modify(f)</div></div></div><div class="member-title"><a name="multiply&lt;L, R>"></a>multiply&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_L_R_Either_L_R_lhs__Either_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of the Rights  For numeric values the behaviour is to multiply the Rights (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_L_R_Either_L_R_lhs__Either_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;L, R>"></a>multiply&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of the Rights  For numeric values the behaviour is to multiply the Rights (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_NewType_T_value__NewType_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-multiply_T_NewType_T_value__NewType_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            value.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(T?, T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_T__lhs__T__rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of the Somes. For numeric values the behaviour is to multiply the Somes (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the T type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? lhs, <span class="ident">T</span>? rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"><span >lhs * rhs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-multiply_T_T__lhs__T__rhs_"><div class="section_title">SOURCE</div><div class="code">
            if (!lhs.HasValue) return lhs;  // zero * rhs = zero
            if (!rhs.HasValue) return rhs;  // lhs * zero = zero
            return TypeDesc.Multiply(lhs.Value, rhs.Value, TypeDesc&lt;T&gt;.Default);
        </div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_Option_T_lhs__Option_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of the Somes.  If either of the options are None then the result is None For numeric values the behaviour is to multiply the Somes (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_T_Option_T_lhs__Option_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of the Somes.  If either of the options are None then the result is None For numeric values the behaviour is to multiply the Somes (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_Try_T_lhs__Try_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of Try(x) and Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to multiply the Trys (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_T_Try_T_lhs__Try_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="multiply&lt;T>"></a>multiply&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-multiply_T_TryOption_T_lhs__TryOption_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the product of TryOption(x) and TryOption(y). If either of the TryOptions throw then the result is Fail If either of the TryOptions return None then the result is None For numeric values the behaviour is to multiply the TryOptions (lhs * rhs) For Lst values the behaviour is to multiply all combinations of values in both lists  to produce a new list Otherwise if the R type derives from IMultiplicable then the behaviour is to call lhs.Multiply(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">multiply</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs * rhs</span></div></div></div><div style="display:none" id="code-multiply_T_TryOption_T_lhs__TryOption_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Multiply(rhs)</div></div></div><div class="member-title"><a name="notnull&lt;T>"></a>notnull&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-notnull_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">notnull</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-notnull_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            !Object.ReferenceEquals(value, null)</div></div></div><div class="member-title"><a name="Optional&lt;T>"></a>Optional&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Optional_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an Option </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Value to be made optional, or null</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Optional</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >If the value is null it will be None else Some(value)</span></div></div></div><div style="display:none" id="code-Optional_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            isnull(value)
                ? Option&lt;T&gt;.None
                : Option&lt;T&gt;.Some(value)</div></div></div><div class="member-title"><a name="Optional&lt;T>"></a>Optional&lt;T&gt;(T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Optional_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an Option </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Value to be made optional, or null</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Optional</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >If the value is null it will be None else Some(value)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-Optional_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            value.HasValue
                ? Option&lt;T&gt;.Some(value.Value)
                : Option&lt;T&gt;.None</div></div></div><div class="member-title"><a name="otherwise&lt;T, R>"></a>otherwise&lt;T, R&gt;(Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-otherwise_T_R_Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with the &#39;match&#39; function to catch a non-matched value and map a result </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">otherwise</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-otherwise_T_R_Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            (T input) =&gt; Some(map(input))</div></div></div><div class="member-title"><a name="par&lt;T1, T2, R>"></a>par&lt;T1, T2, R&gt;(Func&lt;T1, T2, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_R_Func_T1_T2_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_R_Func_T1_T2_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b) =&gt; func(a, b)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, R>"></a>par&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_R_Func_T1_T2_T3_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_R_Func_T1_T2_T3_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c) =&gt; func(a, b, c)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, R>"></a>par&lt;T1, T2, T3, R&gt;(Func&lt;T1, T2, T3, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_R_Func_T1_T2_T3_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_R_Func_T1_T2_T3_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c) =&gt; func(a, b, c)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, R>"></a>par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, R>"></a>par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, R>"></a>par&lt;T1, T2, T3, T4, R&gt;(Func&lt;T1, T2, T3, T4, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_R_Func_T1_T2_T3_T4_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, R>"></a>par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, R>"></a>par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, R>"></a>par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, R>"></a>par&lt;T1, T2, T3, T4, T5, R&gt;(Func&lt;T1, T2, T3, T4, T5, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_R_Func_T1_T2_T3_T4_T5_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_R_Func_T1_T2_T3_T4_T5_T6_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_R_Func_T1_T2_T3_T4_T5_T6_T7_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, R&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_"><div class="section_title">SOURCE</div><div class="code">
            (T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_"><div class="section_title">SOURCE</div><div class="code">
            (T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;(Func&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, R&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h__T9__i_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">i</div><div class="arg-type"><span class="ident">T9</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T10</span>, <span class="ident">R</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>, <span class="ident">R</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h, <span class="ident">T9</span> i)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T10</span>, <span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_Func_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_R_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h__T9__i_"><div class="section_title">SOURCE</div><div class="code">
            (T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h, T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7, T8)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T9</span>, <span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_"><div class="section_title">SOURCE</div><div class="code">
            (T9 i, T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9, T10&gt;, T1, T2, T3, T4, T5, T6, T7, T8, T9)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h__T9__i_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">i</div><div class="arg-type"><span class="ident">T9</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T10</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>, <span class="ident">T10</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h, <span class="ident">T9</span> i)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T10</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_T10_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h__T9__i_"><div class="section_title">SOURCE</div><div class="code">
            (T10 j) =&gt; func(a, b, c, d, e, f, g, h, i, j)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h, T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8, T9&gt;, T1, T2, T3, T4, T5, T6, T7, T8)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">h</div><div class="arg-type"><span class="ident">T8</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T9</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>, <span class="ident">T9</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g, <span class="ident">T8</span> h)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T9</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_T9_Action_T1_T2_T3_T4_T5_T6_T7_T8_T9_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g__T8__h_"><div class="section_title">SOURCE</div><div class="code">
            (T9 i) =&gt; func(a, b, c, d, e, f, g, h, i)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g, T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7, T8>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7, T8&gt;, T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">g</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T8</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">T8</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f, <span class="ident">T7</span> g)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T8</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_T8_Action_T1_T2_T3_T4_T5_T6_T7_T8_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f__T7__g_"><div class="section_title">SOURCE</div><div class="code">
            (T8 h) =&gt; func(a, b, c, d, e, f, g, h)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e, <span class="ident">T6</span> f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d__T5__e__T6__f_"><div class="section_title">SOURCE</div><div class="code">
            (T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6, T7>"></a>par&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_T7_Action_T1_T2_T3_T4_T5_T6_T7_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f, T7 g) =&gt; func(a, b, c, d, e, f, g)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6>"></a>par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c__T4__d__T5__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T6</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d, <span class="ident">T5</span> e)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c__T4__d__T5__e_"><div class="section_title">SOURCE</div><div class="code">
            (T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6>"></a>par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6>"></a>par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6>"></a>par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5, T6>"></a>par&lt;T1, T2, T3, T4, T5, T6&gt;(Action&lt;T1, T2, T3, T4, T5, T6&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_T6_Action_T1_T2_T3_T4_T5_T6_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e, T6 f) =&gt; func(a, b, c, d, e, f)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5>"></a>par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b__T3__c__T4__d_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">d</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T5</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c, <span class="ident">T4</span> d)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b__T3__c__T4__d_"><div class="section_title">SOURCE</div><div class="code">
            (T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5>"></a>par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5>"></a>par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4, T5>"></a>par&lt;T1, T2, T3, T4, T5&gt;(Action&lt;T1, T2, T3, T4, T5&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_T5_Action_T1_T2_T3_T4_T5_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d, T5 e) =&gt; func(a, b, c, d, e)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4>"></a>par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a__T2__b__T3__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T4</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b, <span class="ident">T3</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a__T2__b__T3__c_"><div class="section_title">SOURCE</div><div class="code">
            (T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4>"></a>par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c, T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3, T4>"></a>par&lt;T1, T2, T3, T4&gt;(Action&lt;T1, T2, T3, T4&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_T4_Action_T1_T2_T3_T4_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c, T4 d) =&gt; func(a, b, c, d)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3>"></a>par&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;, T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_Action_T1_T2_T3_func__T1__a__T2__b_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">b</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T3</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; func, <span class="ident">T1</span> a, <span class="ident">T2</span> b)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_Action_T1_T2_T3_func__T1__a__T2__b_"><div class="section_title">SOURCE</div><div class="code">
            (T3 c) =&gt; func(a, b, c)</div></div></div><div class="member-title"><a name="par&lt;T1, T2, T3>"></a>par&lt;T1, T2, T3&gt;(Action&lt;T1, T2, T3&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_T3_Action_T1_T2_T3_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_T3_Action_T1_T2_T3_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b, T3 c) =&gt; func(a, b, c)</div></div></div><div class="member-title"><a name="par&lt;T1, T2>"></a>par&lt;T1, T2&gt;(Action&lt;T1, T2&gt;, T1)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-par_T1_T2_Action_T1_T2_func__T1__a_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partially apply  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">a</div><div class="arg-type"><span class="ident">T1</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt; <span class="ident">par</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; func, <span class="ident">T1</span> a)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Action</span>&lt;<span class="ident">T2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-par_T1_T2_Action_T1_T2_func__T1__a_"><div class="section_title">SOURCE</div><div class="code">
            (T2 b) =&gt; func(a, b)</div></div></div><div class="member-title"><a name="parmap&lt;L, T1, T2, R>"></a>parmap&lt;L, T1, T2, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_L_T1_T2_R_Either_L_T1_either__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_L_T1_T2_R_Either_L_T1_either__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            either.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;L, T1, T2, R>"></a>parmap&lt;L, T1, T2, R&gt;(EitherUnsafe&lt;L, T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_L_T1_T2_R_EitherUnsafe_L_T1_either__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_L_T1_T2_R_EitherUnsafe_L_T1_either__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            either.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;L, T1, T2, T3, R>"></a>parmap&lt;L, T1, T2, T3, R&gt;(Either&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_L_T1_T2_T3_R_Either_L_T1_either__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_L_T1_T2_T3_R_Either_L_T1_either__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            either.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;L, T1, T2, T3, R>"></a>parmap&lt;L, T1, T2, T3, R&gt;(EitherUnsafe&lt;L, T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_L_T1_T2_T3_R_EitherUnsafe_L_T1_either__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T1</span>&gt; either, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_L_T1_T2_T3_R_EitherUnsafe_L_T1_either__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            either.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, R>"></a>parmap&lt;T1, T2, R&gt;(Option&lt;T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_R_Option_T1_option__Func_T1_T2_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_R_Option_T1_option__Func_T1_T2_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.ParMap(mapper)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, R>"></a>parmap&lt;T1, T2, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_R_OptionUnsafe_T1_option__Func_T1_T2_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_R_OptionUnsafe_T1_option__Func_T1_T2_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.ParMap(mapper)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, R>"></a>parmap&lt;T1, T2, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_R_Try_T1_self__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_R_Try_T1_self__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, R>"></a>parmap&lt;T1, T2, R&gt;(TryOption&lt;T1&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_R_TryOption_T1_self__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_R_TryOption_T1_self__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, T3, R>"></a>parmap&lt;T1, T2, T3, R&gt;(Option&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_T3_R_Option_T1_option__Func_T1_T2_T3_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T1</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_T3_R_Option_T1_option__Func_T1_T2_T3_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.ParMap(mapper)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, T3, R>"></a>parmap&lt;T1, T2, T3, R&gt;(OptionUnsafe&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_T3_R_OptionUnsafe_T1_option__Func_T1_T2_T3_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T1</span>&gt; option, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_T3_R_OptionUnsafe_T1_option__Func_T1_T2_T3_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            option.ParMap(mapper)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, T3, R>"></a>parmap&lt;T1, T2, T3, R&gt;(Try&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_T3_R_Try_T1_self__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_T3_R_Try_T1_self__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.ParMap(func)</div></div></div><div class="member-title"><a name="parmap&lt;T1, T2, T3, R>"></a>parmap&lt;T1, T2, T3, R&gt;(TryOption&lt;T1&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parmap_T1_T2_T3_R_TryOption_T1_self__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partial application map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div><div class="section_title">REMARKS</div><span >TODO: Better documentation of this function</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt; <span class="ident">parmap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T1</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parmap_T1_T2_T3_R_TryOption_T1_self__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            self.ParMap(func)</div></div></div><div class="member-title"><a name="parseBool"></a>parseBool(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseBool__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">parseBool</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseBool__string__value_"><div class="section_title">SOURCE</div><div class="code">
            bool result;
            return bool.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseByte"></a>parseByte(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseByte__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">byte</span>&gt; <span class="ident">parseByte</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">byte</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseByte__string__value_"><div class="section_title">SOURCE</div><div class="code">
            byte result;
            return Byte.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseChar"></a>parseChar(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseChar__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">char</span>&gt; <span class="ident">parseChar</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">char</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseChar__string__value_"><div class="section_title">SOURCE</div><div class="code">
            char result;
            return Char.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseDateTime"></a>parseDateTime(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseDateTime__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">DateTime</span>&gt; <span class="ident">parseDateTime</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">DateTime</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseDateTime__string__value_"><div class="section_title">SOURCE</div><div class="code">
            DateTime result;
            return DateTime.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseDecimal"></a>parseDecimal(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseDecimal__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">decimal</span>&gt; <span class="ident">parseDecimal</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">decimal</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseDecimal__string__value_"><div class="section_title">SOURCE</div><div class="code">
            decimal result;
            return decimal.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseDouble"></a>parseDouble(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseDouble__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">double</span>&gt; <span class="ident">parseDouble</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">double</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseDouble__string__value_"><div class="section_title">SOURCE</div><div class="code">
            double result;
            return double.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseFloat"></a>parseFloat(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseFloat__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">float</span>&gt; <span class="ident">parseFloat</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">float</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseFloat__string__value_"><div class="section_title">SOURCE</div><div class="code">
            float result;
            return float.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseGuid"></a>parseGuid(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseGuid__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">Guid</span>&gt; <span class="ident">parseGuid</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">Guid</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseGuid__string__value_"><div class="section_title">SOURCE</div><div class="code">
            Guid result;
            return Guid.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseInt"></a>parseInt(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseInt__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">parseInt</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseInt__string__value_"><div class="section_title">SOURCE</div><div class="code">
            int result;
            return Int32.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseInt"></a>parseInt(string, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseInt__string__value__int__fromBase_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fromBase</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">parseInt</span>(<span class="keyword">string</span> value, <span class="keyword">int</span> fromBase)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseInt__string__value__int__fromBase_"><div class="section_title">SOURCE</div><div class="code">
            try
            {
                return Convert.ToInt32(value, fromBase);
            }
            catch
            {
                return None;
            }
        </div></div></div><div class="member-title"><a name="parseLong"></a>parseLong(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseLong__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">long</span>&gt; <span class="ident">parseLong</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">long</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseLong__string__value_"><div class="section_title">SOURCE</div><div class="code">
            long result;
            return Int64.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseShort"></a>parseShort(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseShort__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">short</span>&gt; <span class="ident">parseShort</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">short</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseShort__string__value_"><div class="section_title">SOURCE</div><div class="code">
            short result;
            return Int16.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseUInt"></a>parseUInt(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseUInt__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">uint</span>&gt; <span class="ident">parseUInt</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">uint</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseUInt__string__value_"><div class="section_title">SOURCE</div><div class="code">
            uint result;
            return UInt32.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseULong"></a>parseULong(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseULong__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">ulong</span>&gt; <span class="ident">parseULong</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">ulong</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseULong__string__value_"><div class="section_title">SOURCE</div><div class="code">
            ulong result;
            return UInt64.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="parseUShort"></a>parseUShort(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-parseUShort__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="keyword">ushort</span>&gt; <span class="ident">parseUShort</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="keyword">ushort</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-parseUShort__string__value_"><div class="section_title">SOURCE</div><div class="code">
            ushort result;
            return UInt16.TryParse(value, out result)
                ? Some(result)
                : None;
        </div></div></div><div class="member-title"><a name="partition&lt;L, R>"></a>partition&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-partition_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partitions a list of &#39;Either&#39; into two lists. All the &#39;Left&#39; elements are extracted, in order, to the first component of the output.  Similarly the &#39;Right&#39; elements are extracted to the second component of the output. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">partition</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >A tuple containing the an enumerable of L and an enumerable of R</span></div></div></div><div style="display:none" id="code-partition_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(lefts(self), rights(self))</div></div></div><div class="member-title"><a name="partition&lt;L, R>"></a>partition&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-partition_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Partitions a list of &#39;Either&#39; into two lists. All the &#39;Left&#39; elements are extracted, in order, to the first component of the output.  Similarly the &#39;Right&#39; elements are extracted to the second component of the output. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">partition</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">IEnumerable</span>&lt;<span class="ident">L</span>&gt;, <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"><span >A tuple containing the an enumerable of L and an enumerable of R</span></div></div></div><div style="display:none" id="code-partition_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(lefts(self), rights(self))</div></div></div><div class="member-title"><a name="put&lt;Env, Out, S>"></a>put&lt;Env, Out, S&gt;(S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-put_Env_Out_S_S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Set the state (RWS) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">put</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>&gt;(<span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Rws monad with state set and with a Unit value</span></div></div></div><div style="display:none" id="code-put_Env_Out_S_S__state_"><div class="section_title">SOURCE</div><div class="code">
            _ =&gt; new RwsResult&lt;Out, S, Unit&gt;(new Out[0], state, unit)</div></div></div><div class="member-title"><a name="put&lt;S>"></a>put&lt;S&gt;(S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-put_S_S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Set the state  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">put</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >State monad with state set and with a Unit value</span></div></div></div><div style="display:none" id="code-put_S_S__state_"><div class="section_title">SOURCE</div><div class="code">
            _ =&gt; new StateResult&lt;S, Unit&gt;(state, unit)</div></div></div><div class="member-title"><a name="query&lt;T>"></a>query&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-query_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create a queryable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Query&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">query</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-query_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            toQuery(items)</div></div></div><div class="member-title"><a name="Query&lt;T>"></a>Query&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Query_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create a queryable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Query</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Query_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            toQuery(items)</div></div></div><div class="member-title"><a name="Queue&lt;T>"></a>Queue&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Queue_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Queue</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Queue_T_"><div class="section_title">SOURCE</div><div class="code">
            new Que&lt;T&gt;()</div></div></div><div class="member-title"><a name="Queue&lt;T>"></a>Queue&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Queue_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Queue</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Queue_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            var q = new Que&lt;T&gt;();
            foreach (var item in items)
            {
                q = q.Enqueue(item);
            }
            return q;
        </div></div></div><div class="member-title"><a name="raise&lt;R>"></a>raise&lt;R&gt;(Exception)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-raise_R_Exception__ex_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Raise an exception </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ex</div><div class="arg-type"><span class="ident">Exception</span></div></div><div class="arg-desc">Exception to throw</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">raise</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Exception</span> ex)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Throws an exception</span></div></div></div><div style="display:none" id="code-raise_R_Exception__ex_"><div class="section_title">SOURCE</div><div class="code">
            throw ex;
        </div></div></div><div class="member-title"><a name="raiseapp&lt;R>"></a>raiseapp&lt;R&gt;(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-raiseapp_R_string__message_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Raises an ApplicationException wigth the messge provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">message</div><div class="arg-type"><span class="keyword">string</span></div></div><div class="arg-desc">ApplicationException message</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">raiseapp</span>&lt;<span class="ident">R</span>&gt;(<span class="keyword">string</span> message)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Throws an ApplicationException</span></div></div></div><div style="display:none" id="code-raiseapp_R_string__message_"><div class="section_title">SOURCE</div><div class="code">
            throw new ApplicationException(message);
        </div></div></div><div class="member-title"><a name="random"></a>random(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-random__int__max_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Thread-safe cryptographically strong random number generator </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">max</div><div class="arg-type"><span class="keyword">int</span></div></div><div class="arg-desc">Maximum value to return + 1</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">random</span>(<span class="keyword">int</span> max)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A non-negative random number, less than the value specified.</span></div></div></div><div style="display:none" id="code-random__int__max_"><div class="section_title">SOURCE</div><div class="code">
            lock (rnd)
            {
                rnd.GetBytes(inttarget);
                return Math.Abs(BitConverter.ToInt32(inttarget, 0)) % max;
            }
        </div></div></div><div class="member-title"><a name="randomBase64"></a>randomBase64(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-randomBase64__int__bytesCount_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Thread-safe cryptographically strong random base-64 string generator </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">bytesCount</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="ident">randomBase64</span>(<span class="keyword">int</span> bytesCount)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >Base64 encoded random string</span></div></div></div><div style="display:none" id="code-randomBase64__int__bytesCount_"><div class="section_title">SOURCE</div><div class="code">
            if (bytesCount &lt; 1) throw new ArgumentException($&quot;The minimum value for {nameof(bytesCount)} is 1&quot;);

            var bytes = new byte[bytesCount];
            rnd.GetBytes(bytes);
            return Convert.ToBase64String(bytes);
        </div></div></div><div class="member-title"><a name="range"></a>range(char, char)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-range__char__from__char__to_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate a range of chars.  <br/><br/>   Remarks:     Can go in a positive direction (&#39;a&#39;..&#39;z&#39;) as well as negative (&#39;z&#39;..&#39;a&#39;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">from</div><div class="arg-type"><span class="keyword">char</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">to</div><div class="arg-type"><span class="keyword">char</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Range&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">CharRange</span> <span class="ident">range</span>(<span class="keyword">char</span> from, <span class="keyword">char</span> to)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">CharRange</span></div><div class="normal"></div></div></div><div style="display:none" id="code-range__char__from__char__to_"><div class="section_title">SOURCE</div><div class="code">
            new CharRange(from, to)</div></div></div><div class="member-title"><a name="range"></a>range(IntegerRange[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-range__IntegerRange__ranges_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate integers from any number of provided ranges </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ranges</div><div class="arg-type"><span class="ident">IntegerRange</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Range&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">range</span>(<span class="ident">IntegerRange</span>[] ranges)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-range__IntegerRange__ranges_"><div class="section_title">SOURCE</div><div class="code">
            from range in ranges
            from i in range
            select i</div></div></div><div class="member-title"><a name="range"></a>range(CharRange[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-range__CharRange__ranges_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate chars from any number of provided ranges </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ranges</div><div class="arg-type"><span class="ident">CharRange</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Range&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="keyword">char</span>&gt; <span class="ident">range</span>(<span class="ident">CharRange</span>[] ranges)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="keyword">char</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-range__CharRange__ranges_"><div class="section_title">SOURCE</div><div class="code">
            from range in ranges
            from c in range
            select c</div></div></div><div class="member-title"><a name="Range"></a>Range(int, int, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Range__int__from__int__count__int__step_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate a range of integers.   </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">from</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">step</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IntegerRange</span> <span class="ident">Range</span>(<span class="keyword">int</span> from, <span class="keyword">int</span> count, <span class="keyword">int</span> step = 1)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IntegerRange</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Range__int__from__int__count__int__step_"><div class="section_title">SOURCE</div><div class="code">
            new IntegerRange(from, count, step)</div></div></div><div class="member-title"><a name="Range"></a>Range(char, char)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Range__char__from__char__to_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate a range of chars.  <br/><br/>   Remarks:     Can go in a positive direction (&#39;a&#39;..&#39;z&#39;) as well as negative (&#39;z&#39;..&#39;a&#39;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">from</div><div class="arg-type"><span class="keyword">char</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">to</div><div class="arg-type"><span class="keyword">char</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">CharRange</span> <span class="ident">Range</span>(<span class="keyword">char</span> from, <span class="keyword">char</span> to)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">CharRange</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Range__char__from__char__to_"><div class="section_title">SOURCE</div><div class="code">
            new CharRange(from, to)</div></div></div><div class="member-title"><a name="Range"></a>Range(IntegerRange[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Range__IntegerRange__ranges_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate integers from any number of provided ranges </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ranges</div><div class="arg-type"><span class="ident">IntegerRange</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">Range</span>(<span class="ident">IntegerRange</span>[] ranges)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Range__IntegerRange__ranges_"><div class="section_title">SOURCE</div><div class="code">
            from range in ranges
            from i in range
            select i</div></div></div><div class="member-title"><a name="Range"></a>Range(CharRange[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Range__CharRange__ranges_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Lazily generate chars from any number of provided ranges </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ranges</div><div class="arg-type"><span class="ident">CharRange</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="keyword">char</span>&gt; <span class="ident">Range</span>(<span class="ident">CharRange</span>[] ranges)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="keyword">char</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Range__CharRange__ranges_"><div class="section_title">SOURCE</div><div class="code">
            from range in ranges
            from c in range
            select c</div></div></div><div class="member-title"><a name="Reader&lt;Env, T>"></a>Reader&lt;Env, T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Reader_Env_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Reader monad constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Wrapped value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Reader monad</span></div></div></div><div style="display:none" id="code-Reader_Env_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            env =&gt; new ReaderResult&lt;T&gt;(value)</div></div></div><div class="member-title"><a name="Right&lt;L, R>"></a>Right&lt;L, R&gt;(R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Right_L_R_R__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor Constructs an Either in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">R</span></div></div><div class="arg-desc">Right value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Right</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">R</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div></div><div style="display:none" id="code-Right_L_R_R__value_"><div class="section_title">SOURCE</div><div class="code">
            Either&lt;L, R&gt;.Right(value)</div></div></div><div class="member-title"><a name="Right&lt;L, R>"></a>Right&lt;L, R&gt;(R?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Right_L_R_R__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor from Nullable Constructs an Either in a Right state or throws a ValueIsNullException if the value is null </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">R</span>?</div></div><div class="arg-desc">Right value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Right</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">R</span>? value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">R</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-Right_L_R_R__value_"><div class="section_title">SOURCE</div><div class="code">
            isnull(value)
                ? raise&lt;Either&lt;L, R&gt;&gt;(new ValueIsNullException())
                : Either&lt;L, R&gt;.Right(value.Value)</div></div></div><div class="member-title"><a name="rights&lt;L, R>"></a>rights&lt;L, R&gt;(IEnumerable&lt;Either&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rights_L_R_IEnumerable_Either&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Right&#39; elements. All the &#39;Right&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rights</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-rights_L_R_IEnumerable_Either&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Rights()</div></div></div><div class="member-title"><a name="rights&lt;L, R>"></a>rights&lt;L, R&gt;(IEnumerable&lt;EitherUnsafe&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rights_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Either&#39; all the &#39;Right&#39; elements. All the &#39;Right&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div><div class="arg-desc">Either list</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rights</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >An enumerable of L</span></div></div></div><div style="display:none" id="code-rights_L_R_IEnumerable_EitherUnsafe&lt;L, R>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Rights()</div></div></div><div class="member-title"><a name="rightToArray&lt;L, R>"></a>rightToArray&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToArray_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an ImmutableArray R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>[] <span class="ident">rightToArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>[]</div><div class="normal"><span >If the Either is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-rightToArray_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightToArray()</div></div></div><div class="member-title"><a name="rightToArray&lt;L, R>"></a>rightToArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToArray_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an ImmutableArray R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>[] <span class="ident">rightToArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>[]</div><div class="normal"><span >If the Either is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-rightToArray_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightToArray()</div></div></div><div class="member-title"><a name="rightToList&lt;L, R>"></a>rightToList&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToList_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rightToList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-rightToList_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightToList()</div></div></div><div class="member-title"><a name="rightToList&lt;L, R>"></a>rightToList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToList_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rightToList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-rightToList_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightToList()</div></div></div><div class="member-title"><a name="rightToQuery&lt;L, R>"></a>rightToQuery&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToQuery_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rightToQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, an IQueryable of R with one item.  A zero length IQueryable R otherwise</span></div></div></div><div style="display:none" id="code-rightToQuery_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightAsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="rightToQuery&lt;L, R>"></a>rightToQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-rightToQuery_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">rightToQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, an IQueryable of R with one item.  A zero length IQueryable R otherwise</span></div></div></div><div style="display:none" id="code-rightToQuery_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.RightAsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="RightUnsafe&lt;L, R>"></a>RightUnsafe&lt;L, R&gt;(R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RightUnsafe_L_R_R__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Either constructor Constructs an Either in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">R</span></div></div><div class="arg-desc">Right value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">RightUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">R</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >A new Either instance</span></div></div></div><div style="display:none" id="code-RightUnsafe_L_R_R__value_"><div class="section_title">SOURCE</div><div class="code">
            EitherUnsafe&lt;L, R&gt;.Right(value)</div></div></div><div class="member-title"><a name="Rws&lt;Env, Out, S, T>"></a>Rws&lt;Env, Out, S, T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Rws_Env_Out_S_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Reader Writer State monad constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Rws monad</span></div></div></div><div style="display:none" id="code-Rws_Env_Out_S_T_T__value_"><div class="section_title">SOURCE</div><div class="code"> rws =&gt;
              new RwsResult&lt;Out, S, T&gt;(new Out[0], rws.Item2, value)</div></div></div><div class="member-title"><a name="seq&lt;L, T>"></a>seq&lt;L, T&gt;(Either&lt;L, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_L_T_Either_L_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an either to an enumerable Right(x) = [x] Left(y) = [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_L_T_Either_L_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.RightAsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;L, T>"></a>seq&lt;L, T&gt;(EitherUnsafe&lt;L, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_L_T_EitherUnsafe_L_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an either to an enumerable Right(x) = [x] Left(y) = [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_L_T_EitherUnsafe_L_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.RightAsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert value to [value] or [] if value == null </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            isnull(value)
                ? new T[0]
                : new T[] { value }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a nullable to an enumerable HasValue : true = [x] HasValue : false = [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span>?</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-seq_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            value.AsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_IEnumerable_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an Enumerable to an Enumerable Deals with value == null by returning [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_IEnumerable_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value == null
                ? new T[0]
                : value.AsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Option_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an option to an enumerable Some(x) = [x] None = [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Option_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.AsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_OptionUnsafe_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an option to an enumerable Some(x) = [x] None = [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_OptionUnsafe_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value.AsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Try_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a Try to an enumerable Succ(x) = [x] Fail(e) = [] value is null : [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Try_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value == null
                ? new T[0]
                : value.AsEnumerable().Where(x =&gt; x.IsRight).Map(x =&gt; x.RightValue)</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_TryOption_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a TryOption to an enumerable Succ(x) = [either(_,x)] Fail(e) = [either(exception,_)] None = [] value is null : [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_TryOption_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value == null
                ? new Either&lt;Exception,T&gt;[0]
                : value.AsEnumerable()</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2, tup.Item3 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T, T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2, tup.Item3, tup.Item4 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T, T, T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_T_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_T_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2, tup.Item3, tup.Item4, tup.Item5 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T, T, T, T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_T_T_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_T_T_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2, tup.Item3, tup.Item4, tup.Item5, tup.Item6 }</div></div></div><div class="member-title"><a name="seq&lt;T>"></a>seq&lt;T&gt;(Tuple&lt;T, T, T, T, T, T, T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq_T_Tuple_T_T_T_T_T_T_T_tup_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a tuple to an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tup</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt; tup)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq_T_Tuple_T_T_T_T_T_T_T_tup_"><div class="section_title">SOURCE</div><div class="code">
            tup == null
                ? new T[0]
                : new[] { tup.Item1, tup.Item2, tup.Item3, tup.Item4, tup.Item5, tup.Item6, tup.Item7 }</div></div></div><div class="member-title"><a name="seq2&lt;T>"></a>seq2&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-seq2_T_TryOption_T_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a TryOption to an enumerable Succ(x) = [x] Fail(e) = [] None = [] value is null : [] </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">seq2</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-seq2_T_TryOption_T_value_"><div class="section_title">SOURCE</div><div class="code">
            value == null
                ? new T[0]
                : value.AsEnumerable().Where(x =&gt; x.IsRight).Map(x =&gt; x.RightValue)</div></div></div><div class="member-title"><a name="set&lt;T>"></a>set&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-set_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Set&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">set</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-set_T_"><div class="section_title">SOURCE</div><div class="code">
            new Set&lt;T&gt;()</div></div></div><div class="member-title"><a name="set&lt;T>"></a>set&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-set_T_T__item_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Set&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">set</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> item)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-set_T_T__item_"><div class="section_title">SOURCE</div><div class="code">
            new Set&lt;T&gt;().Add(item)</div></div></div><div class="member-title"><a name="set&lt;T>"></a>set&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-set_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Set&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">set</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-set_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            new Set&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="Set&lt;T>"></a>Set&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Set_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Set_T_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Set.create&lt;T&gt;()</div></div></div><div class="member-title"><a name="Set&lt;T>"></a>Set&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Set_T_T__item_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> item)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Set_T_T__item_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Set.create&lt;T&gt;().Add(item)</div></div></div><div class="member-title"><a name="Set&lt;T>"></a>Set&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Set_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Set_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Set.createRange&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="Some&lt;T>"></a>Some&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Some_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create a Some of T (Option&lt;T&gt;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Non-null value to be made optional</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Some</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >Option&lt;T&gt; in a Some state or throws ValueIsNullException if isnull(value).</span></div></div></div><div style="display:none" id="code-Some_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            isnull(value)
                ? raise&lt;Option&lt;T&gt;&gt;(new ValueIsNullException())
                : Option&lt;T&gt;.Some(value)</div></div></div><div class="member-title"><a name="Some&lt;T>"></a>Some&lt;T&gt;(T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Some_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create a Some of T from a Nullable&lt;T&gt; (Option&lt;T&gt;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Non-null value to be made optional</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Some</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >Option&lt;T&gt; in a Some state or throws ValueIsNullException if isnull(value)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-Some_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            value.HasValue
                ? Option&lt;T&gt;.Some(value.Value)
                : raise&lt;Option&lt;T&gt;&gt;(new ValueIsNullException())</div></div></div><div class="member-title"><a name="somes&lt;T>"></a>somes&lt;T&gt;(IEnumerable&lt;T?&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-somes_T_IEnumerable_T_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Option&#39; all the &#39;Some&#39; elements. All the &#39;Some&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>?&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">somes</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>?&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-somes_T_IEnumerable_T_self_"><div class="section_title">SOURCE</div><div class="code">
            foreach (var item in self)
            {
                if (item.HasValue)
                {
                    yield return item.Value;
                }
            }
        </div></div></div><div class="member-title"><a name="somes&lt;T>"></a>somes&lt;T&gt;(IEnumerable&lt;Option&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-somes_T_IEnumerable_Option&lt;T>_list_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Option&#39; all the &#39;Some&#39; elements. All the &#39;Some&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">somes</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;&gt; list)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-somes_T_IEnumerable_Option&lt;T>_list_"><div class="section_title">SOURCE</div><div class="code">
            list.Somes()</div></div></div><div class="member-title"><a name="somesUnsafe&lt;T>"></a>somesUnsafe&lt;T&gt;(IEnumerable&lt;OptionUnsafe&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-somesUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Extracts from a list of &#39;Option&#39; all the &#39;Some&#39; elements. All the &#39;Some&#39; elements are extracted in order. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">somesUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;&gt; list)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-somesUnsafe_T_IEnumerable_OptionUnsafe&lt;T>_list_"><div class="section_title">SOURCE</div><div class="code">
            list.Somes()</div></div></div><div class="member-title"><a name="SomeUnsafe&lt;T>"></a>SomeUnsafe&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SomeUnsafe_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create a Some of T (OptionUnsafe&lt;T&gt;).  Use the to wrap any-type without coercian. That means you can wrap null, Nullable&lt;T&gt;, or Option&lt;T&gt; to get Option&lt;Option&lt;T&gt;&gt; </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Value to make optional</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">SomeUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >Option&lt;T&gt; in a Some state</span></div></div></div><div style="display:none" id="code-SomeUnsafe_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            OptionUnsafe&lt;T&gt;.Some(value)</div></div></div><div class="member-title"><a name="stack&lt;T>"></a>stack&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-stack_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable stack </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Stack&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt; <span class="ident">stack</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-stack_T_"><div class="section_title">SOURCE</div><div class="code">
            new Stck&lt;T&gt;()</div></div></div><div class="member-title"><a name="Stack&lt;T>"></a>Stack&lt;T&gt;()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Stack_T_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable stack </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Stack</span>&lt;<span class="ident">T</span>&gt;()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Stack_T_"><div class="section_title">SOURCE</div><div class="code">
            new Stck&lt;T&gt;()</div></div></div><div class="member-title"><a name="Stack&lt;T>"></a>Stack&lt;T&gt;(T[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Stack_T_T__items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable stack </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">T</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Stack</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>[] items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Stack_T_T__items_"><div class="section_title">SOURCE</div><div class="code">
            new Stck&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="State&lt;S, T>"></a>State&lt;S, T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-State_S_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >State monad constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >State monad</span></div></div></div><div style="display:none" id="code-State_S_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            state =&gt; new StateResult&lt;S, T&gt;(state, value)</div></div></div><div class="member-title"><a name="subtract&lt;L, R>"></a>subtract&lt;L, R&gt;(Either&lt;L, R&gt;, Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_L_R_Either_L_R_lhs__Either_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Right of one either from the Right of another For numeric values the behaviour is to find the difference between the Rights (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_L_R_Either_L_R_lhs__Either_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;L, R>"></a>subtract&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Right of one either from the Right of another For numeric values the behaviour is to find the difference between the Rights (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; lhs, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_L_R_EitherUnsafe_L_R_lhs__EitherUnsafe_L_R_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(NewType&lt;T&gt;, NewType&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_NewType_T_value__NewType_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; value, <span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewType</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-subtract_T_NewType_T_value__NewType_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            value.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(T?, T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_T__lhs__T__rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Some(x) of one option from the Some(y) of another. For numeric values the behaviour is to find the difference between the Somes (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the T type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>? <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? lhs, <span class="ident">T</span>? rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>?</div><div class="normal"><span >lhs - rhs</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-subtract_T_T__lhs__T__rhs_"><div class="section_title">SOURCE</div><div class="code">
            if (!lhs.HasValue) return rhs;
            if (!rhs.HasValue) return lhs;
            return TypeDesc.Subtract(lhs.Value, rhs.Value, TypeDesc&lt;T&gt;.Default);
        </div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(Option&lt;T&gt;, Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_Option_T_lhs__Option_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Some(x) of one option from the Some(y) of another.  If either of the options are None then the result is None For numeric values the behaviour is to find the difference between the Somes (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_T_Option_T_lhs__Option_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(OptionUnsafe&lt;T&gt;, OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Some(x) of one option from the Some(y) of another.  If either of the options are None then the result is None For numeric values the behaviour is to find the difference between the Somes (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_T_OptionUnsafe_T_lhs__OptionUnsafe_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(Try&lt;T&gt;, Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_Try_T_lhs__Try_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the Try(x) from Try(y).  If either of the Trys throw then the result is Fail For numeric values the behaviour is to find the difference between the Trys (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_T_Try_T_lhs__Try_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="subtract&lt;T>"></a>subtract&lt;T&gt;(TryOption&lt;T&gt;, TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-subtract_T_TryOption_T_lhs__TryOption_T_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtract the TryOption(x) from TryOption(y). If either of the TryOptions throw then the result is Fail If either of the TryOptions return None then the result is None For numeric values the behaviour is to find the difference between the TryOptions (lhs - rhs) For Lst values the behaviour is to remove items in the rhs from the lhs For Map or Set values the behaviour is to remove items in the rhs from the lhs Otherwise if the R type derives from ISubtractable then the behaviour is to call lhs.Subtract(rhs); </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">lhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Left-hand side of the operation</div></div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Right-hand side of the operation</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">subtract</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; lhs, <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >lhs - rhs</span></div></div></div><div style="display:none" id="code-subtract_T_TryOption_T_lhs__TryOption_T_rhs_"><div class="section_title">SOURCE</div><div class="code">
            lhs.Subtract(rhs)</div></div></div><div class="member-title"><a name="sum"></a>sum(NewType&lt;int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__NewType_int_value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">NewType</span>&lt;<span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sum</span>(<span class="ident">NewType</span>&lt;<span class="keyword">int</span>&gt; value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__NewType_int_value_"><div class="section_title">SOURCE</div><div class="code">
            value.Value</div></div></div><div class="member-title"><a name="sum"></a>sum(int?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__int__self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="keyword">int</span>?</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sum</span>(<span class="keyword">int</span>? self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__int__self_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? self.Value
                : 0</div></div></div><div class="member-title"><a name="sum"></a>sum(Task&lt;int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__Task_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the Sum of a Task int.  Returns either the wrapped value or 0 if cancelled or faulted. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sum</span>(<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__Task_int_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Sum()</div></div></div><div class="member-title"><a name="sum"></a>sum(Tuple&lt;int, int, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__Tuple_int_int_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sum</span>(<span class="ident">Tuple</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__Tuple_int_int_int_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Item1 + self.Item2 + self.Item3</div></div></div><div class="member-title"><a name="sum"></a>sum(Tuple&lt;double, double, double&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__Tuple_double_double_double_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">double</span>, <span class="keyword">double</span>, <span class="keyword">double</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="ident">sum</span>(<span class="ident">Tuple</span>&lt;<span class="keyword">double</span>, <span class="keyword">double</span>, <span class="keyword">double</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">double</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__Tuple_double_double_double_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Item1 + self.Item2 + self.Item3</div></div></div><div class="member-title"><a name="sum"></a>sum(Tuple&lt;float, float, float&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__Tuple_float_float_float_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">float</span>, <span class="keyword">float</span>, <span class="keyword">float</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="ident">sum</span>(<span class="ident">Tuple</span>&lt;<span class="keyword">float</span>, <span class="keyword">float</span>, <span class="keyword">float</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">float</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__Tuple_float_float_float_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Item1 + self.Item2 + self.Item3</div></div></div><div class="member-title"><a name="sum"></a>sum(Tuple&lt;decimal, decimal, decimal&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum__Tuple_decimal_decimal_decimal_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">decimal</span>, <span class="keyword">decimal</span>, <span class="keyword">decimal</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">decimal</span> <span class="ident">sum</span>(<span class="ident">Tuple</span>&lt;<span class="keyword">decimal</span>, <span class="keyword">decimal</span>, <span class="keyword">decimal</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">decimal</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum__Tuple_decimal_decimal_decimal_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Item1 + self.Item2 + self.Item3</div></div></div><div class="member-title"><a name="sum&lt;T1, T2>"></a>sum&lt;T1, T2&gt;(Tuple&lt;int, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum_T1_T2_Tuple_int_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">sum</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum_T1_T2_Tuple_int_int_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Sum()</div></div></div><div class="member-title"><a name="sum&lt;T1, T2>"></a>sum&lt;T1, T2&gt;(Tuple&lt;double, double&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum_T1_T2_Tuple_double_double_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">double</span>, <span class="keyword">double</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="ident">sum</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="keyword">double</span>, <span class="keyword">double</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">double</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum_T1_T2_Tuple_double_double_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Sum()</div></div></div><div class="member-title"><a name="sum&lt;T1, T2>"></a>sum&lt;T1, T2&gt;(Tuple&lt;float, float&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum_T1_T2_Tuple_float_float_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">float</span>, <span class="keyword">float</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="ident">sum</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="keyword">float</span>, <span class="keyword">float</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">float</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum_T1_T2_Tuple_float_float_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Sum()</div></div></div><div class="member-title"><a name="sum&lt;T1, T2>"></a>sum&lt;T1, T2&gt;(Tuple&lt;decimal, decimal&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sum_T1_T2_Tuple_decimal_decimal_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Sum </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="keyword">decimal</span>, <span class="keyword">decimal</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">decimal</span> <span class="ident">sum</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="keyword">decimal</span>, <span class="keyword">decimal</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">decimal</span></div><div class="normal"></div></div></div><div style="display:none" id="code-sum_T1_T2_Tuple_decimal_decimal_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Sum()</div></div></div><div class="member-title"><a name="sumAsync"></a>sumAsync(Task&lt;Option&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync__Task_Option&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>(<span class="ident">Task</span>&lt;<span class="ident">Option</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync__Task_Option&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync"></a>sumAsync(Option&lt;Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync__Option_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>(<span class="ident">Option</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync__Option_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync"></a>sumAsync(Task&lt;OptionUnsafe&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync__Task_OptionUnsafe&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>(<span class="ident">Task</span>&lt;<span class="ident">OptionUnsafe</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync__Task_OptionUnsafe&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync"></a>sumAsync(OptionUnsafe&lt;Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync__OptionUnsafe_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync__OptionUnsafe_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync&lt;L>"></a>sumAsync&lt;L&gt;(Task&lt;Either&lt;L, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync_L_Task_Either&lt;L, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync_L_Task_Either&lt;L, int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync&lt;L>"></a>sumAsync&lt;L&gt;(Either&lt;L, Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync_L_Either_L_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync_L_Either_L_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync&lt;L>"></a>sumAsync&lt;L&gt;(Task&lt;EitherUnsafe&lt;L, int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync_L_Task_EitherUnsafe&lt;L, int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync_L_Task_EitherUnsafe&lt;L, int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="sumAsync&lt;L>"></a>sumAsync&lt;L&gt;(EitherUnsafe&lt;L, Task&lt;int&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-sumAsync_L_EitherUnsafe_L_Task&lt;int>_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt; <span class="ident">sumAsync</span>&lt;<span class="ident">L</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-sumAsync_L_EitherUnsafe_L_Task&lt;int>_self_"><div class="section_title">SOURCE</div><div class="code">
            self.SumAsync()</div></div></div><div class="member-title"><a name="tell&lt;Env, Out, S>"></a>tell&lt;Env, Out, S&gt;(Out)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tell_Env_Out_S_Out__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >RWS monad &#39;tell&#39; Adds an item to the writer&#39;s output </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Out</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">tell</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>&gt;(<span class="ident">Out</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Rws</span>&lt;<span class="ident">Env</span>, <span class="ident">Out</span>, <span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Rws monad</span></div></div></div><div style="display:none" id="code-tell_Env_Out_S_Out__value_"><div class="section_title">SOURCE</div><div class="code">
            rws =&gt; new RwsResult&lt;Out, S, Unit&gt;(new Out[1] { value }, rws.Item2, unit)</div></div></div><div class="member-title"><a name="tell&lt;Out>"></a>tell&lt;Out&gt;(Out)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tell_Out_Out__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Writer monad &#39;tell&#39; Adds an item to the writer&#39;s output </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">Out</span></div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt; <span class="ident">tell</span>&lt;<span class="ident">Out</span>&gt;(<span class="ident">Out</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"><span >Writer monad</span></div></div></div><div style="display:none" id="code-tell_Out_Out__value_"><div class="section_title">SOURCE</div><div class="code"> () =&gt; 
            new WriterResult&lt;Out, Unit&gt;(unit, new Out[1] { value })</div></div></div><div class="member-title"><a name="toArray&lt;L, R>"></a>toArray&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an ImmutableArray R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;ToArray has been deprecated.  Please use RightToArray.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>[] <span class="ident">toArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>[]</div><div class="normal"><span >If the Either is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-toArray_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.ToArray()</div></div></div><div class="member-title"><a name="toArray&lt;L, R>"></a>toArray&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an ImmutableArray R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;ToArray has been deprecated.  Please use RightToArray.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span>[] <span class="ident">toArray</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span>[]</div><div class="normal"><span >If the Either is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-toArray_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.ToArray()</div></div></div><div class="member-title"><a name="toArray&lt;T>"></a>toArray&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">toArray</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-toArray_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            var a = new T[items.Count()];
            int i = 0;
            foreach (var item in items)
            {
                a[i] = item;
                i++;
            }
            return a;
        </div></div></div><div class="member-title"><a name="toArray&lt;T>"></a>toArray&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">toArray</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-toArray_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.ToArray()</div></div></div><div class="member-title"><a name="toArray&lt;T>"></a>toArray&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span>[] <span class="ident">toArray</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span>[]</div><div class="normal"></div></div></div><div style="display:none" id="code-toArray_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.ToArray()</div></div></div><div class="member-title"><a name="toArray&lt;T>"></a>toArray&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[] <span class="ident">toArray</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[]</div><div class="normal"></div></div></div><div style="display:none" id="code-toArray_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToArray()</div></div></div><div class="member-title"><a name="toArray&lt;T>"></a>toArray&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toArray_T_TryOption_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[] <span class="ident">toArray</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;[]</div><div class="normal"></div></div></div><div style="display:none" id="code-toArray_T_TryOption_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToArray()</div></div></div><div class="member-title"><a name="toEither&lt;L, T>"></a>toEither&lt;L, T&gt;(T?, L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toEither_L_T_T__self__L__defaultLeftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultLeftValue</div><div class="arg-type"><span class="ident">L</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; <span class="ident">toEither</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">L</span> defaultLeftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toEither_L_T_T__self__L__defaultLeftValue_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Right&lt;L, T&gt;(self.Value)
                : Left&lt;L, T&gt;(defaultLeftValue)</div></div></div><div class="member-title"><a name="toEither&lt;L, T>"></a>toEither&lt;L, T&gt;(T?, Func&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toEither_L_T_T__self__Func_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; <span class="ident">toEither</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">L</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toEither_L_T_T__self__Func_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Right&lt;L, T&gt;(self.Value)
                : Left&lt;L, T&gt;(Left())</div></div></div><div class="member-title"><a name="toEitherUnsafe&lt;L, T>"></a>toEitherUnsafe&lt;L, T&gt;(T?, L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toEitherUnsafe_L_T_T__self__L__defaultLeftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultLeftValue</div><div class="arg-type"><span class="ident">L</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; <span class="ident">toEitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">L</span> defaultLeftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toEitherUnsafe_L_T_T__self__L__defaultLeftValue_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? RightUnsafe&lt;L, T&gt;(self.Value)
                : LeftUnsafe&lt;L, T&gt;(defaultLeftValue)</div></div></div><div class="member-title"><a name="toEitherUnsafe&lt;L, T>"></a>toEitherUnsafe&lt;L, T&gt;(T?, Func&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toEitherUnsafe_L_T_T__self__Func_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt; <span class="ident">toEitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">Func</span>&lt;<span class="ident">L</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toEitherUnsafe_L_T_T__self__Func_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? RightUnsafe&lt;L, T&gt;(self.Value)
                : LeftUnsafe&lt;L, T&gt;(Left())</div></div></div><div class="member-title"><a name="toList&lt;L, R>"></a>toList&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;toList has been deprecated.  Please use rightToList.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">toList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-toList_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.ToList()</div></div></div><div class="member-title"><a name="toList&lt;L, R>"></a>toList&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into a Lst R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;toList has been deprecated.  Please use rightToList.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">toList</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-toList_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.ToList()</div></div></div><div class="member-title"><a name="toList&lt;T>"></a>toList&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable list </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toList</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toList_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            items is Lst&lt;T&gt;
                ? (Lst&lt;T&gt;)items
                : new Lst&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="toList&lt;T>"></a>toList&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toList</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toList_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.ToList()</div></div></div><div class="member-title"><a name="toList&lt;T>"></a>toList&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toList</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toList_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.ToList()</div></div></div><div class="member-title"><a name="toList&lt;T>"></a>toList&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">toList</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toList_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToList()</div></div></div><div class="member-title"><a name="toList&lt;T>"></a>toList&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toList_T_TryOption_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">toList</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toList_T_TryOption_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToList()</div></div></div><div class="member-title"><a name="toOption&lt;T>"></a>toOption&lt;T&gt;(T?)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toOption_T_T__self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert NullableT to OptionT </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div><div class="arg-desc">Value to convert</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toOption</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span>? self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"><span >OptionT with Some or None, depending on HasValue</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toOption_T_T__self_"><div class="section_title">SOURCE</div><div class="code">
            self.HasValue
                ? Some(self.Value)
                : None</div></div></div><div class="member-title"><a name="toQuery&lt;L, R>"></a>toQuery&lt;L, R&gt;(Either&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_L_R_Either_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;ToQuery has been deprecated.  Please use RightToQuery.&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">toQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, an IQueryable of R with one item.  A zero length IQueryable R otherwise</span></div></div></div><div style="display:none" id="code-toQuery_L_R_Either_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.AsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;L, R>"></a>toQuery&lt;L, R&gt;(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_L_R_EitherUnsafe_L_R_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Either into an IQueryable of R </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Either to project</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;ToQuery has been deprecated.  Please use RightToQuery.&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt; <span class="ident">toQuery</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; either)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the Either is in a Right state, an IQueryable of R with one item.  A zero length IQueryable R otherwise</span></div></div></div><div style="display:none" id="code-toQuery_L_R_EitherUnsafe_L_R_either_"><div class="section_title">SOURCE</div><div class="code">
            either.AsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;T>"></a>toQuery&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert to queryable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toQuery</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQuery_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            items.AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;T>"></a>toQuery&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toQuery</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQuery_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.AsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;T>"></a>toQuery&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toQuery</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQuery_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.AsEnumerable().AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;T>"></a>toQuery&lt;T&gt;(Try&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_T_Try_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">toQuery</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQuery_T_Try_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToList().AsQueryable()</div></div></div><div class="member-title"><a name="toQuery&lt;T>"></a>toQuery&lt;T&gt;(TryOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQuery_T_TryOption_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IQueryable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">toQuery</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IQueryable</span>&lt;<span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQuery_T_TryOption_T_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            tryDel.ToList().AsQueryable()</div></div></div><div class="member-title"><a name="toQueue&lt;T>"></a>toQueue&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toQueue_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable queue </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Que</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toQueue</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Que</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toQueue_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            var q = new Que&lt;T&gt;();
            foreach (var item in items)
            {
                q = q.Enqueue(item);
            }
            return q;
        </div></div></div><div class="member-title"><a name="toSet&lt;T>"></a>toSet&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toSet_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Set</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toSet</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toSet_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            LanguageExt.Set.createRange&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="toStack&lt;T>"></a>toStack&lt;T&gt;(IEnumerable&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toStack_T_IEnumerable_T_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Create an immutable stack </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toStack</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">IEnumerable</span>&lt;<span class="ident">T</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Stck</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-toStack_T_IEnumerable_T_items_"><div class="section_title">SOURCE</div><div class="code">
            new Stck&lt;T&gt;(items)</div></div></div><div class="member-title"><a name="toString&lt;T>"></a>toString&lt;T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toString_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a value to string </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="ident">toString</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"></div></div></div><div style="display:none" id="code-toString_T_T__value_"><div class="section_title">SOURCE</div><div class="code">
            value?.ToString()</div></div></div><div class="member-title"><a name="toTryOption&lt;L, T>"></a>toTryOption&lt;L, T&gt;(T?, L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-toTryOption_L_T_T__self__L__defaultLeftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span>?</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">defaultLeftValue</div><div class="arg-type"><span class="ident">L</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">toTryOption</span>&lt;<span class="ident">L</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span>? self, <span class="ident">L</span> defaultLeftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div><div style="display:none" id="code-toTryOption_L_T_T__self__L__defaultLeftValue_"><div class="section_title">SOURCE</div><div class="code">
            () =&gt; Optional&lt;T&gt;(self)</div></div></div><div class="member-title"><a name="trifold&lt;T1, T2, T3, S>"></a>trifold&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T1, S&gt;, Func&lt;S, T2, S&gt;, Func&lt;S, T3, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-trifold_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T1_S_firstFold__Func_S_T2_S_secondFold__Func_S_T3_S_thirdFold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tri-fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">thirdFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">trifold</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt; firstFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt; secondFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt; thirdFold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-trifold_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T1_S_firstFold__Func_S_T2_S_secondFold__Func_S_T3_S_thirdFold_"><div class="section_title">SOURCE</div><div class="code">
            thirdFold(secondFold(firstFold(state, self.Item1), self.Item2), self.Item3)</div></div></div><div class="member-title"><a name="trifoldBack&lt;T1, T2, T3, S>"></a>trifoldBack&lt;T1, T2, T3, S&gt;(Tuple&lt;T1, T2, T3&gt;, S, Func&lt;S, T3, S&gt;, Func&lt;S, T2, S&gt;, Func&lt;S, T1, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-trifoldBack_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T3_S_firstFold__Func_S_T2_S_secondFold__Func_S_T1_S_thirdFold_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tri-fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">thirdFold</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">trifoldBack</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T3</span>, <span class="ident">S</span>&gt; firstFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T2</span>, <span class="ident">S</span>&gt; secondFold, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T1</span>, <span class="ident">S</span>&gt; thirdFold)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-trifoldBack_T1_T2_T3_S_Tuple_T1_T2_T3_self__S__state__Func_S_T3_S_firstFold__Func_S_T2_S_secondFold__Func_S_T1_S_thirdFold_"><div class="section_title">SOURCE</div><div class="code">
            thirdFold(secondFold(firstFold(state, self.Item3), self.Item2), self.Item1)</div></div></div><div class="member-title"><a name="trimap&lt;T1, T2, T3, R1, R2, R3>"></a>trimap&lt;T1, T2, T3, R1, R2, R3&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, R1&gt;, Func&lt;T2, R2&gt;, Func&lt;T3, R3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-trimap_T1_T2_T3_R1_R2_R3_Tuple_T1_T2_T3_self__Func_T1_R1_firstMap__Func_T2_R2_secondMap__Func_T3_R3_thirdMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tri-map to tuple </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">firstMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">secondMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">thirdMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt; <span class="ident">trimap</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">R1</span>&gt; firstMap, <span class="ident">Func</span>&lt;<span class="ident">T2</span>, <span class="ident">R2</span>&gt; secondMap, <span class="ident">Func</span>&lt;<span class="ident">T3</span>, <span class="ident">R3</span>&gt; thirdMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">R1</span>, <span class="ident">R2</span>, <span class="ident">R3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-trimap_T1_T2_T3_R1_R2_R3_Tuple_T1_T2_T3_self__Func_T1_R1_firstMap__Func_T2_R2_secondMap__Func_T3_R3_thirdMap_"><div class="section_title">SOURCE</div><div class="code">
            Tuple(firstMap(self.Item1), secondMap(self.Item2), thirdMap(self.Item3))</div></div></div><div class="member-title"><a name="Try&lt;T>"></a>Try&lt;T&gt;(Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Try_T_Func_T_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Try_T_Func_T_tryDel_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
            tryDel()</div></div></div><div class="member-title"><a name="tryfun&lt;Env, T>"></a>tryfun&lt;Env, T&gt;(Func&lt;Reader&lt;Env, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryfun_Env_T_Func_Reader&lt;Env, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">tryfun</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryfun_Env_T_Func_Reader&lt;Env, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            () =&gt; from x in tryDel()
                  select x</div></div></div><div class="member-title"><a name="tryfun&lt;Out, T>"></a>tryfun&lt;Out, T&gt;(Func&lt;Writer&lt;Out, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryfun_Out_T_Func_Writer&lt;Out, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">tryfun</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryfun_Out_T_Func_Writer&lt;Out, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code">
            () =&gt; from x in tryDel()
                  select x</div></div></div><div class="member-title"><a name="tryfun&lt;S, T>"></a>tryfun&lt;S, T&gt;(Func&lt;State&lt;S, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryfun_S_T_Func_State&lt;S, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">tryfun</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryfun_S_T_Func_State&lt;S, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> 
            () =&gt; from x in tryDel()
                  select x</div></div></div><div class="member-title"><a name="tryfun&lt;T>"></a>tryfun&lt;T&gt;(Func&lt;Try&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryfun_T_Func_Try&lt;T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; <span class="ident">tryfun</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryfun_T_Func_Try&lt;T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
        {
            try
            {
                return tryDel().Try();
            }
            catch (Exception e)
            {
                return new TryResult&lt;T&gt;(e);
            }
        }</div></div></div><div class="member-title"><a name="tryfun&lt;T>"></a>tryfun&lt;T&gt;(Func&lt;TryOption&lt;T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryfun_T_Func_TryOption&lt;T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">tryfun</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryfun_T_Func_TryOption&lt;T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> () =&gt; 
            tryDel()()</div></div></div><div class="member-title"><a name="tryread&lt;Env, T>"></a>tryread&lt;Env, T&gt;(Func&lt;Reader&lt;Env, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryread_Env_T_Func_Reader&lt;Env, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt; <span class="ident">tryread</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Reader</span>&lt;<span class="ident">Env</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tryread_Env_T_Func_Reader&lt;Env, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            try
            {
                return (from x in tryDel()
                        select x)(env);
            }
            catch
            {
                return new ReaderResult&lt;T&gt;(default(T), true);
            }
        }</div></div></div><div class="member-title"><a name="trystate&lt;S, T>"></a>trystate&lt;S, T&gt;(Func&lt;State&lt;S, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-trystate_S_T_Func_State&lt;S, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt; <span class="ident">trystate</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-trystate_S_T_Func_State&lt;S, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
        {
            try
            {
                return (from x in tryDel()
                        select x)(state);
            }
            catch
            {
                return new StateResult&lt;S, T&gt;(state, default(T), true);
            }
        }</div></div></div><div class="member-title"><a name="tryuse&lt;T, R>"></a>tryuse&lt;T, R&gt;(Func&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryuse_T_R_Func_T_disposable__Func_T_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Functional implementation of the using(...) { } pattern </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">disposable</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Disposable to use</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Inner map function that uses the disposable value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">tryuse</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; disposable, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Result of f(disposable)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-tryuse_T_R_Func_T_disposable__Func_T_R_f_"><div class="section_title">SOURCE</div><div class="code">
            Try(disposable)
                .Map(v =&gt;
                {
                    try
                    {
                        return f(v);
                    }
                    finally
                    {
                        v.Dispose();
                    }
                })</div></div></div><div class="member-title"><a name="tryuse&lt;T, R>"></a>tryuse&lt;T, R&gt;(T, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tryuse_T_R_T__disposable__Func_T_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Functional implementation of the using(...) { } pattern </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">disposable</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Disposable to use</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Inner map function that uses the disposable value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">R</span>&gt; <span class="ident">tryuse</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span> disposable, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Result of f(disposable)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-tryuse_T_R_T__disposable__Func_T_R_f_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
        {
            try
            {
                return f(disposable);
            }
            finally
            {
                disposable.Dispose();
            }
        }</div></div></div><div class="member-title"><a name="trywrite&lt;Out, T>"></a>trywrite&lt;Out, T&gt;(Func&lt;Writer&lt;Out, T&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-trywrite_Out_T_Func_Writer&lt;Out, T>_tryDel_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">tryDel</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">trywrite</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;&gt; tryDel)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-trywrite_Out_T_Func_Writer&lt;Out, T>_tryDel_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
        {
            try
            {
                return (from x in tryDel()
                        select x)();
            }
            catch
            {
                return new WriterResult&lt;Out, T&gt;(default(T), new Out[0], true);
            }
        }</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2, T3, T4, T5, T6, T7>"></a>tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T3_T4_T5_T6_T7_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6__T7__item7_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item6</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item7</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5, <span class="ident">T6</span> item6, <span class="ident">T7</span> item7)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T3_T4_T5_T6_T7_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6__T7__item7_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5, item6, item7)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2, T3, T4, T5, T6, T7>"></a>Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;(T1, T2, T3, T4, T5, T6, T7)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T3_T4_T5_T6_T7_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6__T7__item7_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item6</div><div class="arg-type"><span class="ident">T6</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item7</div><div class="arg-type"><span class="ident">T7</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5, <span class="ident">T6</span> item6, <span class="ident">T7</span> item7)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T3_T4_T5_T6_T7_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6__T7__item7_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5, item6, item7)</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2, T3, T4, T5, T6>"></a>tuple&lt;T1, T2, T3, T4, T5, T6&gt;(T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T3_T4_T5_T6_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item6</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5, <span class="ident">T6</span> item6)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T3_T4_T5_T6_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5, item6)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2, T3, T4, T5, T6>"></a>Tuple&lt;T1, T2, T3, T4, T5, T6&gt;(T1, T2, T3, T4, T5, T6)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T3_T4_T5_T6_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item6</div><div class="arg-type"><span class="ident">T6</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5, <span class="ident">T6</span> item6)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T3_T4_T5_T6_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5__T6__item6_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5, item6)</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2, T3, T4, T5>"></a>tuple&lt;T1, T2, T3, T4, T5&gt;(T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T3_T4_T5_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T3_T4_T5_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2, T3, T4, T5>"></a>Tuple&lt;T1, T2, T3, T4, T5&gt;(T1, T2, T3, T4, T5)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T3_T4_T5_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item5</div><div class="arg-type"><span class="ident">T5</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4, <span class="ident">T5</span> item5)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T3_T4_T5_T1__item1__T2__item2__T3__item3__T4__item4__T5__item5_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4, item5)</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2, T3, T4>"></a>tuple&lt;T1, T2, T3, T4&gt;(T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T3_T4_T1__item1__T2__item2__T3__item3__T4__item4_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T3_T4_T1__item1__T2__item2__T3__item3__T4__item4_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2, T3, T4>"></a>Tuple&lt;T1, T2, T3, T4&gt;(T1, T2, T3, T4)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T3_T4_T1__item1__T2__item2__T3__item3__T4__item4_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item4</div><div class="arg-type"><span class="ident">T4</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3, <span class="ident">T4</span> item4)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T3_T4_T1__item1__T2__item2__T3__item3__T4__item4_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3, item4)</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2, T3>"></a>tuple&lt;T1, T2, T3&gt;(T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T3_T1__item1__T2__item2__T3__item3_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T3_T1__item1__T2__item2__T3__item3_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2, T3>"></a>Tuple&lt;T1, T2, T3&gt;(T1, T2, T3)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T3_T1__item1__T2__item2__T3__item3_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item3</div><div class="arg-type"><span class="ident">T3</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2, <span class="ident">T3</span> item3)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T3_T1__item1__T2__item2__T3__item3_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2, item3)</div></div></div><div class="member-title"><a name="tuple&lt;T1, T2>"></a>tuple&lt;T1, T2&gt;(T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-tuple_T1_T2_T1__item1__T2__item2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;Use &#39;Tuple&#39;.  All constructor functions are renamed to have their first letter as a capital.&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; <span class="ident">tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-tuple_T1_T2_T1__item1__T2__item2_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2)</div></div></div><div class="member-title"><a name="Tuple&lt;T1, T2>"></a>Tuple&lt;T1, T2&gt;(T1, T2)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tuple_T1_T2_T1__item1__T2__item2_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tuple constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">item2</div><div class="arg-type"><span class="ident">T2</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">T1</span> item1, <span class="ident">T2</span> item2)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Tuple_T1_T2_T1__item1__T2__item2_"><div class="section_title">SOURCE</div><div class="code">
            System.Tuple.Create(item1, item2)</div></div></div><div class="member-title"><a name="use&lt;T, R>"></a>use&lt;T, R&gt;(Func&lt;T&gt;, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_R_Func_T_generator__Func_T_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Functional implementation of the using(...) { } pattern </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">generator</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div><div class="arg-desc">Disposable to use</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Inner map function that uses the disposable value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; generator, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Result of f(disposable)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span> <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_R_Func_T_generator__Func_T_R_f_"><div class="section_title">SOURCE</div><div class="code">
            var value = generator();
            try
            {
                return f(value);
            }
            finally
            {
                value.Dispose();
            }
        </div></div></div><div class="member-title"><a name="use&lt;T, R>"></a>use&lt;T, R&gt;(T, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_R_T__disposable__Func_T_R_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Functional implementation of the using(...) { } pattern </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">disposable</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Disposable to use</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc">Inner map function that uses the disposable value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span> disposable, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Result of f(disposable)</span></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_R_T__disposable__Func_T_R_f_"><div class="section_title">SOURCE</div><div class="code">
            try
            {
                return f(disposable);
            }
            finally
            {
                disposable.Dispose();
            }
        </div></div></div><div class="member-title"><a name="use&lt;T, U>"></a>use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_U_Try_T_computation__Func_T_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with Try monad in LINQ expressions to auto-clean up disposable items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">computation</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; computation, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span> <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_U_Try_T_computation__Func_T_U_map_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
        {
            var resT = computation.Try();
            if (resT.IsFaulted)
            {
                return new TryResult&lt;U&gt;(resT.Exception);
            }
            else
            {
                try
                {
                    var resU = map(resT.Value);
                    resT.Value?.Dispose();
                    return new TryResult&lt;U&gt;(resU);
                }
                catch(Exception e)
                {
                    return new TryResult&lt;U&gt;(e);
                }
                finally
                {
                    resT.Value?.Dispose();
                }
            }
        }</div></div></div><div class="member-title"><a name="use&lt;T, U>"></a>use&lt;T, U&gt;(Try&lt;T&gt;, Func&lt;T, Try&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_U_Try_T_computation__Func_T_Try&lt;U>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with Try monad in LINQ expressions to auto-clean up disposable items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">computation</div><div class="arg-type"><span class="ident">Try</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt; <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Try</span>&lt;<span class="ident">T</span>&gt; computation, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Try</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span> <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_U_Try_T_computation__Func_T_Try&lt;U>_bind_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
        {
            var resT = computation.Try();
            if (resT.IsFaulted)
            {
                return new TryResult&lt;U&gt;(resT.Exception);
            }
            else
            {
                try
                {
                    var resU = bind(resT.Value);
                    resT.Value?.Dispose();
                    return resU.Try();
                }
                catch (Exception e)
                {
                    return new TryResult&lt;U&gt;(e);
                }
                finally
                {
                    resT.Value?.Dispose();
                }
            }
        }</div></div></div><div class="member-title"><a name="use&lt;T, U>"></a>use&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_U_Task_T_computation__Func_T_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with Task in LINQ expressions to auto-clean up disposable items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">computation</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; computation, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span> <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_U_Task_T_computation__Func_T_U_map_"><div class="section_title">SOURCE</div><div class="code">
            T t = null;
            try
            {
                t = await computation;
                return map(t);
            }
            finally
            {
                t?.Dispose();
            }
        </div></div></div><div class="member-title"><a name="use&lt;T, U>"></a>use&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-use_T_U_Task_T_computation__Func_T_Task&lt;U>_bind_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with Task in LINQ expressions to auto-clean up disposable items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">computation</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">use</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; computation, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; bind)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span> <span class="ident">IDisposable</span></div></div><div style="display:none" id="code-use_T_U_Task_T_computation__Func_T_Task&lt;U>_bind_"><div class="section_title">SOURCE</div><div class="code">
            T t = null;
            try
            {
                t = await computation;
                return await bind(t);
            }
            finally
            {
                t?.Dispose();
            }
        </div></div></div><div class="member-title"><a name="with&lt;T, R>"></a>with&lt;T, R&gt;(T, Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T_R_T__value__Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with the &#39;match&#39; function to match values and map a result </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">with</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">T</span> value, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-with_T_R_T__value__Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            (T input) =&gt;
                EqualityComparer&lt;T&gt;.Default.Equals(input, value)
                    ? Some(map(input))
                    : None</div></div></div><div class="member-title"><a name="with&lt;T, R>"></a>with&lt;T, R&gt;(Func&lt;T, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T_R_Func_T_R_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Use with the &#39;match&#39; function to match values and map a result </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt; <span class="ident">with</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="ident">Exception</span></div></div><div style="display:none" id="code-with_T_R_Func_T_R_map_"><div class="section_title">SOURCE</div><div class="code">
            (Exception input) =&gt;
                input is T
                    ? Some(map((T)input))
                    : None</div></div></div><div class="member-title"><a name="with&lt;T1, T2, R>"></a>with&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2)</div></div></div><div class="member-title"><a name="with&lt;T1, T2, R>"></a>with&lt;T1, T2, R&gt;(T1, T2, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_R_T1__value1__T2__value2__Func_T1_T2_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_R_T1__value1__T2__value2__Func_T1_T2_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, R>"></a>With&lt;T1, T2, R&gt;(Tuple&lt;T1, T2&gt;, Func&lt;T1, T2, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_R_Tuple_T1_T2_self__Func_T1_T2_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, R>"></a>with&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3)</div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, R>"></a>with&lt;T1, T2, T3, R&gt;(T1, T2, T3, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_R_T1__value1__T2__value2__T3__value3__Func_T1_T2_T3_R_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Projects values into a lambda Useful when one needs to declare a local variable which breaks your expression.  This allows you to keep the expression going. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value1</div><div class="arg-type"><span class="ident">T1</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value2</div><div class="arg-type"><span class="ident">T2</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value3</div><div class="arg-type"><span class="ident">T3</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="ident">T1</span> value1, <span class="ident">T2</span> value2, <span class="ident">T3</span> value3, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_R_T1__value1__T2__value2__T3__value3__Func_T1_T2_T3_R_project_"><div class="section_title">SOURCE</div><div class="code">
            project(value1, value2, value3)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, R>"></a>With&lt;T1, T2, T3, R&gt;(Tuple&lt;T1, T2, T3&gt;, Func&lt;T1, T2, T3, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_T3_R_Tuple_T1_T2_T3_self__Func_T1_T2_T3_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2, self.Item3);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, R>"></a>with&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, R>"></a>With&lt;T1, T2, T3, T4, R&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Func&lt;T1, T2, T3, T4, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_T3_T4_R_Tuple_T1_T2_T3_T4_self__Func_T1_T2_T3_T4_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2, self.Item3, self.Item4);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5, R>"></a>with&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5, R>"></a>With&lt;T1, T2, T3, T4, T5, R&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Func&lt;T1, T2, T3, T4, T5, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_R_Tuple_T1_T2_T3_T4_T5_self__Func_T1_T2_T3_T4_T5_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5, T6, R>"></a>with&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5, T6, R>"></a>With&lt;T1, T2, T3, T4, T5, T6, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Func&lt;T1, T2, T3, T4, T5, T6, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_T6_R_Tuple_T1_T2_T3_T4_T5_T6_self__Func_T1_T2_T3_T4_T5_T6_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>with&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7)</div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5, T6, T7, R>"></a>With&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Func&lt;T1, T2, T3, T4, T5, T6, T7, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>, <span class="ident">R</span>&gt; func)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_T6_T7_R_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Func_T1_T2_T3_T4_T5_T6_T7_R_func_"><div class="section_title">SOURCE</div><div class="code">
            return func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7);
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5, T6, T7>"></a>with&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5, T6, T7>"></a>With&lt;T1, T2, T3, T4, T5, T6, T7&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6, T7&gt;, Action&lt;T1, T2, T3, T4, T5, T6, T7&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>, <span class="ident">T7</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_T6_T7_Tuple_T1_T2_T3_T4_T5_T6_T7_self__Action_T1_T2_T3_T4_T5_T6_T7_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6, self.Item7);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5, T6>"></a>with&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5, T6>"></a>With&lt;T1, T2, T3, T4, T5, T6&gt;(Tuple&lt;T1, T2, T3, T4, T5, T6&gt;, Action&lt;T1, T2, T3, T4, T5, T6&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>, <span class="ident">T6</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_T6_Tuple_T1_T2_T3_T4_T5_T6_self__Action_T1_T2_T3_T4_T5_T6_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5, self.Item6);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4, T5>"></a>with&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4, T5>"></a>With&lt;T1, T2, T3, T4, T5&gt;(Tuple&lt;T1, T2, T3, T4, T5&gt;, Action&lt;T1, T2, T3, T4, T5&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>, <span class="ident">T5</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_T3_T4_T5_Tuple_T1_T2_T3_T4_T5_self__Action_T1_T2_T3_T4_T5_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4, self.Item5);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3, T4>"></a>with&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3, T4>"></a>With&lt;T1, T2, T3, T4&gt;(Tuple&lt;T1, T2, T3, T4&gt;, Action&lt;T1, T2, T3, T4&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>, <span class="ident">T4</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_T3_T4_Tuple_T1_T2_T3_T4_self__Action_T1_T2_T3_T4_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3, self.Item4);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2, T3>"></a>with&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2, T3>"></a>With&lt;T1, T2, T3&gt;(Tuple&lt;T1, T2, T3&gt;, Action&lt;T1, T2, T3&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>, <span class="ident">T3</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_T3_Tuple_T1_T2_T3_self__Action_T1_T2_T3_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2, self.Item3);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="with&lt;T1, T2>"></a>with&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-with_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Obsolete(&quot;&#39;with&#39; has been renamed to &#39;map&#39;, please use that instead&quot;)]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">with</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; func)</div></div><div style="display:none" id="code-with_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="With&lt;T1, T2>"></a>With&lt;T1, T2&gt;(Tuple&lt;T1, T2&gt;, Action&lt;T1, T2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-With_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">func</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;&#39;With&#39; has been renamed to &#39;Map&#39;, please use that instead&quot;)]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">With</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt;(<span class="keyword">this</span> <span class="ident">Tuple</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">T1</span>, <span class="ident">T2</span>&gt; func)</div></div><div style="display:none" id="code-With_T1_T2_Tuple_T1_T2_self__Action_T1_T2_func_"><div class="section_title">SOURCE</div><div class="code">
            func(self.Item1, self.Item2);
            return Unit.Default;
        </div></div></div><div class="member-title"><a name="Writer&lt;Out, T>"></a>Writer&lt;Out, T&gt;(T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Writer_Out_T_T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Writer monad constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Wrapped value</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Writer monad</span></div></div></div><div style="display:none" id="code-Writer_Out_T_T__value_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
              new WriterResult&lt;Out, T&gt;(value, new Out[0])</div></div></div><div class="member-title"><a name="Writer&lt;Out, T>"></a>Writer&lt;Out, T&gt;(T, IEnumerable&lt;Out&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Writer_Out_T_T__value__IEnumerable_Out_ws_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Writer monad constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div><div class="arg-desc">Wrapped value</div></div><div class="arg"><div class="arg-header"><div class="arg-name">ws</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">Out</span>&gt;</div></div><div class="arg-desc">Writer log</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt; <span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;(<span class="ident">T</span> value, <span class="ident">IEnumerable</span>&lt;<span class="ident">Out</span>&gt; ws)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Writer</span>&lt;<span class="ident">Out</span>, <span class="ident">T</span>&gt;</div><div class="normal"><span >Writer monad</span></div></div></div><div style="display:none" id="code-Writer_Out_T_T__value__IEnumerable_Out_ws_"><div class="section_title">SOURCE</div><div class="code"> () =&gt;
              new WriterResult&lt;Out, T&gt;(value, ws)</div></div></div></div></body></html>