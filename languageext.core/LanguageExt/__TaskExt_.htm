<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="__TaskExt_.htm">__TaskExt</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AsTask&lt;T>">AsTask&lt;T&gt;(T)</a><a class="nav-link" href="#Bind&lt;T, U>">Bind&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#Cast&lt;T>">Cast&lt;T&gt;(Task)</a><a class="nav-link" href="#Count&lt;T>">Count&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#Exists&lt;T>">Exists&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Filter&lt;T>">Filter&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Fold&lt;T, S>">Fold&lt;T, S&gt;(Task&lt;T&gt;, S, Func&lt;S, T, S&gt;)</a><a class="nav-link" href="#ForAll&lt;T>">ForAll&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#GroupJoin&lt;T, U, K, V>">GroupJoin&lt;T, U, K, V&gt;(Task&lt;T&gt;, Task&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, Task&lt;U&gt;, V&gt;)</a><a class="nav-link" href="#Iter&lt;T>">Iter&lt;T&gt;(Task&lt;T&gt;, Action&lt;T&gt;)</a><a class="nav-link" href="#Join&lt;T, U, K, V>">Join&lt;T, U, K, V&gt;(Task&lt;T&gt;, Task&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#Lift&lt;T>">Lift&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#LiftUnsafe&lt;T>">LiftUnsafe&lt;T&gt;(Task&lt;T&gt;)</a><a class="nav-link" href="#Map&lt;T, U>">Map&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#Select&lt;T, U>">Select&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U, V>">SelectMany&lt;T, U, V&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</a><a class="nav-link" href="#SelectMany&lt;T, U>">SelectMany&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</a><a class="nav-link" href="#Sum">Sum(Task&lt;int&gt;)</a><a class="nav-link" href="#Where&lt;T>">Where&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</a></div><div class="content-panel"><h1 >__TaskExt Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">__TaskExt</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="AsTask&lt;T>"></a>AsTask&lt;T&gt;(T)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Convert a value to a Task that completes immediately </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">AsTask</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">T</span> <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Bind&lt;T, U>"></a>Bind&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Monadic bind operation for Task </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Cast&lt;T>"></a>Cast&lt;T&gt;(Task)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">source</div><div class="arg-type"><span class="ident">Task</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Cast</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span> <span class="ident">source</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Count&lt;T>"></a>Count&lt;T&gt;(Task&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Get the Count of a Task T.  Returns either 1 or 0 if cancelled or faulted. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Count</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Exists&lt;T>"></a>Exists&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns false if the Task is cancelled or faulted, otherwise it returns the result of pred(Result) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Filter&lt;T>"></a>Filter&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Filters the task.  This throws a BottomException when pred(Result) returns false </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Fold&lt;T, S>"></a>Fold&lt;T, S&gt;(Task&lt;T&gt;, S, Func&lt;S, T, S&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Folds the Task.  Returns folder(state,Result) if not faulted or cancelled.  Returns state otherwise. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">T</span>, <span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">S</span> <span class="ident">state</span>, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">T</span>, <span class="ident">S</span>&gt; <span class="ident">folder</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="ForAll&lt;T>"></a>ForAll&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns false if the Task is cancelled or faulted, otherwise it returns the result of pred(Result) </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="GroupJoin&lt;T, U, K, V>"></a>GroupJoin&lt;T, U, K, V&gt;(Task&lt;T&gt;, Task&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, Task&lt;U&gt;, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">source</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">V</span>&gt; <span class="ident">GroupJoin</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">source</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">inner</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt; <span class="ident">outerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; <span class="ident">innerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Iter&lt;T>"></a>Iter&lt;T&gt;(Task&lt;T&gt;, Action&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Iterates the Task.  Invokes f(Result) if not faulted or cancelled </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Unit</span> <span class="ident">Iter</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Action</span>&lt;<span class="ident">T</span>&gt; <span class="ident">f</span>)</div></div></div><div class="member-title"><a name="Join&lt;T, U, K, V>"></a>Join&lt;T, U, K, V&gt;(Task&lt;T&gt;, Task&lt;U&gt;, Func&lt;T, K&gt;, Func&lt;U, K&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">source</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">V</span>&gt; <span class="ident">Join</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">source</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">inner</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">K</span>&gt; <span class="ident">outerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; <span class="ident">innerKeyMap</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Lift&lt;T>"></a>Lift&lt;T&gt;(Task&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Extracts the value from the Task - here for completeness so that the HKT work. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">Lift</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">struct</span></div></div></div><div class="member-title"><a name="LiftUnsafe&lt;T>"></a>LiftUnsafe&lt;T&gt;(Task&lt;T&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Extracts the value from the Task - here for completeness so that the HKT work. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">T</span> <span class="ident">LiftUnsafe</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">T</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">T</span> : <span class="keyword">class</span></div></div></div><div class="member-title"><a name="Map&lt;T, U>"></a>Map&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Returns map(Result) if not faulted or cancelled. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Select&lt;T, U>"></a>Select&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, U&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Standard LINQ Select implementation for Task </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt; <span class="ident">map</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U, V>"></a>SelectMany&lt;T, U, V&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;, Func&lt;T, U, V&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Standard LINQ SelectMany implementation for Task </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; <span class="ident">project</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">V</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="SelectMany&lt;T, U>"></a>SelectMany&lt;T, U&gt;(Task&lt;T&gt;, Func&lt;T, Task&lt;U&gt;&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Standard LINQ SelectMany implementation for Task </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">T</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;&gt; <span class="ident">bind</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">U</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="Sum"></a>Sum(Task&lt;int&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Get the Sum of a Task int.  Returns either the wrapped value or 0 if cancelled or faulted. </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">int</span> <span class="ident">Sum</span>(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">int</span>&gt; <span class="ident">self</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Where&lt;T>"></a>Where&lt;T&gt;(Task&lt;T&gt;, Func&lt;T, bool&gt;)</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p >Standard LINQ Where implementation for Task </p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Task</span>&lt;<span class="ident">T</span>&gt; <span class="ident">self</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">bool</span>&gt; <span class="ident">pred</span>)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div></div></div></body></html>