<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="https://louthy.github.io/">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.Parsec/index.htm">LanguageExt.Parsec</a> \ <span class="nav-bar-link" href="CharT_.htm">CharT</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#alphaNum">alphaNum</a><a class="nav-link" href="#anyChar">anyChar</a><a class="nav-link" href="#control">control</a><a class="nav-link" href="#CR">CR</a><a class="nav-link" href="#CRLF">CRLF</a><a class="nav-link" href="#digit">digit</a><a class="nav-link" href="#endOfLine">endOfLine</a><a class="nav-link" href="#hexDigit">hexDigit</a><a class="nav-link" href="#letter">letter</a><a class="nav-link" href="#lower">lower</a><a class="nav-link" href="#newline">newline</a><a class="nav-link" href="#octDigit">octDigit</a><a class="nav-link" href="#punctuation">punctuation</a><a class="nav-link" href="#separator">separator</a><a class="nav-link" href="#space">space</a><a class="nav-link" href="#spaces">spaces</a><a class="nav-link" href="#symbolchar">symbolchar</a><a class="nav-link" href="#tab">tab</a><a class="nav-link" href="#upper">upper</a><h3 >METHODS</h3><a class="nav-link" href="#ch">ch(char)</a><a class="nav-link" href="#noneOf">noneOf(string)</a><a class="nav-link" href="#noneOf">noneOf(char[])</a><a class="nav-link" href="#oneOf">oneOf(string)</a><a class="nav-link" href="#oneOf">oneOf(char[])</a><a class="nav-link" href="#satisfy">satisfy(Func&lt;char, bool&gt;)</a><a class="nav-link" href="#str">str(string)</a></div><div class="content-panel"><h1 >CharT Class</h1><p ><span >Commonly used character parsers. </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">CharT</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.Parsec</div></div><h2 >Fields</h2><div class="member-title"><a name="alphaNum"></a>alphaNum</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a letter or digit Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">alphaNum</span></div></div></div><div class="member-title"><a name="anyChar"></a>anyChar</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >The parser anyChar accepts any kind of character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">anyChar</span></div></div></div><div class="member-title"><a name="control"></a>control</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a control character Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">control</span></div></div></div><div class="member-title"><a name="CR"></a>CR</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a carriage-return char (\r) Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">CR</span></div></div></div><div class="member-title"><a name="CRLF"></a>CRLF</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a carriage-return then line-feed Returns the new-line. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">CRLF</span></div></div></div><div class="member-title"><a name="digit"></a>digit</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a digit Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">digit</span></div></div></div><div class="member-title"><a name="endOfLine"></a>endOfLine</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a CRLF (see &#39;crlf&#39;) or LF (see &#39;newline&#39;) end-of-line. Returns a newline character(\&#39;\\n\&#39;). </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">endOfLine</span></div></div></div><div class="member-title"><a name="hexDigit"></a>hexDigit</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a hex digit (0-F | 0-f) </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">hexDigit</span></div></div></div><div class="member-title"><a name="letter"></a>letter</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a letter Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">letter</span></div></div></div><div class="member-title"><a name="lower"></a>lower</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a lowercase letter Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">lower</span></div></div></div><div class="member-title"><a name="newline"></a>newline</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a line-feed newline char (\n) Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">newline</span></div></div></div><div class="member-title"><a name="octDigit"></a>octDigit</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses an octal digit (0-7) </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">octDigit</span></div></div></div><div class="member-title"><a name="punctuation"></a>punctuation</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a punctuation character Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">punctuation</span></div></div></div><div class="member-title"><a name="separator"></a>separator</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a separator character Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">separator</span></div></div></div><div class="member-title"><a name="space"></a>space</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a white space character (any character which satisfies &#39;System.Char.IsWhiteSpace&#39;) Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">space</span></div></div></div><div class="member-title"><a name="spaces"></a>spaces</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Skips zero or more white space characters. See also &#39;skipMany&#39;. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Unit</span>&gt; <span class="ident">spaces</span></div></div></div><div class="member-title"><a name="symbolchar"></a>symbolchar</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a symbol character Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">symbolchar</span></div></div></div><div class="member-title"><a name="tab"></a>tab</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a tab Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">tab</span></div></div></div><div class="member-title"><a name="upper"></a>upper</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a uppercase letter Returns the parsed character. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">upper</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="ch"></a>ch(char)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ch__char__c_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >ch(c) parses a single character c </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">c</div><div class="arg-type"><span class="keyword">char</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">ch</span>(<span class="keyword">char</span> c)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"><span >The parsed character</span></div></div></div><div style="display:none" id="code-ch__char__c_"><div class="section_title">SOURCE</div><div class="code">
            satisfy(x =&gt; x == c).label($&quot;&#39;{c}&#39;&quot;)</div></div></div><div class="member-title"><a name="noneOf"></a>noneOf(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-noneOf__string__str_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >As the dual of &#39;oneOf&#39;, noneOf(str) succeeds if the current character not in the supplied list of characters str. <br/><br/>     var consonant = noneOf(&quot;aeiou&quot;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">str</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">noneOf</span>(<span class="keyword">string</span> str)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"><span >The parsed character.</span></div></div></div><div style="display:none" id="code-noneOf__string__str_"><div class="section_title">SOURCE</div><div class="code">
            satisfy(c =&gt; !str.Contains(c))</div></div></div><div class="member-title"><a name="noneOf"></a>noneOf(char[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-noneOf__char__str_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >As the dual of &#39;oneOf&#39;, noneOf(str) succeeds if the current character not in the supplied list of characters str. <br/><br/>     var consonant = noneOf(&quot;aeiou&quot;) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">str</div><div class="arg-type"><span class="keyword">char</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">noneOf</span>(<span class="keyword">char</span>[] str)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"><span >The parsed character.</span></div></div></div><div style="display:none" id="code-noneOf__char__str_"><div class="section_title">SOURCE</div><div class="code">
            satisfy(c =&gt; !str.Contains(c))</div></div></div><div class="member-title"><a name="oneOf"></a>oneOf(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-oneOf__string__str_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >oneOf(str) succeeds if the current character is in the supplied list of  characters str. Returns the parsed character. See also satisfy </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">str</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">oneOf</span>(<span class="keyword">string</span> str)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-oneOf__string__str_"><div class="section_title">SOURCE</div><div class="code">
            satisfy(c =&gt; str.Contains(c))</div></div></div><div class="member-title"><a name="oneOf"></a>oneOf(char[])<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-oneOf__char__str_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >oneOf(str) succeeds if the current character is in the supplied list of  characters str. Returns the parsed character. See also satisfy </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">str</div><div class="arg-type"><span class="keyword">char</span>[]</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">oneOf</span>(<span class="keyword">char</span>[] str)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-oneOf__char__str_"><div class="section_title">SOURCE</div><div class="code">
            satisfy(c =&gt; str.Contains(c))</div></div></div><div class="member-title"><a name="satisfy"></a>satisfy(Func&lt;char, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-satisfy__Func_char_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >The parser satisfy(pred) succeeds for any character for which the supplied function pred returns &#39;True&#39;.  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">char</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt; <span class="ident">satisfy</span>(<span class="ident">Func</span>&lt;<span class="keyword">char</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">char</span>&gt;</div><div class="normal"><span >The character that is actually parsed.</span></div></div></div><div style="display:none" id="code-satisfy__Func_char_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            inp =&gt;
            {
                if (inp.Index &gt;= inp.EndIndex)
                {
                    return EmptyError&lt;char, char&gt;(ParserError.SysUnexpect(inp.Pos, &quot;end of stream&quot;));
                }
                else
                {
                    var ns = newstate(inp);

                    if (ns.Tag == ResultTag.Consumed)
                    {
                        if (pred(ns.Reply.Result))
                        {
                            return ns;
                        }
                        else
                        {
                            return EmptyError&lt;char, char&gt;(ParserError.SysUnexpect(inp.Pos, $&quot;\&quot;{ns.Reply.Result}\&quot;&quot;));
                        }
                    }
                    else
                    {
                        return EmptyError&lt;char, char&gt;(ParserError.SysUnexpect(inp.Pos, &quot;end of stream&quot;));
                    }
                }
            }</div></div></div><div class="member-title"><a name="str"></a>str(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-str__string__s_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parse a string </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">s</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">string</span>&gt; <span class="ident">str</span>(<span class="keyword">string</span> s)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="keyword">string</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-str__string__s_"><div class="section_title">SOURCE</div><div class="code">
            asString(chain(s.Map(c =&gt; ch(c)))).label($&quot;&#39;{s}&#39;&quot;)</div></div></div></div></body></html>