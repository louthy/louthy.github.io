<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="https://louthy.github.io/">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.Parsec/index.htm">LanguageExt.Parsec</a> \ <span class="nav-bar-link" href="InfixOpIO_T.htm">InfixOpIO&lt;T&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Assoc">Assoc</a><a class="nav-link" href="#Op">Op</a><h3 >METHODS</h3><a class="nav-link" href="#SplitOp">SplitOp(Tuple&lt;Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T&gt;&gt;&gt;&gt;)</a></div><div class="content-panel"><h1 >InfixOpIO&lt;T&gt; Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">InfixOpIO</span>&lt;<span class="ident">T</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">OperatorIO</span>&lt;<span class="ident">T</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.Parsec</div></div><h2 >Fields</h2><div class="member-title"><a name="Assoc"></a>Assoc</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="ident">Assoc</span> <span class="ident">Assoc</span></div></div></div><div class="member-title"><a name="Op"></a>Op</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">Op</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="SplitOp"></a>SplitOp(Tuple&lt;Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T&gt;&gt;&gt;, Lst&lt;Parser&lt;char, Func&lt;T, T&gt;&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SplitOp__Tuple_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T>>>_state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">Tuple</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="ident">Tuple</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">SplitOp</span>(<span class="ident">Tuple</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Tuple</span>&lt;<span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;, <span class="ident">Lst</span>&lt;<span class="ident">Parser</span>&lt;<span class="keyword">char</span>, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SplitOp__Tuple_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T>>>_Lst&lt;Parser&lt;char, Func&lt;T, T>>>_state_"><div class="section_title">SOURCE</div><div class="code">
            state.Map(
                (rassoc, lassoc, nassoc, prefix, postfix) =&gt;
                    Assoc == Assoc.None ? Tuple(rassoc, lassoc, Op.Cons(nassoc), prefix, postfix)
                  : Assoc == Assoc.Left ? Tuple(rassoc, Op.Cons(lassoc), nassoc, prefix, postfix)
                  : Tuple(Op.Cons(rassoc), lassoc, nassoc, prefix, postfix))</div></div></div></div></body></html>