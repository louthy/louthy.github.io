<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../Echo.Client/index.htm">Echo.Client</a> \ <span class="nav-bar-link" href="Req_.htm">Req</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Parse">Parse(string, Map&lt;ClientConnectionId, ClientConnection&gt;)</a></div><div class="content-panel"><h1 >Req Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">class</span> <span class="ident">Req</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>Echo.Client</div></div><h2 >Methods</h2><div class="member-title"><a name="Parse"></a>Parse(string, Map&lt;ClientConnectionId, ClientConnection&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Parse__string__msg__Map_ClientConnectionId_ClientConnection_activeConnections_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Parses a client request </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">msg</div><div class="arg-type"><span class="keyword">string</span></div></div><div class="arg-desc">Text version of the request[CR-LF]     procsys:conn     procsys:diss|&lt;Connection ID&gt;     procsys:tell|&lt;Connection ID&gt;|&lt;Message ID&gt;|&lt;Process ID: To&gt;|&lt;Process ID: Sender&gt;|&lt;Message JSON&gt;     procsys:ask|&lt;Connection ID&gt;|&lt;Message ID&gt;|&lt;Process ID: To&gt;|&lt;Process ID: Sender&gt;|&lt;Message JSON&gt;     procsys:ping|&lt;Connection ID&gt;     procsys:sub|&lt;Connection ID&gt;|&lt;Process ID: Publisher&gt;|&lt;Process ID: Subscriber&gt;     procsys:usub|&lt;Connection ID&gt;|&lt;Process ID: Publisher&gt;|&lt;Process ID: Subscriber&gt;[CR-LF] </div></div><div class="arg"><div class="arg-header"><div class="arg-name">activeConnections</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">ClientConnectionId</span>, <span class="ident">ClientConnection</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="keyword">string</span>, <span class="ident">Req</span>&gt; <span class="ident">Parse</span>(<span class="keyword">string</span> msg, <span class="ident">Map</span>&lt;<span class="ident">ClientConnectionId</span>, <span class="ident">ClientConnection</span>&gt; activeConnections)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="keyword">string</span>, <span class="ident">Req</span>&gt;</div><div class="normal"><span ></span></div></div></div><div style="display:none" id="code-Parse__string__msg__Map_ClientConnectionId_ClientConnection_activeConnections_"><div class="section_title">SOURCE</div><div class="code">
            try
            {
                var parse = new BarParse(msg);

                return from hdr in parse.Header()
                       from typ in parse.GetNext()
                       from res in typ == &quot;tell&quot; ? from connid in parse.GetConnectionId()
                                                   from msgid  in parse.GetMessageId()
                                                   from to     in parse.GetProcessId()
                                                   from sender in parse.GetProcessId()
                                                   from body   in parse.GetNext()
                                                   select TellReq.Create(connid, msgid, to, sender, body, activeConnections)

                                : typ == &quot;ask&quot;   ? from connid in parse.GetConnectionId()
                                                   from msgid in parse.GetMessageId()
                                                   from to in parse.GetProcessId()
                                                   from sender in parse.GetProcessId()
                                                   from body in parse.GetNext()
                                                   select AskReq.Create(connid, msgid, to, sender, body, activeConnections)

                                : typ == &quot;conn&quot;  ? Right&lt;string, Req&gt;(ConnectReq.Default)

                                : typ == &quot;diss&quot;  ? DisconnectReq.Create(ClientConnectionId.New(parse.GetNextText()), activeConnections)

                                : typ == &quot;sub&quot;   ? from connid in parse.GetConnectionId()
                                                   from pub    in parse.GetProcessId()
                                                   from sub    in parse.GetProcessId()
                                                   select SubscribeReq.Create(connid, pub, sub, activeConnections)

                                : typ == &quot;usub&quot;  ? from connid in parse.GetConnectionId()
                                                   from pub    in parse.GetProcessId()
                                                   from sub    in parse.GetProcessId()
                                                   select UnSubscribeReq.Create(connid, pub, sub, activeConnections)

                                : typ == &quot;ping&quot;  ? PingReq.Create(ClientConnectionId.New(parse.GetNextText()), activeConnections)

                                : Left&lt;string, Req&gt;(&quot;Invalid request&quot;)
                       from req in res
                       select req;
            }
            catch(Exception e)
            {
                logErr(e);
                return &quot;Invalid request&quot;;
            }
        </div></div></div></div></body></html>