<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../Echo/index.htm">Echo</a> \ <span class="nav-bar-link" href="ProcessId_.htm">ProcessId</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#ProcessId">ProcessId(string)</a><h3 >FIELDS</h3><a class="nav-link" href="#None">None</a><a class="nav-link" href="#NoSender">NoSender</a><a class="nav-link" href="#Top">Top</a><h3 >PROPERTIES</h3><a class="nav-link" href="#IsSelection">IsSelection</a><a class="nav-link" href="#IsValid">IsValid</a><a class="nav-link" href="#Name">Name</a><a class="nav-link" href="#Parent">Parent</a><a class="nav-link" href="#Path">Path</a><a class="nav-link" href="#System">System</a><a class="nav-link" href="#this">this</a><a class="nav-link" href="#this">this</a><h3 >METHODS</h3><a class="nav-link" href="#Append">Append(ProcessId)</a><a class="nav-link" href="#Child">Child(ProcessName)</a><a class="nav-link" href="#Child">Child(IEnumerable&lt;ProcessId&gt;)</a><a class="nav-link" href="#CompareTo">CompareTo(ProcessId)</a><a class="nav-link" href="#CompareTo">CompareTo(object)</a><a class="nav-link" href="#Count">Count()</a><a class="nav-link" href="#Equals">Equals(ProcessId)</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#GetSelection">GetSelection()</a><a class="nav-link" href="#Head">Head()</a><a class="nav-link" href="#HeadName">HeadName()</a><a class="nav-link" href="#SetSystem">SetSystem(SystemName)</a><a class="nav-link" href="#Skip">Skip(int)</a><a class="nav-link" href="#StartsWith">StartsWith(ProcessId)</a><a class="nav-link" href="#Tail">Tail()</a><a class="nav-link" href="#Take">Take(int)</a><a class="nav-link" href="#ToString">ToString()</a><a class="nav-link" href="#TryParse">TryParse(string)</a></div><div class="content-panel"><h1 >ProcessId Struct</h1><p ><span >Process identifier <br/><br/>  Use this to &#39;tell&#39; a message to a process.  It can be serialised and passed around without concerns for internals. <br/><br/> </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">ProcessId</span> :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">ProcessId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">ProcessId</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span></span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>Echo</div></div><h2 >Constructors</h2><div class="member-title"><a name="ProcessId"></a>ProcessId(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ProcessId__string__path_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Ctor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">path</div><div class="arg-type"><span class="keyword">string</span></div></div><div class="arg-desc">Path of the process, in the form: /name/name/name </div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[JsonConstructor]</div><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">ProcessId</span>(<span class="keyword">string</span> path)</div></div><div style="display:none" id="code-ProcessId__string__path_"><div class="section_title">SOURCE</div><div class="code">
            if (path == null) throw new ArgumentNullException(nameof(path));
            var res = TryParse(path).IfLeft(ex =&gt; raise&lt;ProcessId&gt;(ex));
            value = new ProcessIdInternal(res.value.Parts, res.value.Name, res.System, res.value.Path);
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="None"></a>None</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >None process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">ProcessId</span> <span class="ident">None</span></div></div></div><div class="member-title"><a name="NoSender"></a>NoSender</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >NoSender process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">ProcessId</span> <span class="ident">NoSender</span></div></div></div><div class="member-title"><a name="Top"></a>Top</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Absolute root of the process system </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">ProcessId</span> <span class="ident">Top</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="IsSelection"></a>IsSelection</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns true if the ProcessId represents a selection of N process paths </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[JsonIgnore]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSelection</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsValid"></a>IsValid</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns true if this is a valid process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[JsonIgnore]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsValid</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Name"></a>Name</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the name of the process </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[JsonIgnore]</div><span class="keyword">public</span> <span class="ident">ProcessName</span> <span class="ident">Name</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessName</span></div><div class="normal"><span ></span></div></div></div></div><div class="member-title"><a name="Parent"></a>Parent</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the parent ProcessId </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[JsonIgnore]</div><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Parent</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"><span >Parent process ID</span></div></div></div></div><div class="member-title"><a name="Path"></a>Path</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Absolute path of the process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">string</span> <span class="ident">Path</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="System"></a>System</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >The Process system qualifier </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">SystemName</span> <span class="ident">System</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">SystemName</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="this"></a>this</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Generate new ProcessId that represents a child of this process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="keyword">this</span> [<span class="ident">ProcessName</span> child] { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"><span >Process ID</span></div></div></div></div><div class="member-title"><a name="this"></a>this</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Generate new ProcessId that represents a child of this process ID </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="keyword">this</span> [<span class="ident">IEnumerable</span>&lt;<span class="ident">ProcessId</span>&gt; child] { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"><span >Process ID</span></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Append"></a>Append(ProcessId)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Append__ProcessId__pid_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Append one process ID to another </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pid</div><div class="arg-type"><span class="ident">ProcessId</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Append</span>(<span class="ident">ProcessId</span> pid)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Append__ProcessId__pid_"><div class="section_title">SOURCE</div><div class="code">
            (pid.Path?.Length ?? 0) &lt; 2
                ? this
                : IsValid &amp;&amp; pid.IsValid
                    ? new ProcessId(value.Parts.Concat(pid.value.Parts).ToArray(), pid.System, pid.Name, $&quot;{Path}{pid.Path}&quot;)
                    : IsValid
                        ? pid
                        : raise&lt;ProcessId&gt;(new InvalidProcessIdException())</div></div></div><div class="member-title"><a name="Child"></a>Child(ProcessName)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Child__ProcessName__name_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Generate new ProcessId that represents a child of this process ID </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">name</div><div class="arg-type"><span class="ident">ProcessName</span></div></div><div class="arg-desc">Name of the child process</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Child</span>(<span class="ident">ProcessName</span> name)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"><span >Process ID</span></div></div></div><div style="display:none" id="code-Child__ProcessName__name_"><div class="section_title">SOURCE</div><div class="code">
            if (value == null) new ProcessId(new ProcessIdInternal(new[] { name }, name, System, $&quot;{Sep}{name.Value}&quot;));
            var parts = value.Parts;
            if (parts.Length == 0)
            {
                return new ProcessId(new ProcessName[1] { name }, System, name, $&quot;{Sep}{name.Value}&quot;);
            }
            else
            {
                var newParts = new ProcessName[parts.Length + 1];
                Array.Copy(parts, newParts, parts.Length);
                newParts[parts.Length] = name;
                return new ProcessId(newParts, System, name, $&quot;{Path}{Sep}{name.Value}&quot;);
            }
        </div></div></div><div class="member-title"><a name="Child"></a>Child(IEnumerable&lt;ProcessId&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Child__IEnumerable_ProcessId_name_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Generate new ProcessId that represents a child of this process ID </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">name</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">ProcessId</span>&gt;</div></div><div class="arg-desc">Name of the child process</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Child</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">ProcessId</span>&gt; name)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"><span >Process ID</span></div></div></div><div style="display:none" id="code-Child__IEnumerable_ProcessId_name_"><div class="section_title">SOURCE</div><div class="code">
            if (value == null) failwith&lt;ProcessId&gt;(&quot;ProcessId is None&quot;);
            var parts = value.Parts;
            var sel = ProcessName.FromSelection(name);
            if (parts.Length == 0)
            {
                return new ProcessId(new ProcessName[1] { sel }, System, sel, $&quot;{Sep}{sel.Value}&quot;);
            }
            else
            {
                var newParts = new ProcessName[parts.Length + 1];
                Array.Copy(parts, newParts, parts.Length);
                newParts[parts.Length] = sel;
                return new ProcessId(newParts, System, sel, $&quot;{Path}{Sep}{sel.Value}&quot;);
            }
        </div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(ProcessId)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__ProcessId__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compare </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">ProcessId</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">ProcessId</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__ProcessId__other_"><div class="section_title">SOURCE</div><div class="code">
            string.Compare(Path, other.Path, StringComparison.Ordinal)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compare </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            obj is ProcessId
                ? CompareTo((ProcessId)obj)
                : -1</div></div></div><div class="member-title"><a name="Count"></a>Count()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of parts to the name </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span ></span></div></div></div><div style="display:none" id="code-Count__"><div class="section_title">SOURCE</div><div class="code"> 
            value?.Parts?.Length ?? 0</div></div></div><div class="member-title"><a name="Equals"></a>Equals(ProcessId)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__ProcessId__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">ProcessId</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">ProcessId</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__ProcessId__other_"><div class="section_title">SOURCE</div><div class="code">
            Path.Equals(other.Path)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            obj is ProcessId
                ? Equals((ProcessId)obj)
                : false</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Hash code of process ID Do not rely on this between application sessions </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >Integer hash code</span></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            Path.GetHashCode()</div></div></div><div class="member-title"><a name="GetSelection"></a>GetSelection()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetSelection__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >If this ProcessId represents a selection of N process paths then this function will return those paths as separate ProcessIds. </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">ProcessId</span>&gt; <span class="ident">GetSelection</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">ProcessId</span>&gt;</div><div class="normal"><span >An enumerable of ProcessIds representing the selection. Zero ProcessIds will be returned if the ProcessId is invalid. One ProcessId will be returned if this ProcessId doesn&#39;t represent a selection. </span></div></div></div><div style="display:none" id="code-GetSelection__"><div class="section_title">SOURCE</div><div class="code">
            var self = this;

            return value == null || value.Parts.Length == 0
                ? new ProcessId[0]
                : value.Parts[0].IsSelection
                    ? from x in value.Parts[0].GetSelection()
                      from y in x.Append(self.Skip(1)).GetSelection()
                      select y
                    : new ProcessId[] { self };
        </div></div></div><div class="member-title"><a name="Head"></a>Head()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Head__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Take head of path </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Head</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Head__"><div class="section_title">SOURCE</div><div class="code">
            Take(1)</div></div></div><div class="member-title"><a name="HeadName"></a>HeadName()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-HeadName__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Accessor to the head of the path as a ProcessName </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessName</span> <span class="ident">HeadName</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessName</span></div><div class="normal"><span ></span></div></div></div><div style="display:none" id="code-HeadName__"><div class="section_title">SOURCE</div><div class="code">
            value == null || value.Parts.Length == 0
                ? failwith&lt;ProcessName&gt;(&quot;ProcessId is none&quot;)
                : value.Parts[0]</div></div></div><div class="member-title"><a name="SetSystem"></a>SetSystem(SystemName)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetSystem__SystemName__system_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Set the Process system that this ProcessId belongs to </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">system</div><div class="arg-type"><span class="ident">SystemName</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">SetSystem</span>(<span class="ident">SystemName</span> system)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-SetSystem__SystemName__system_"><div class="section_title">SOURCE</div><div class="code">
            IsValid
                ? new ProcessId(value.Parts, system, Name, Path)
                : this</div></div></div><div class="member-title"><a name="Skip"></a>Skip(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Skip__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove path elements from the start of the path </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Skip</span>(<span class="keyword">int</span> count)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Skip__int__count_"><div class="section_title">SOURCE</div><div class="code">
            if (value == null || count &gt;= value.Parts.Length ) return Top.SetSystem(System);
            var newParts = value.Parts.Skip(count).ToArray();
            return new ProcessId(newParts, System, Name, Top + String.Join(Sep.ToString(), newParts));
        </div></div></div><div class="member-title"><a name="StartsWith"></a>StartsWith(ProcessId)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-StartsWith__ProcessId__head_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">head</div><div class="arg-type"><span class="ident">ProcessId</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">StartsWith</span>(<span class="ident">ProcessId</span> head)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-StartsWith__ProcessId__head_"><div class="section_title">SOURCE</div><div class="code">
            this.Path.StartsWith(head.Path)</div></div></div><div class="member-title"><a name="Tail"></a>Tail()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Tail__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Take tail of path </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Tail</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Tail__"><div class="section_title">SOURCE</div><div class="code">
            Skip(1)</div></div></div><div class="member-title"><a name="Take"></a>Take(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Take__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Take N elements of the path </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">ProcessId</span> <span class="ident">Take</span>(<span class="keyword">int</span> count)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ProcessId</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Take__int__count_"><div class="section_title">SOURCE</div><div class="code">
            if (value == null || count == 0 || value.Parts.Length == 0) return Top.SetSystem(System);
            var newParts = value.Parts.Take(count).ToArray();
            return new ProcessId(newParts, System, newParts[newParts.Length-1], Top + String.Join(Sep.ToString(), newParts));
        </div></div></div><div class="member-title"><a name="ToString"></a>ToString()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the ProcessId to a string </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="ident">ToString</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >String representation of the process ID</span></div></div></div><div style="display:none" id="code-ToString__"><div class="section_title">SOURCE</div><div class="code">
            System.IsValid
                ? $&quot;//{System}{Path}&quot;
                : Path</div></div></div><div class="member-title"><a name="TryParse"></a>TryParse(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TryParse__string__path_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">path</div><div class="arg-type"><span class="keyword">string</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">ProcessId</span>&gt; <span class="ident">TryParse</span>(<span class="keyword">string</span> path)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">Exception</span>, <span class="ident">ProcessId</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TryParse__string__path_"><div class="section_title">SOURCE</div><div class="code">
            if (path == null || path.Length == 0)
            {
                return new InvalidProcessIdException();
            }

            var system = &quot;&quot;;

            if( path.StartsWith(&quot;//&quot;))
            {
                var end = path.IndexOf(Sep, 2);
                end = end == -1
                    ? path.IndexOf(&quot;@&quot;, 2)
                    : end;

                if(end == -1)
                {
                    return new InvalidProcessIdException($&quot;Invalid ProcessId ({path}), nothing following the system specifier&quot;);
                }

                system = path.Substring(2, end - 2);
                path = path.Substring(end);
            }

            if (path[0] == &#39;@&#39;)
            {
                return ParseRegisteredProcess(path.Substring(1));
            }

            if (path[0] != Sep)
            {
                return new InvalidProcessIdException();
            }

            ProcessName[] parts = null;
            ProcessName name;
            string finalPath = null;

            if (path.Length == 1)
            {
                parts = new ProcessName[0];
            }
            else
            {
                try
                {
                    parts = SplitOnSep(path).ToArray();
                }
                catch (InvalidProcessNameException)
                {
                    return new InvalidProcessIdException();
                }
            }

            finalPath = parts == null
                ? &quot;&quot;
                : parts.Length == 0
                    ? Sep.ToString()
                    : Sep + String.Join(Sep.ToString(), parts);

            if (path != Sep.ToString())
            {
                name = parts == null
                    ? &quot;&quot;
                    : parts.Length == 0
                        ? Sep.ToString()
                        : parts.Last();
            }
            else
            {
                name = &quot;$&quot;;
            }

            return new ProcessId(parts, system == &quot;&quot; ? default(SystemName) : system, name, finalPath);
        </div></div></div></div></body></html>