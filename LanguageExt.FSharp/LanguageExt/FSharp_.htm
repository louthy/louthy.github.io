<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="FSharp_.htm">FSharp</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#fs">fs(Unit)</a><a class="nav-link" href="#fs&lt;K, V>">fs&lt;K, V&gt;(FSharpMap&lt;K, V&gt;)</a><a class="nav-link" href="#fs&lt;K, V>">fs&lt;K, V&gt;(Map&lt;K, V&gt;)</a><a class="nav-link" href="#fs&lt;T>">fs&lt;T&gt;(FSharpOption&lt;T&gt;)</a><a class="nav-link" href="#fs&lt;T>">fs&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#fs&lt;T>">fs&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#fs&lt;T>">fs&lt;T&gt;(FSharpList&lt;T&gt;)</a><a class="nav-link" href="#fs&lt;T>">fs&lt;T&gt;(Lst&lt;T&gt;)</a><a class="nav-link" href="#ToFSharp&lt;K, V>">ToFSharp&lt;K, V&gt;(Map&lt;K, V&gt;)</a><a class="nav-link" href="#ToFSharp&lt;T>">ToFSharp&lt;T&gt;(Option&lt;T&gt;)</a><a class="nav-link" href="#ToFSharp&lt;T>">ToFSharp&lt;T&gt;(OptionUnsafe&lt;T&gt;)</a><a class="nav-link" href="#ToFSharp&lt;T>">ToFSharp&lt;T&gt;(Lst&lt;T&gt;)</a></div><div class="content-panel"><h1 >FSharp Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">FSharp</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="fs"></a>fs(Unit)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs__Unit__unit_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert LanguageExt Unit to F# unit </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">unit</div><div class="arg-type"><span class="ident">Unit</span></div></div><div class="arg-desc">()</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="ident">fs</span>(<span class="ident">Unit</span> unit)</div></div><div style="display:none" id="code-fs__Unit__unit_"><div class="section_title">SOURCE</div><div class="code">
        </div></div></div><div class="member-title"><a name="fs&lt;K, V>"></a>fs&lt;K, V&gt;(FSharpMap&lt;K, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_K_V_FSharpMap_K_V_fsMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an F# Map into a LanguageExt Map (Map K V) </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fsMap</div><div class="arg-type"><span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; fsMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_K_V_FSharpMap_K_V_fsMap_"><div class="section_title">SOURCE</div><div class="code">
            Map.addRange( Map&lt;K, V&gt;(), List.map(fsMap, identity) )</div></div></div><div class="member-title"><a name="fs&lt;K, V>"></a>fs&lt;K, V&gt;(Map&lt;K, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_K_V_Map_K_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt Map (Map K V) into an F# Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_K_V_Map_K_V_map_"><div class="section_title">SOURCE</div><div class="code">
            MapModule.OfSeq(map.AsEnumerable().Map(item =&gt; Tuple(item.Key,item.Value)))</div></div></div><div class="member-title"><a name="fs&lt;T>"></a>fs&lt;T&gt;(FSharpOption&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_T_FSharpOption_T_fsOption_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a F# Option into a LanguageExt Option  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fsOption</div><div class="arg-type"><span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt; fsOption)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_T_FSharpOption_T_fsOption_"><div class="section_title">SOURCE</div><div class="code">
            FSharpOption&lt;T&gt;.get_IsSome(fsOption)
                ? Some(fsOption.Value)
                : None</div></div></div><div class="member-title"><a name="fs&lt;T>"></a>fs&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt Option into an F# Option  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.Map(FSharpOption&lt;T&gt;.Some)
                  .IfNoneUnsafe(FSharpOption&lt;T&gt;.None)</div></div></div><div class="member-title"><a name="fs&lt;T>"></a>fs&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt OptionUnsafe into an F# Option  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.Map(FSharpOption&lt;T&gt;.Some)
                  .IfNoneUnsafe(FSharpOption&lt;T&gt;.None)</div></div></div><div class="member-title"><a name="fs&lt;T>"></a>fs&lt;T&gt;(FSharpList&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_T_FSharpList_T_fsList_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an F# List into an IEnumerable T </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fsList</div><div class="arg-type"><span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt; fsList)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_T_FSharpList_T_fsList_"><div class="section_title">SOURCE</div><div class="code">
            List.createRange(fsList)</div></div></div><div class="member-title"><a name="fs&lt;T>"></a>fs&lt;T&gt;(Lst&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-fs_T_Lst_T_list_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an LanguageExt List (Lst T) into an F# List </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt; <span class="ident">fs</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; list)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-fs_T_Lst_T_list_"><div class="section_title">SOURCE</div><div class="code">
            ListModule.OfSeq(list)</div></div></div><div class="member-title"><a name="ToFSharp&lt;K, V>"></a>ToFSharp&lt;K, V&gt;(Map&lt;K, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToFSharp_K_V_Map_K_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt Map (Map K V) into an F# Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; <span class="ident">ToFSharp</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToFSharp_K_V_Map_K_V_map_"><div class="section_title">SOURCE</div><div class="code">
            MapModule.OfSeq(map.AsEnumerable().Map(item =&gt; Tuple(item.Key, item.Value)))</div></div></div><div class="member-title"><a name="ToFSharp&lt;T>"></a>ToFSharp&lt;T&gt;(Option&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToFSharp_T_Option_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt Option into an F# Option  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToFSharp</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToFSharp_T_Option_T_option_"><div class="section_title">SOURCE</div><div class="code">
            option.IsNone
                ? FSharpOption&lt;T&gt;.None
                : match(option,
                     Some: v =&gt; FSharpOption&lt;T&gt;.Some(v),
                     None: () =&gt; failwith&lt;FSharpOption&lt;T&gt;&gt;(&quot;returns null, so can&#39;t use the None branch&quot;))</div></div></div><div class="member-title"><a name="ToFSharp&lt;T>"></a>ToFSharp&lt;T&gt;(OptionUnsafe&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToFSharp_T_OptionUnsafe_T_option_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert a LanguageExt OptionUnsafe into an F# Option  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">option</div><div class="arg-type"><span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToFSharp</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">OptionUnsafe</span>&lt;<span class="ident">T</span>&gt; option)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpOption</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToFSharp_T_OptionUnsafe_T_option_"><div class="section_title">SOURCE</div><div class="code">
            matchUnsafe(option,
                Some: v =&gt; FSharpOption&lt;T&gt;.Some(v),
                None: () =&gt; FSharpOption&lt;T&gt;.None)</div></div></div><div class="member-title"><a name="ToFSharp&lt;T>"></a>ToFSharp&lt;T&gt;(Lst&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToFSharp_T_Lst_T_list_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an LanguageExt List (Lst T) into an F# List </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">list</div><div class="arg-type"><span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt; <span class="ident">ToFSharp</span>&lt;<span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Lst</span>&lt;<span class="ident">T</span>&gt; list)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FSharpList</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToFSharp_T_Lst_T_list_"><div class="section_title">SOURCE</div><div class="code">
            ListModule.OfSeq(list)</div></div></div></div></body></html>