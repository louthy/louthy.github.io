<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="..//index.htm"></a> \ <span class="nav-bar-link" href="StateExtensions_.htm">StateExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AsEnumerable&lt;S, A>">AsEnumerable&lt;S, A&gt;(State&lt;S, A&gt;)</a><a class="nav-link" href="#AsEnumerable&lt;S, A>">AsEnumerable&lt;S, A&gt;(State&lt;S, A&gt;, S)</a><a class="nav-link" href="#Bind&lt;S, A, B>">Bind&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, State&lt;S, B&gt;&gt;)</a><a class="nav-link" href="#Count&lt;S>">Count&lt;S&gt;(State&lt;S, int&gt;)</a><a class="nav-link" href="#Exists&lt;S, A>">Exists&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Filter&lt;S, A>">Filter&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Fold&lt;FState, S, A>">Fold&lt;FState, S, A&gt;(State&lt;S, A&gt;, FState, Func&lt;FState, A, FState&gt;)</a><a class="nav-link" href="#Fold&lt;S, A>">Fold&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#ForAll&lt;S, A>">ForAll&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Iter&lt;S, A>">Iter&lt;S, A&gt;(State&lt;S, A&gt;, Action&lt;A&gt;)</a><a class="nav-link" href="#Map&lt;S, A, B>">Map&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, B&gt;)</a><a class="nav-link" href="#Modify&lt;S, A>">Modify&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;S, S&gt;)</a><a class="nav-link" href="#Run&lt;S, A>">Run&lt;S, A&gt;(State&lt;S, A&gt;, S)</a><a class="nav-link" href="#Select&lt;S, A, B>">Select&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, B&gt;)</a><a class="nav-link" href="#SelectMany&lt;S, A, B, C>">SelectMany&lt;S, A, B, C&gt;(State&lt;S, A&gt;, Func&lt;A, State&lt;S, B&gt;&gt;, Func&lt;A, B, C&gt;)</a><a class="nav-link" href="#Sum&lt;S>">Sum&lt;S&gt;(State&lt;S, int&gt;)</a><a class="nav-link" href="#Where&lt;S, A>">Where&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)</a></div><div class="content-panel"><h1 >StateExtensions Class</h1><p ><span >Extension methods for State </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">StateExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div></div></div><h2 >Methods</h2><div class="member-title"><a name="AsEnumerable&lt;S, A>"></a>AsEnumerable&lt;S, A&gt;(State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_S_A_State_S_A_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_S_A_State_S_A_self_"><div class="section_title">SOURCE</div><div class="code">
        self.Select(x =&gt; (new A[1] { x }).AsEnumerable())</div></div></div><div class="member-title"><a name="AsEnumerable&lt;S, A>"></a>AsEnumerable&lt;S, A&gt;(State&lt;S, A&gt;, S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable_S_A_State_S_A_self__S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AsEnumerable</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable_S_A_State_S_A_self__S__state_"><div class="section_title">SOURCE</div><div class="code">
        var (x, s, b) = self(state);
        if (!b)
        {
            yield return x;
        }
    </div></div></div><div class="member-title"><a name="Bind&lt;S, A, B>"></a>Bind&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, State&lt;S, B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_S_A_B_State_S_A_self__Func_A_State&lt;S, B>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">B</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Bind_S_A_B_State_S_A_self__Func_A_State&lt;S, B>_f_"><div class="section_title">SOURCE</div><div class="code">
        default(MState&lt;S, A&gt;).Bind&lt;MState&lt;S, B&gt;, State&lt;S, B&gt;, B&gt;(self, f)</div></div></div><div class="member-title"><a name="Count&lt;S>"></a>Count&lt;S&gt;(State&lt;S, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_S_State_S_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>&lt;<span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count_S_State_S_int_self_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt;
        {
            var (x, s, b) = self(state);
            return b
                ? (0, state, false)
                : (1, s, false);
        }</div></div></div><div class="member-title"><a name="Exists&lt;S, A>"></a>Exists&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_S_A_State_S_A_self__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt; <span class="ident">Exists</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_S_A_State_S_A_self__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt;
        {
            var (x, s, b) = self(state);
            return b
                ? (false, state, false)
                : (pred(x), s, false);
        }</div></div></div><div class="member-title"><a name="Filter&lt;S, A>"></a>Filter&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter_S_A_State_S_A_self__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Filter</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Filter_S_A_State_S_A_self__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        self.Where(pred)</div></div></div><div class="member-title"><a name="Fold&lt;FState, S, A>"></a>Fold&lt;FState, S, A&gt;(State&lt;S, A&gt;, FState, Func&lt;FState, A, FState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_FState_S_A_State_S_A_self__FState__initialState__Func_FState_A_FState_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">initialState</div><div class="arg-type"><span class="ident">FState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FState</span>, <span class="ident">A</span>, <span class="ident">FState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">FState</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">FState</span>, <span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">FState</span> initialState, <span class="ident">Func</span>&lt;<span class="ident">FState</span>, <span class="ident">A</span>, <span class="ident">FState</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">FState</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_FState_S_A_State_S_A_self__FState__initialState__Func_FState_A_FState_f_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt;
        {
            var (x, s, b) = self(state);
            return b
                ? (default(FState), state, true)
                : (f(initialState, x), s, false);
        }</div></div></div><div class="member-title"><a name="Fold&lt;S, A>"></a>Fold&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_A_State_S_A_self__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_S_A_State_S_A_self__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt;
        {
            var (x, s, b) = self(state);
            return b
                ? (default(S), state, true)
                : (f(s, x), s, false);
        }</div></div></div><div class="member-title"><a name="ForAll&lt;S, A>"></a>ForAll&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_S_A_State_S_A_self__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt; <span class="ident">ForAll</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_S_A_State_S_A_self__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt;
        {
            var (x, s, b) = self(state);
            return b
                ? (false, state, false)
                : (pred(x), s, false);
        }</div></div></div><div class="member-title"><a name="Iter&lt;S, A>"></a>Iter&lt;S, A&gt;(State&lt;S, A&gt;, Action&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter_S_A_State_S_A_self__Action_A_action_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">action</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">Iter</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Action</span>&lt;<span class="ident">A</span>&gt; action)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Iter_S_A_State_S_A_self__Action_A_action_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt; {
            var (x, s, b) = self(state);
            if (!b) action(x);
            var ns = b ? state : s;
            return (unit, ns, false);
        }</div></div></div><div class="member-title"><a name="Map&lt;S, A, B>"></a>Map&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_S_A_B_State_S_A_self__Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">B</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_S_A_B_State_S_A_self__Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
        self.Select(f)</div></div></div><div class="member-title"><a name="Modify&lt;S, A>"></a>Modify&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;S, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Modify_S_A_State_S_A_self__Func_S_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic state transformer. Maps an old state to a new state inside a state monad.The old state is thrown away. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">Modify</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Modify_S_A_State_S_A_self__Func_S_S_f_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
        (unit, f(state), false)</div></div></div><div class="member-title"><a name="Run&lt;S, A>"></a>Run&lt;S, A&gt;(State&lt;S, A&gt;, S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Run_S_A_State_S_A_self__S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Runs the State monad and memoizes the result in a TryOption monad.  Use Match, IfSucc, IfNone, etc to extract. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ValueTuple</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">S</span>&gt; <span class="ident">Run</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ValueTuple</span>&lt;<span class="ident">TryOption</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Run_S_A_State_S_A_self__S__state_"><div class="section_title">SOURCE</div><div class="code">
        try
        {
            if (self == null) return (() =&gt; Option&lt;A&gt;.None, state);
            if (state == null) return (() =&gt; Option&lt;A&gt;.None, state);
            var (a, s, b) = self(state);
            if (b)
            {
                return (() =&gt; Option&lt;A&gt;.None, state);
            }
            else
            {
                return (() =&gt; Optional(a), s);
            }
        }
        catch (Exception e)
        {
            return (() =&gt; new OptionalResult&lt;A&gt;(e), state);
        }
    </div></div></div><div class="member-title"><a name="Select&lt;S, A, B>"></a>Select&lt;S, A, B&gt;(State&lt;S, A&gt;, Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_S_A_B_State_S_A_self__Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">B</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Select_S_A_B_State_S_A_self__Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
        default(MState&lt;S, A&gt;).Bind&lt;MState&lt;S, B&gt;, State&lt;S, B&gt;, B&gt;(self, a =&gt;
        default(MState&lt;S, B&gt;).Return(_ =&gt; f(a)))</div></div></div><div class="member-title"><a name="SelectMany&lt;S, A, B, C>"></a>SelectMany&lt;S, A, B, C&gt;(State&lt;S, A&gt;, Func&lt;A, State&lt;S, B&gt;&gt;, Func&lt;A, B, C&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_S_A_B_C_State_S_A_self__Func_A_State&lt;S, B>_bind__Func_A_B_C_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">C</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">B</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">C</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_S_A_B_C_State_S_A_self__Func_A_State&lt;S, B>_bind__Func_A_B_C_project_"><div class="section_title">SOURCE</div><div class="code">
            default(MState&lt;S, A&gt;).Bind&lt;MState&lt;S, C&gt;, State&lt;S, C&gt;, C&gt;(self, a =&gt;
            default(MState&lt;S, B&gt;).Bind&lt;MState&lt;S, C&gt;, State&lt;S, C&gt;, C&gt;(bind(a), b =&gt;
            default(MState&lt;S, C&gt;).Return(_ =&gt; project(a, b))))</div></div></div><div class="member-title"><a name="Sum&lt;S>"></a>Sum&lt;S&gt;(State&lt;S, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_S_State_S_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt; <span class="ident">Sum</span>&lt;<span class="ident">S</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Sum_S_State_S_int_self_"><div class="section_title">SOURCE</div><div class="code">
        self</div></div></div><div class="member-title"><a name="Where&lt;S, A>"></a>Where&lt;S, A&gt;(State&lt;S, A&gt;, Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where_S_A_State_S_A_self__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Where</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;(<span class="keyword">this</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Where_S_A_State_S_A_self__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        state =&gt; {
            var (x, s, b) = self(state);
            if (b || !pred(x)) return (default(A), state, true);
            return (x, s, b);
        }</div></div></div></div></body></html>