<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.ClassInstances/index.htm">LanguageExt.ClassInstances</a> \ <span class="nav-bar-link" href="MState_S_A.htm">MState&lt;S, A&gt;</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Apply">Apply(Func&lt;A, A, A&gt;, State&lt;S, A&gt;, State&lt;S, A&gt;)</a><a class="nav-link" href="#Bind&lt;MONADB, MB, B>">Bind&lt;MONADB, MB, B&gt;(State&lt;S, A&gt;, Func&lt;A, MB&gt;)</a><a class="nav-link" href="#BindReturn">BindReturn(ValueTuple&lt;S, bool&gt;, State&lt;S, A&gt;)</a><a class="nav-link" href="#Count">Count(State&lt;S, A&gt;)</a><a class="nav-link" href="#CountAsync">CountAsync(State&lt;S, A&gt;)</a><a class="nav-link" href="#Fail">Fail(object)</a><a class="nav-link" href="#Fold&lt;FoldState>">Fold&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)</a><a class="nav-link" href="#FoldAsync&lt;FoldState>">FoldAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)</a><a class="nav-link" href="#FoldAsync&lt;FoldState>">FoldAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, Task&lt;FoldState&gt;&gt;)</a><a class="nav-link" href="#FoldBack&lt;FoldState>">FoldBack&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)</a><a class="nav-link" href="#FoldBackAsync&lt;FoldState>">FoldBackAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)</a><a class="nav-link" href="#FoldBackAsync&lt;FoldState>">FoldBackAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, Task&lt;FoldState&gt;&gt;)</a><a class="nav-link" href="#Get">Get()</a><a class="nav-link" href="#Id">Id(Func&lt;S, State&lt;S, A&gt;&gt;)</a><a class="nav-link" href="#IdAsync">IdAsync(Func&lt;S, Task&lt;State&lt;S, A&gt;&gt;&gt;)</a><a class="nav-link" href="#Plus">Plus(State&lt;S, A&gt;, State&lt;S, A&gt;)</a><a class="nav-link" href="#Put">Put(S)</a><a class="nav-link" href="#Return">Return(Func&lt;S, A&gt;)</a><a class="nav-link" href="#State">State(Func&lt;S, A&gt;)</a><a class="nav-link" href="#Zero">Zero()</a></div><div class="content-panel"><h1 >MState&lt;S, A&gt; Struct</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">MState</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">MonadState</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Monad</span>&lt;<span class="ident">S</span>, <span class="ident">ValueTuple</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt;, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.ClassInstances</div></div><h2 >Methods</h2><div class="member-title"><a name="Apply"></a>Apply(Func&lt;A, A, A&gt;, State&lt;S, A&gt;, State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply__Func_A_A_A_f__State_S_A_fa__State_S_A_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">A</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Apply</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">A</span>, <span class="ident">A</span>&gt; f, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Apply__Func_A_A_A_f__State_S_A_fa__State_S_A_fb_"><div class="section_title">SOURCE</div><div class="code">
            from a in fa
            from b in fb
            select f(a, b)</div></div></div><div class="member-title"><a name="Bind&lt;MONADB, MB, B>"></a>Bind&lt;MONADB, MB, B&gt;(State&lt;S, A&gt;, Func&lt;A, MB&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_MONADB_MB_B_State_S_A_ma__Func_A_MB_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">MB</span> <span class="ident">Bind</span>&lt;<span class="ident">MONADB</span>, <span class="ident">MB</span>, <span class="ident">B</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">MB</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">MONADB</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">S</span>, <span class="ident">ValueTuple</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt;, <span class="ident">MB</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Bind_MONADB_MB_B_State_S_A_ma__Func_A_MB_f_"><div class="section_title">SOURCE</div><div class="code">
            default(MONADB).Id(state =&gt;
            {
                var (a, sa, faulted) = ma(state);
                return faulted
                    ? default(MONADB).Fail(default(MState&lt;S, A&gt;).Fail())
                    : default(MONADB).BindReturn((sa, faulted), f(a));
            })</div></div></div><div class="member-title"><a name="BindReturn"></a>BindReturn(ValueTuple&lt;S, bool&gt;, State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindReturn__ValueTuple_S_bool_output__State_S_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">output</div><div class="arg-type"><span class="ident">ValueTuple</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">BindReturn</span>(<span class="ident">ValueTuple</span>&lt;<span class="ident">S</span>, <span class="keyword">bool</span>&gt; output, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindReturn__ValueTuple_S_bool_output__State_S_A_mb_"><div class="section_title">SOURCE</div><div class="code"> 
            _ =&gt; mb(output.State)</div></div></div><div class="member-title"><a name="Count"></a>Count(State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__State_S_A_fa_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count__State_S_A_fa_"><div class="section_title">SOURCE</div><div class="code">
            Fold(fa, 0, (_, __) =&gt; 1)</div></div></div><div class="member-title"><a name="CountAsync"></a>CountAsync(State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountAsync__State_S_A_fa_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="ident">CountAsync</span>(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-CountAsync__State_S_A_fa_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            var mr = from a in fa
                     select 1;

            return Task.FromResult(mr(env).Value);
        }</div></div></div><div class="member-title"><a name="Fail"></a>Fail(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fail__object__err_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">err</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Fail</span>(<span class="keyword">object</span> err = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fail__object__err_"><div class="section_title">SOURCE</div><div class="code">
            new State&lt;S, A&gt;(state =&gt; (default(A), state, true))</div></div></div><div class="member-title"><a name="Fold&lt;FoldState>"></a>Fold&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_FoldState_State_S_A_fa__FoldState__initialState__Func_FoldState_A_FoldState_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">initialState</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FoldState</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> initialState, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FoldState</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_FoldState_State_S_A_fa__FoldState__initialState__Func_FoldState_A_FoldState_f_"><div class="section_title">SOURCE</div><div class="code">
            state =&gt;
            {
                var (a, newstate, faulted) = fa(state);
                return faulted
                    ? initialState
                    : f(initialState, a);
            }</div></div></div><div class="member-title"><a name="FoldAsync&lt;FoldState>"></a>FoldAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            var mr = from a in fa
                     select f(state, a);

            return Task.FromResult(mr(env).Value);
        }</div></div></div><div class="member-title"><a name="FoldAsync&lt;FoldState>"></a>FoldAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, Task&lt;FoldState&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_Task&lt;FoldState>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_Task&lt;FoldState>_f_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            var mr = from a in fa
                     select f(state, a);

            return mr(env).Value;
        }</div></div></div><div class="member-title"><a name="FoldBack&lt;FoldState>"></a>FoldBack&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FoldState</span>&gt; <span class="ident">FoldBack</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FoldState</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBack_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_"><div class="section_title">SOURCE</div><div class="code">
            Fold(fa, state, f)</div></div></div><div class="member-title"><a name="FoldBackAsync&lt;FoldState>"></a>FoldBackAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, FoldState&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBackAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; <span class="ident">FoldBackAsync</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">FoldState</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBackAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_FoldState_f_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            var mr = from a in fa
                     select f(state, a);

            return Task.FromResult(mr(env).Value);
        }</div></div></div><div class="member-title"><a name="FoldBackAsync&lt;FoldState>"></a>FoldBackAsync&lt;FoldState&gt;(State&lt;S, A&gt;, FoldState, Func&lt;FoldState, A, Task&lt;FoldState&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBackAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_Task&lt;FoldState>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">FoldState</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; <span class="ident">FoldBackAsync</span>&lt;<span class="ident">FoldState</span>&gt;(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; fa, <span class="ident">FoldState</span> state, <span class="ident">Func</span>&lt;<span class="ident">FoldState</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">FoldState</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBackAsync_FoldState_State_S_A_fa__FoldState__state__Func_FoldState_A_Task&lt;FoldState>_f_"><div class="section_title">SOURCE</div><div class="code"> env =&gt;
        {
            var mr = from a in fa
                     select f(state, a);

            return mr(env).Value;
        }</div></div></div><div class="member-title"><a name="Get"></a>Get()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Get__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt; <span class="ident">Get</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Get__"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
            (state, state, false)</div></div></div><div class="member-title"><a name="Id"></a>Id(Func&lt;S, State&lt;S, A&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Id__Func_S_State&lt;S, A>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Id</span>(<span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Id__Func_S_State&lt;S, A>_ma_"><div class="section_title">SOURCE</div><div class="code"> 
            state =&gt; ma(state)(state)</div></div></div><div class="member-title"><a name="IdAsync"></a>IdAsync(Func&lt;S, Task&lt;State&lt;S, A&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IdAsync__Func_S_Task&lt;State&lt;S, A>>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">IdAsync</span>(<span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Task</span>&lt;<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IdAsync__Func_S_Task&lt;State&lt;S, A>>_ma_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
            ma(state).Result(state)</div></div></div><div class="member-title"><a name="Plus"></a>Plus(State&lt;S, A&gt;, State&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Plus__State_S_A_ma__State_S_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Plus</span>(<span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; ma, <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Plus__State_S_A_ma__State_S_A_mb_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
        {
            var (a, newstate, faulted) = ma(state);
            return faulted
                ? mb(state)
                : (a, newstate, faulted);
        }</div></div></div><div class="member-title"><a name="Put"></a>Put(S)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Put__S__state_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt; <span class="ident">Put</span>(<span class="ident">S</span> state)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Put__S__state_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            (unit, state, false)</div></div></div><div class="member-title"><a name="Return"></a>Return(Func&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Return__Func_S_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Return</span>(<span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Return__Func_S_A_f_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
            (f(state), state, false)</div></div></div><div class="member-title"><a name="State"></a>State(Func&lt;S, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-State__Func_S_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">State</span>(<span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-State__Func_S_A_f_"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
            (f(state), state, false)</div></div></div><div class="member-title"><a name="Zero"></a>Zero()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Zero__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt; <span class="ident">Zero</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">State</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Zero__"><div class="section_title">SOURCE</div><div class="code"> state =&gt;
            (default(A), state, true)</div></div></div></div></body></html>