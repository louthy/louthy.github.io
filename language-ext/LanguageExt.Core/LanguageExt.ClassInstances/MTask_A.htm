<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.ClassInstances/index.htm">LanguageExt.ClassInstances</a> \ <span class="nav-bar-link" href="MTask_A.htm">MTask&lt;A&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Inst">Inst</a><h3 >PROPERTIES</h3><a class="nav-link" href="#None">None</a><h3 >METHODS</h3><a class="nav-link" href="#BiFold&lt;S>">BiFold&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, Unit, S&gt;, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#BiFoldBack&lt;S>">BiFoldBack&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, Unit, S&gt;, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#Bind&lt;MONADB, MB, B>">Bind&lt;MONADB, MB, B&gt;(Task&lt;A&gt;, Func&lt;A, MB&gt;)</a><a class="nav-link" href="#BindReturn">BindReturn(Unit, Task&lt;A&gt;)</a><a class="nav-link" href="#Count">Count(Task&lt;A&gt;)</a><a class="nav-link" href="#Fail">Fail(object)</a><a class="nav-link" href="#Fail">Fail(Exception)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBack&lt;S>">FoldBack&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#Id">Id(Func&lt;Unit, Task&lt;A&gt;&gt;)</a><a class="nav-link" href="#IdAsync">IdAsync(Func&lt;Unit, Task&lt;Task&lt;A&gt;&gt;&gt;)</a><a class="nav-link" href="#IsNone">IsNone(Task&lt;A&gt;)</a><a class="nav-link" href="#IsSome">IsSome(Task&lt;A&gt;)</a><a class="nav-link" href="#IsUnsafe">IsUnsafe(Task&lt;A&gt;)</a><a class="nav-link" href="#Match">Match(Task&lt;A&gt;, Action&lt;A&gt;, Action)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(Task&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchUnsafe&lt;B>">MatchUnsafe&lt;B&gt;(Task&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#Optional">Optional(A)</a><a class="nav-link" href="#Plus">Plus(Task&lt;A&gt;, Task&lt;A&gt;)</a><a class="nav-link" href="#Return">Return(Func&lt;Unit, A&gt;)</a><a class="nav-link" href="#Return">Return(A)</a><a class="nav-link" href="#Some">Some(A)</a><a class="nav-link" href="#Zero">Zero()</a></div><div class="content-panel"><h1 >MTask&lt;A&gt; Struct</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">MTask</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Optional</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Monad</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">BiFoldable</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">Unit</span>, <span class="ident">A</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.ClassInstances</div></div><h2 >Fields</h2><div class="member-title"><a name="Inst"></a>Inst</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">MTask</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Inst</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="None"></a>None</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">None</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="BiFold&lt;S>"></a>BiFold&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, Unit, S&gt;, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFold_S_Task_A_ma__S__state__Func_S_Unit_S_fa__Func_S_A_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-BiFold_S_Task_A_ma__S__state__Func_S_Unit_S_fa__Func_S_A_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            if (ma.IsFaulted)
                return fa(state, unit);
            else
                return fb(state, ma.Result);
        </div></div></div><div class="member-title"><a name="BiFoldBack&lt;S>"></a>BiFoldBack&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, Unit, S&gt;, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBack_S_Task_A_ma__S__state__Func_S_Unit_S_fa__Func_S_A_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBack_S_Task_A_ma__S__state__Func_S_Unit_S_fa__Func_S_A_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            if (ma.IsFaulted)
                return fa(state, unit);
            else
                return fb(state, ma.Result);
        </div></div></div><div class="member-title"><a name="Bind&lt;MONADB, MB, B>"></a>Bind&lt;MONADB, MB, B&gt;(Task&lt;A&gt;, Func&lt;A, MB&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_MONADB_MB_B_Task_A_ma__Func_A_MB_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">MB</span> <span class="ident">Bind</span>&lt;<span class="ident">MONADB</span>, <span class="ident">MB</span>, <span class="ident">B</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">MB</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">MONADB</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">Unit</span>, <span class="ident">Unit</span>, <span class="ident">MB</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Bind_MONADB_MB_B_Task_A_ma__Func_A_MB_f_"><div class="section_title">SOURCE</div><div class="code">
            default(MONADB).IdAsync(_ =&gt; ma.ContinueWith(task =&gt;
                task.IsFaulted || task.IsCanceled
                    ? default(MONADB).Fail()
                    : f(task.Result)))</div></div></div><div class="member-title"><a name="BindReturn"></a>BindReturn(Unit, Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindReturn__Unit_____Task_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">_</div><div class="arg-type"><span class="ident">Unit</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">BindReturn</span>(<span class="ident">Unit</span> _, <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindReturn__Unit_____Task_A_mb_"><div class="section_title">SOURCE</div><div class="code">
            mb</div></div></div><div class="member-title"><a name="Count"></a>Count(Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__Task_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count__Task_A_ma_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.IsFaulted
                ? 0
                : 1</div></div></div><div class="member-title"><a name="Fail"></a>Fail(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fail__object__err_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">err</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Fail</span>(<span class="keyword">object</span> err)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fail__object__err_"><div class="section_title">SOURCE</div><div class="code">
            None</div></div></div><div class="member-title"><a name="Fail"></a>Fail(Exception)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fail__Exception__err_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">err</div><div class="arg-type"><span class="ident">Exception</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Fail</span>(<span class="ident">Exception</span> err = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fail__Exception__err_"><div class="section_title">SOURCE</div><div class="code">
            Task.Run(() =&gt; raise&lt;A&gt;(err ?? new BottomException()))</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_Task_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_S_Task_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
        {
            if (ma.IsFaulted) return state;
            return f(state, ma.Result);
        }</div></div></div><div class="member-title"><a name="FoldBack&lt;S>"></a>FoldBack&lt;S&gt;(Task&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_S_Task_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt; <span class="ident">FoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBack_S_Task_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
        {
            if (ma.IsFaulted) return state;
            return f(state, ma.Result);
        }</div></div></div><div class="member-title"><a name="Id"></a>Id(Func&lt;Unit, Task&lt;A&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Id__Func_Unit_Task&lt;A>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Id</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Id__Func_Unit_Task&lt;A>_ma_"><div class="section_title">SOURCE</div><div class="code">
            ma(unit)</div></div></div><div class="member-title"><a name="IdAsync"></a>IdAsync(Func&lt;Unit, Task&lt;Task&lt;A&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IdAsync__Func_Unit_Task&lt;Task&lt;A>>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">IdAsync</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IdAsync__Func_Unit_Task&lt;Task&lt;A>>_ma_"><div class="section_title">SOURCE</div><div class="code">
            from ta in ma(unit)
            from a in ta
            select a</div></div></div><div class="member-title"><a name="IsNone"></a>IsNone(Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsNone__Task_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsNone</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsNone__Task_A_ma_"><div class="section_title">SOURCE</div><div class="code">
            ma.IsFaulted</div></div></div><div class="member-title"><a name="IsSome"></a>IsSome(Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsSome__Task_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSome</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsSome__Task_A_ma_"><div class="section_title">SOURCE</div><div class="code">
            !IsNone(ma)</div></div></div><div class="member-title"><a name="IsUnsafe"></a>IsUnsafe(Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsUnsafe__Task_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsUnsafe</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsUnsafe__Task_A_ma_"><div class="section_title">SOURCE</div><div class="code">
            true</div></div></div><div class="member-title"><a name="Match"></a>Match(Task&lt;A&gt;, Action&lt;A&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match__Task_A_ma__Action_A_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">Match</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Action</span>&lt;<span class="ident">A</span>&gt; Some, <span class="ident">Action</span> None)</div></div><div style="display:none" id="code-Match__Task_A_ma__Action_A_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            if (ma.IsFaulted) None(); else Some(ma.Result);
            return unit;
        </div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(Task&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_Task_A_ma__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Match_B_Task_A_ma__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            if (ma.IsFaulted)
                return None();
            else
                return Some(ma.Result);
        </div></div></div><div class="member-title"><a name="MatchUnsafe&lt;B>"></a>MatchUnsafe&lt;B&gt;(Task&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_B_Task_A_ma__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">MatchUnsafe</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafe_B_Task_A_ma__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            if (ma.IsFaulted)
                return None();
            else
                return Some(ma.Result);
        </div></div></div><div class="member-title"><a name="Optional"></a>Optional(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Optional__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Optional</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Optional__A__value_"><div class="section_title">SOURCE</div><div class="code">
            Task.FromResult(value)</div></div></div><div class="member-title"><a name="Plus"></a>Plus(Task&lt;A&gt;, Task&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Plus__Task_A_ma__Task_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Plus</span>(<span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Plus__Task_A_ma__Task_A_mb_"><div class="section_title">SOURCE</div><div class="code">
            // Run in parallel
            for (int i = 0; i &lt; 2; i++)
            {
                // Return first one that completes
                var completed = await Task.WhenAny(ma, mb);
                if (!completed.IsFaulted) return completed.Result;
            }
            throw new BottomException();
        </div></div></div><div class="member-title"><a name="Return"></a>Return(Func&lt;Unit, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Return__Func_Unit_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monad return </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Return</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">A</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Monad of A</span></div></div></div><div style="display:none" id="code-Return__Func_Unit_A_f_"><div class="section_title">SOURCE</div><div class="code">
            Task.Run(() =&gt; f(unit))</div></div></div><div class="member-title"><a name="Return"></a>Return(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Return__A__x_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Return</span>(<span class="ident">A</span> x)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Return__A__x_"><div class="section_title">SOURCE</div><div class="code">
            Return(_ =&gt; x)</div></div></div><div class="member-title"><a name="Some"></a>Some(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Some__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Some</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Some__A__value_"><div class="section_title">SOURCE</div><div class="code">
            Task.FromResult(value)</div></div></div><div class="member-title"><a name="Zero"></a>Zero()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Zero__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Zero</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Zero__"><div class="section_title">SOURCE</div><div class="code"> 
            None</div></div></div></div></body></html>