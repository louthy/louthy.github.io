<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.ClassInstances/index.htm">LanguageExt.ClassInstances</a> \ <span class="nav-bar-link" href="MTryOptionAsync_A.htm">MTryOptionAsync&lt;A&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Inst">Inst</a><h3 >PROPERTIES</h3><a class="nav-link" href="#None">None</a><a class="nav-link" href="#NoneAsync">NoneAsync</a><h3 >METHODS</h3><a class="nav-link" href="#Append">Append(TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#Apply">Apply(Func&lt;A, A, A&gt;, TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#BiFold&lt;S>">BiFold&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldAsync&lt;S>">BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldAsync&lt;S>">BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldAsync&lt;S>">BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#BiFoldAsync&lt;S>">BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#BiFoldBack&lt;S>">BiFoldBack&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldBackAsync&lt;S>">BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldBackAsync&lt;S>">BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, S&gt;)</a><a class="nav-link" href="#BiFoldBackAsync&lt;S>">BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#BiFoldBackAsync&lt;S>">BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#Bind&lt;MONADB, MB, B>">Bind&lt;MONADB, MB, B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, MB&gt;)</a><a class="nav-link" href="#BindReturn">BindReturn(Unit, TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#Count">Count(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#CountAsync">CountAsync(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#Empty">Empty()</a><a class="nav-link" href="#Fail">Fail(object)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;S>">FoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldAsync&lt;S>">FoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#FoldBack&lt;S>">FoldBack&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBackAsync&lt;S>">FoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBackAsync&lt;S>">FoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;)</a><a class="nav-link" href="#Id">Id(Func&lt;Unit, TryOptionAsync&lt;A&gt;&gt;)</a><a class="nav-link" href="#IdAsync">IdAsync(Func&lt;Unit, Task&lt;TryOptionAsync&lt;A&gt;&gt;&gt;)</a><a class="nav-link" href="#IsNone">IsNone(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#IsNoneAsync">IsNoneAsync(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#IsSome">IsSome(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#IsSomeAsync">IsSomeAsync(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#IsUnsafe">IsUnsafe(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#IsUnsafeAsync">IsUnsafeAsync(TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#Match">Match(TryOptionAsync&lt;A&gt;, Action&lt;A&gt;, Action)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchAsync">MatchAsync(TryOptionAsync&lt;A&gt;, Action&lt;A&gt;, Action)</a><a class="nav-link" href="#MatchAsync&lt;B>">MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchAsync&lt;B>">MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchAsync&lt;B>">MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;Task&lt;B&gt;&gt;)</a><a class="nav-link" href="#MatchAsync&lt;B>">MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;Task&lt;B&gt;&gt;)</a><a class="nav-link" href="#MatchUnsafe&lt;B>">MatchUnsafe&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchUnsafeAsync&lt;B>">MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchUnsafeAsync&lt;B>">MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;B&gt;)</a><a class="nav-link" href="#MatchUnsafeAsync&lt;B>">MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;Task&lt;B&gt;&gt;)</a><a class="nav-link" href="#MatchUnsafeAsync&lt;B>">MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;Task&lt;B&gt;&gt;)</a><a class="nav-link" href="#Optional">Optional(A)</a><a class="nav-link" href="#OptionalAsync">OptionalAsync(A)</a><a class="nav-link" href="#Plus">Plus(TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)</a><a class="nav-link" href="#Return">Return(Func&lt;Unit, A&gt;)</a><a class="nav-link" href="#Return">Return(A)</a><a class="nav-link" href="#Some">Some(A)</a><a class="nav-link" href="#SomeAsync">SomeAsync(A)</a><a class="nav-link" href="#Zero">Zero()</a></div><div class="content-panel"><h1 >MTryOptionAsync&lt;A&gt; Struct</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">MTryOptionAsync</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Alternative</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">Unit</span>, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Optional</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">OptionalAsync</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Monad</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">BiFoldable</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>, <span class="ident">Unit</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">BiFoldableAsync</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">A</span>, <span class="ident">Unit</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.ClassInstances</div></div><h2 >Fields</h2><div class="member-title"><a name="Inst"></a>Inst</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">MTryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Inst</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="None"></a>None</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">None</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div></div><div class="member-title"><a name="NoneAsync"></a>NoneAsync</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">NoneAsync</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Append"></a>Append(TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Append__TryOptionAsync_A_x__TryOptionAsync_A_y_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">y</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Append</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; x, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; y)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Append__TryOptionAsync_A_x__TryOptionAsync_A_y_"><div class="section_title">SOURCE</div><div class="code">
            Plus(x, y)</div></div></div><div class="member-title"><a name="Apply"></a>Apply(Func&lt;A, A, A&gt;, TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply__Func_A_A_A_f__TryOptionAsync_A_fa__TryOptionAsync_A_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">A</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Apply</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">A</span>, <span class="ident">A</span>&gt; f, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; fa, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Apply__Func_A_A_A_f__TryOptionAsync_A_fa__TryOptionAsync_A_fb_"><div class="section_title">SOURCE</div><div class="code"> async () =&gt;
        {
            // Run in parallel
            var resA = fa.Try();
            var resB = fb.Try();
            var completed = await Task.WhenAll(resA, resB);

            return !completed[0].IsFaulted &amp;&amp; !completed[1].IsFaulted &amp;&amp; completed[0].Value.IsSome &amp;&amp; completed[1].Value.IsSome
                ? Option&lt;A&gt;.Some(f(completed[0].Value.Value, completed[0].Value.Value))
                : Option&lt;A&gt;.None; // TODO: Propagate exceptions
        }</div></div></div><div class="member-title"><a name="BiFold&lt;S>"></a>BiFold&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFold_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-BiFold_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            Match(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldAsync&lt;S>"></a>BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldAsync&lt;S>"></a>BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldAsync&lt;S>"></a>BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_Task&lt;S>_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_Task&lt;S>_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldAsync&lt;S>"></a>BiFoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_Task&lt;S>_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_Task&lt;S>_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldBack&lt;S>"></a>BiFoldBack&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBack_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBack_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            Match(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldBackAsync&lt;S>"></a>BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldBackAsync&lt;S>"></a>BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_S_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">S</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_S_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldBackAsync&lt;S>"></a>BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_Task&lt;S>_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_fa__Func_S_Unit_Task&lt;S>_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="BiFoldBackAsync&lt;S>"></a>BiFoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;, Func&lt;S, Unit, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_Task&lt;S>_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt; <span class="ident">BiFoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fa, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiFoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_fa__Func_S_Unit_Task&lt;S>_fb_"><div class="section_title">SOURCE</div><div class="code">
            default(MTryOptionAsync&lt;A&gt;).MatchAsync(ma, x =&gt; fa(state, x), () =&gt; fb(state, unit))</div></div></div><div class="member-title"><a name="Bind&lt;MONADB, MB, B>"></a>Bind&lt;MONADB, MB, B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, MB&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_MONADB_MB_B_TryOptionAsync_A_ma__Func_A_MB_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">MB</span> <span class="ident">Bind</span>&lt;<span class="ident">MONADB</span>, <span class="ident">MB</span>, <span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">MB</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">MB</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">MONADB</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">Unit</span>, <span class="ident">Unit</span>, <span class="ident">MB</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Bind_MONADB_MB_B_TryOptionAsync_A_ma__Func_A_MB_f_"><div class="section_title">SOURCE</div><div class="code">
            default(MONADB).IdAsync(_ =&gt; ma.Try().ContinueWith(task =&gt;
            {
                try
                {
                    return task.IsFaulted
                        ? default(MONADB).Fail(task.Exception)
                        : task.IsCanceled
                            ? default(MONADB).Fail(new TaskCanceledException())
                            : task.Result.IsFaulted
                                ? default(MONADB).Fail(task.Result.Exception)
                                : task.Result.Value.IsNone || task.Result.IsBottom
                                    ? default(MONADB).Fail(new TaskCanceledException())
                                    : f(task.Result.Value.Value);
                }
                catch(Exception e)
                {
                    return default(MONADB).Fail(e);
                }
            }))</div></div></div><div class="member-title"><a name="BindReturn"></a>BindReturn(Unit, TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BindReturn__Unit_____TryOptionAsync_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">_</div><div class="arg-type"><span class="ident">Unit</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">BindReturn</span>(<span class="ident">Unit</span> _, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BindReturn__Unit_____TryOptionAsync_A_mb_"><div class="section_title">SOURCE</div><div class="code">
            mb</div></div></div><div class="member-title"><a name="Count"></a>Count(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__TryOptionAsync_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="keyword">int</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Count__TryOptionAsync_A_ma_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            Inst.Match(ma, x =&gt; 1, () =&gt; 0)</div></div></div><div class="member-title"><a name="CountAsync"></a>CountAsync(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountAsync__TryOptionAsync_A_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt; <span class="ident">CountAsync</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="keyword">int</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-CountAsync__TryOptionAsync_A_ma_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.Map(a =&gt; 1).IfNoneOrFail(0)</div></div></div><div class="member-title"><a name="Empty"></a>Empty()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Empty__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Empty</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Empty__"><div class="section_title">SOURCE</div><div class="code">
            none</div></div></div><div class="member-title"><a name="Fail"></a>Fail(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fail__object__err_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">err</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Fail</span>(<span class="keyword">object</span> err = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fail__object__err_"><div class="section_title">SOURCE</div><div class="code">
            err != null &amp;&amp; err is Exception
                ? TryOptionAsync&lt;A&gt;((Exception)err)
                : TryOptionAsync(Option&lt;A&gt;.None)</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            Inst.Match(ma, x =&gt; f(state, x), () =&gt; state)</div></div></div><div class="member-title"><a name="FoldAsync&lt;S>"></a>FoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.Map(a =&gt; f(state, a)).IfNoneOrFail(state)</div></div></div><div class="member-title"><a name="FoldAsync&lt;S>"></a>FoldAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; <span class="ident">FoldAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.Map(a =&gt; f(state, a)).IfNoneOrFail(state)</div></div></div><div class="member-title"><a name="FoldBack&lt;S>"></a>FoldBack&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt; <span class="ident">FoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">S</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBack_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            Inst.Match(ma, x =&gt; f(state, x), () =&gt; state)</div></div></div><div class="member-title"><a name="FoldBackAsync&lt;S>"></a>FoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; <span class="ident">FoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.Map(a =&gt; f(state, a)).IfNoneOrFail(state)</div></div></div><div class="member-title"><a name="FoldBackAsync&lt;S>"></a>FoldBackAsync&lt;S&gt;(TryOptionAsync&lt;A&gt;, S, Func&lt;S, A, Task&lt;S&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; <span class="ident">FoldBackAsync</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">S</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBackAsync_S_TryOptionAsync_A_ma__S__state__Func_S_A_Task&lt;S>_f_"><div class="section_title">SOURCE</div><div class="code"> _ =&gt;
            ma.Map(a =&gt; f(state, a)).IfNoneOrFail(state)</div></div></div><div class="member-title"><a name="Id"></a>Id(Func&lt;Unit, TryOptionAsync&lt;A&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Id__Func_Unit_TryOptionAsync&lt;A>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Id</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Id__Func_Unit_TryOptionAsync&lt;A>_ma_"><div class="section_title">SOURCE</div><div class="code">
            ma(unit)</div></div></div><div class="member-title"><a name="IdAsync"></a>IdAsync(Func&lt;Unit, Task&lt;TryOptionAsync&lt;A&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IdAsync__Func_Unit_Task&lt;TryOptionAsync&lt;A>>_ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">IdAsync</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">Task</span>&lt;<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;&gt;&gt; ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IdAsync__Func_Unit_Task&lt;TryOptionAsync&lt;A>>_ma_"><div class="section_title">SOURCE</div><div class="code">
            new TryOptionAsync&lt;A&gt;(() =&gt;
            {
                try
                {
                    return from a in ma(unit)
                           let b = a()
                           from c in b
                           select c;
                }
                catch (Exception e)
                {
                    return Task.FromResult(new OptionalResult&lt;A&gt;(e));
                }
            })</div></div></div><div class="member-title"><a name="IsNone"></a>IsNone(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsNone__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsNone</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsNone__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            !IsSome(opt)</div></div></div><div class="member-title"><a name="IsNoneAsync"></a>IsNoneAsync(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsNoneAsync__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">IsNoneAsync</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IsNoneAsync__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            opt.Map(x =&gt; false).IfNoneOrFail(true)</div></div></div><div class="member-title"><a name="IsSome"></a>IsSome(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsSome__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSome</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsSome__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            Match(opt, Some: _ =&gt; true, None: () =&gt; false)</div></div></div><div class="member-title"><a name="IsSomeAsync"></a>IsSomeAsync(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsSomeAsync__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">IsSomeAsync</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IsSomeAsync__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            opt.Map(x =&gt; true).IfNoneOrFail(false)</div></div></div><div class="member-title"><a name="IsUnsafe"></a>IsUnsafe(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsUnsafe__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsUnsafe</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IsUnsafe__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            true</div></div></div><div class="member-title"><a name="IsUnsafeAsync"></a>IsUnsafeAsync(TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsUnsafeAsync__TryOptionAsync_A_opt_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt; <span class="ident">IsUnsafeAsync</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="keyword">bool</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-IsUnsafeAsync__TryOptionAsync_A_opt_"><div class="section_title">SOURCE</div><div class="code">
            Task.FromResult(default(MTryOptionAsync&lt;A&gt;).IsUnsafe(opt))</div></div></div><div class="member-title"><a name="Match"></a>Match(TryOptionAsync&lt;A&gt;, Action&lt;A&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match__TryOptionAsync_A_opt__Action_A_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">Match</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Action</span>&lt;<span class="ident">A</span>&gt; Some, <span class="ident">Action</span> None)</div></div><div style="display:none" id="code-Match__TryOptionAsync_A_opt__Action_A_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            Match(opt,
                x =&gt; { Some(x); return unit; },
                () =&gt; { None(); return unit; })</div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Match_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            try
            {
                var res = opt.Try().Result; // TODO: No asynchrony
                if (res.IsFaultedOrNone)
                    return None();
                else
                    return Some(res.Value.Value);
            }
            catch
            {
                return None();
            }
        </div></div></div><div class="member-title"><a name="MatchAsync"></a>MatchAsync(TryOptionAsync&lt;A&gt;, Action&lt;A&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync__TryOptionAsync_A_opt__Action_A_Some__Action__None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt; <span class="ident">MatchAsync</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Action</span>&lt;<span class="ident">A</span>&gt; Some, <span class="ident">Action</span> None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Unit</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync__TryOptionAsync_A_opt__Action_A_Some__Action__None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _  =&gt; None())</div></div></div><div class="member-title"><a name="MatchAsync&lt;B>"></a>MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _  =&gt; None())</div></div></div><div class="member-title"><a name="MatchAsync&lt;B>"></a>MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchAsync&lt;B>"></a>MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;Task&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_Task&lt;B>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_Task&lt;B>_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchAsync&lt;B>"></a>MatchAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;Task&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_Task&lt;B>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_Task&lt;B>_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchUnsafe&lt;B>"></a>MatchUnsafe&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">MatchUnsafe</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafe_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            Match(opt, Some, None)</div></div></div><div class="member-title"><a name="MatchUnsafeAsync&lt;B>"></a>MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchUnsafeAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchUnsafeAsync&lt;B>"></a>MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_B_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchUnsafeAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_B_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchUnsafeAsync&lt;B>"></a>MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, B&gt;, Func&lt;Task&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_Task&lt;B>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchUnsafeAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_B_Some__Func_Task&lt;B>_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="MatchUnsafeAsync&lt;B>"></a>MatchUnsafeAsync&lt;B&gt;(TryOptionAsync&lt;A&gt;, Func&lt;A, Task&lt;B&gt;&gt;, Func&lt;Task&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_Task&lt;B>_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">opt</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt; <span class="ident">MatchUnsafeAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; opt, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUnsafeAsync_B_TryOptionAsync_A_opt__Func_A_Task&lt;B>_Some__Func_Task&lt;B>_None_"><div class="section_title">SOURCE</div><div class="code">
            opt.Match(
                Some,
                None: () =&gt; None(),
                Fail: _ =&gt; None())</div></div></div><div class="member-title"><a name="Optional"></a>Optional(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Optional__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Optional</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Optional__A__value_"><div class="section_title">SOURCE</div><div class="code">
            Return(_ =&gt; value)</div></div></div><div class="member-title"><a name="OptionalAsync"></a>OptionalAsync(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-OptionalAsync__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">OptionalAsync</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-OptionalAsync__A__value_"><div class="section_title">SOURCE</div><div class="code">
            TryOptionAsync(value)</div></div></div><div class="member-title"><a name="Plus"></a>Plus(TryOptionAsync&lt;A&gt;, TryOptionAsync&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Plus__TryOptionAsync_A_ma__TryOptionAsync_A_mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Plus</span>(<span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; ma, <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Plus__TryOptionAsync_A_ma__TryOptionAsync_A_mb_"><div class="section_title">SOURCE</div><div class="code"> async () =&gt;
        {
            // Run in parallel
            var resA = ma.Try();
            var resB = mb.Try();

            var tasks = Set&lt;OrdTask&lt;OptionalResult&lt;A&gt;&gt;, Task&lt;OptionalResult&lt;A&gt;&gt;&gt;(resA, resB);

            while (tasks.Count &gt; 0)
            {
                // Return first one that completes
                var completed = await Task.WhenAny(tasks);
                if (!completed.IsFaulted &amp;&amp; !completed.Result.IsFaulted) return completed.Result;
                tasks = tasks.Remove(completed);
            }
            if (!resA.IsFaulted) return resA.Result;
            if (!resB.IsFaulted) return resB.Result;
            return OptionalResult&lt;A&gt;.None;
        }</div></div></div><div class="member-title"><a name="Return"></a>Return(Func&lt;Unit, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Return__Func_Unit_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monad return </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Return</span>(<span class="ident">Func</span>&lt;<span class="ident">Unit</span>, <span class="ident">A</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Monad of A</span></div></div></div><div style="display:none" id="code-Return__Func_Unit_A_f_"><div class="section_title">SOURCE</div><div class="code">
            () =&gt; Task.FromResult(new OptionalResult&lt;A&gt;(f(unit)))</div></div></div><div class="member-title"><a name="Return"></a>Return(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Return__A__x_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Return</span>(<span class="ident">A</span> x)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Return__A__x_"><div class="section_title">SOURCE</div><div class="code">
            Return(_ =&gt; x)</div></div></div><div class="member-title"><a name="Some"></a>Some(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Some__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Some</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Some__A__value_"><div class="section_title">SOURCE</div><div class="code">
            Return(_ =&gt; value)</div></div></div><div class="member-title"><a name="SomeAsync"></a>SomeAsync(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SomeAsync__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">SomeAsync</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SomeAsync__A__value_"><div class="section_title">SOURCE</div><div class="code">
            TryOptionAsync(value)</div></div></div><div class="member-title"><a name="Zero"></a>Zero()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Zero__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Zero</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOptionAsync</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Zero__"><div class="section_title">SOURCE</div><div class="code">
            none</div></div></div></div></body></html>