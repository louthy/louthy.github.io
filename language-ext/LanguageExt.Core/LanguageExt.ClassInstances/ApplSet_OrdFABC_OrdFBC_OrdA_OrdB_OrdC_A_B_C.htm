<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.ClassInstances/index.htm">LanguageExt.ClassInstances</a> \ <span class="nav-bar-link" href="ApplSet_OrdFABC_OrdFBC_OrdA_OrdB_OrdC_A_B_C.htm">ApplSet&lt;OrdFABC, OrdFBC, OrdA, OrdB, OrdC, A, B, C&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Inst">Inst</a><h3 >METHODS</h3><a class="nav-link" href="#Apply">Apply(Set&lt;OrdFABC, Func&lt;A, Func&lt;B, C&gt;&gt;&gt;, Set&lt;OrdA, A&gt;)</a><a class="nav-link" href="#Apply">Apply(Set&lt;OrdFABC, Func&lt;A, Func&lt;B, C&gt;&gt;&gt;, Set&lt;OrdA, A&gt;, Set&lt;OrdB, B&gt;)</a><a class="nav-link" href="#Pure">Pure(A)</a></div><div class="content-panel"><h1 >ApplSet&lt;OrdFABC, OrdFBC, OrdA, OrdB, OrdC, A, B, C&gt; Struct</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">ApplSet</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">OrdFBC</span>, <span class="ident">OrdA</span>, <span class="ident">OrdB</span>, <span class="ident">OrdC</span>, <span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Applicative</span>&lt;<span class="ident">Set</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;&gt;, <span class="ident">Set</span>&lt;<span class="ident">OrdFBC</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;, <span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt;, <span class="ident">Set</span>&lt;<span class="ident">OrdB</span>, <span class="ident">B</span>&gt;, <span class="ident">Set</span>&lt;<span class="ident">OrdC</span>, <span class="ident">C</span>&gt;, <span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.ClassInstances</div></div><h2 >Fields</h2><div class="member-title"><a name="Inst"></a>Inst</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">ApplSet</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">OrdFBC</span>, <span class="ident">OrdA</span>, <span class="ident">OrdB</span>, <span class="ident">OrdC</span>, <span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt; <span class="ident">Inst</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Apply"></a>Apply(Set&lt;OrdFABC, Func&lt;A, Func&lt;B, C&gt;&gt;&gt;, Set&lt;OrdA, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply__Set_OrdFABC_Func&lt;A, Func&lt;B, C>>_fabc__Set_OrdA_A_fa_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fabc</div><div class="arg-type"><span class="ident">Set</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Set</span>&lt;<span class="ident">OrdFBC</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; <span class="ident">Apply</span>(<span class="ident">Set</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;&gt; fabc, <span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt; fa)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">OrdFBC</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Apply__Set_OrdFABC_Func&lt;A, Func&lt;B, C>>_fabc__Set_OrdA_A_fa_"><div class="section_title">SOURCE</div><div class="code">
            IEnumerable&lt;Func&lt;B,C&gt;&gt; Yield()
            {
                foreach (var f in fabc)
                {
                    foreach (var a in fa)
                    {
                        yield return f(a);
                    }
                }
            }
            return new Set&lt;OrdFBC, Func&lt;B, C&gt;&gt;(Yield(), true);
        </div></div></div><div class="member-title"><a name="Apply"></a>Apply(Set&lt;OrdFABC, Func&lt;A, Func&lt;B, C&gt;&gt;&gt;, Set&lt;OrdA, A&gt;, Set&lt;OrdB, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply__Set_OrdFABC_Func&lt;A, Func&lt;B, C>>_fabc__Set_OrdA_A_fa__Set_OrdB_B_fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fabc</div><div class="arg-type"><span class="ident">Set</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">Set</span>&lt;<span class="ident">OrdB</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Set</span>&lt;<span class="ident">OrdC</span>, <span class="ident">C</span>&gt; <span class="ident">Apply</span>(<span class="ident">Set</span>&lt;<span class="ident">OrdFABC</span>, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Func</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;&gt; fabc, <span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt; fa, <span class="ident">Set</span>&lt;<span class="ident">OrdB</span>, <span class="ident">B</span>&gt; fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">OrdC</span>, <span class="ident">C</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Apply__Set_OrdFABC_Func&lt;A, Func&lt;B, C>>_fabc__Set_OrdA_A_fa__Set_OrdB_B_fb_"><div class="section_title">SOURCE</div><div class="code">
            IEnumerable&lt;C&gt; Yield()
            {
                foreach (var f in fabc)
                {
                    foreach (var a in fa)
                    {
                        foreach (var b in fb)
                        {
                            yield return f(a)(b);
                        }
                    }
                }
            }
            return new Set&lt;OrdC, C&gt;(Yield(), true);
        </div></div></div><div class="member-title"><a name="Pure"></a>Pure(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Pure__A__x_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt; <span class="ident">Pure</span>(<span class="ident">A</span> x)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Set</span>&lt;<span class="ident">OrdA</span>, <span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Pure__A__x_"><div class="section_title">SOURCE</div><div class="code">
            Set&lt;OrdA, A&gt;(x)</div></div></div></div></body></html>