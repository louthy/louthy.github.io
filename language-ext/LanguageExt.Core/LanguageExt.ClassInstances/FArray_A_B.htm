<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.ClassInstances/index.htm">LanguageExt.ClassInstances</a> \ <span class="nav-bar-link" href="FArray_A_B.htm">FArray&lt;A, B&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Inst">Inst</a><h3 >METHODS</h3><a class="nav-link" href="#Action">Action(A, B)</a><a class="nav-link" href="#Apply">Apply(Func&lt;A, B&gt;, A)</a><a class="nav-link" href="#Map">Map(A, Func&lt;A, B&gt;)</a><a class="nav-link" href="#Pure">Pure(A)</a></div><div class="content-panel"><h1 >FArray&lt;A, B&gt; Struct</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">FArray</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Functor</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">A</span>, <span class="ident">B</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">Applicative</span>&lt;<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;, <span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">A</span>, <span class="ident">B</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.ClassInstances</div></div><h2 >Fields</h2><div class="member-title"><a name="Inst"></a>Inst</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">FArray</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; <span class="ident">Inst</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Action"></a>Action(A, B)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Action__A__fa__B__fb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fb</div><div class="arg-type"><span class="ident">B</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">Action</span>(<span class="ident">A</span> fa, <span class="ident">B</span> fb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Action__A__fa__B__fb_"><div class="section_title">SOURCE</div><div class="code">
            (from a in fa
             from b in fb
             select b).ToArray()</div></div></div><div class="member-title"><a name="Apply"></a>Apply(Func&lt;A, B&gt;, A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Apply__Func_A_B_fab__A__fa_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fab</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">Apply</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; fab, <span class="ident">A</span> fa)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Apply__Func_A_B_fab__A__fa_"><div class="section_title">SOURCE</div><div class="code">
            (from f in fab
             from a in fa
             select f(a)).ToArray()</div></div></div><div class="member-title"><a name="Map"></a>Map(A, Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map__A__ma__Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">B</span> <span class="ident">Map</span>(<span class="ident">A</span> ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Map__A__ma__Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
            var bs = new B[ma.Length];
            var iter = ma.AsEnumerable().GetEnumerator();
            for (int i = 0; iter.MoveNext(); i++)
            {
                bs[i] = f(iter.Current);
            }
            return bs;
        </div></div></div><div class="member-title"><a name="Pure"></a>Pure(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Pure__A__x_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">x</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">A</span> <span class="ident">Pure</span>(<span class="ident">A</span> x)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Pure__A__x_"><div class="section_title">SOURCE</div><div class="code">
            new A[] { x }</div></div></div></div></body></html>