<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="..//index.htm"></a> \ <span class="nav-bar-link" href="HashMapExtensions_.htm">HashMapExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D, T>">AddOrUpdate&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, T)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D, T>">AddOrUpdate&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;T, T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, T>">AddOrUpdate&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, T)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, T>">AddOrUpdate&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, Func&lt;T, T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, T>">AddOrUpdate&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, Func&lt;T, T&gt;, Func&lt;T&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, T>">AddOrUpdate&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, T)</a><a class="nav-link" href="#Count&lt;K, V>">Count&lt;K, V&gt;(HashMap&lt;K, V&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, C, D, T>">Exists&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, C, T>">Exists&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, T>">Exists&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, C, D, T>">FilterRemoveT&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, C, T>">FilterRemoveT&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, T>">FilterRemoveT&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, C, D, T>">FilterT&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, C, T>">FilterT&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, T>">FilterT&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, D, T, R>">Find&lt;A, B, C, D, T, R&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, T, R>">Find&lt;A, B, C, T, R&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, T>">Find&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C)</a><a class="nav-link" href="#Find&lt;A, B, T, R>">Find&lt;A, B, T, R&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, Func&lt;T, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#Find&lt;A, B, T>">Find&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B)</a><a class="nav-link" href="#FoldT&lt;A, B, C, D, S, V>">FoldT&lt;A, B, C, D, S, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#FoldT&lt;A, B, C, S, V>">FoldT&lt;A, B, C, S, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#FoldT&lt;A, B, S, V>">FoldT&lt;A, B, S, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, C, D, T>">ForAll&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, C, T>">ForAll&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, T>">ForAll&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, C, D, T, V>">MapRemoveT&lt;A, B, C, D, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;HashMap&lt;D, T&gt;, HashMap&lt;D, V&gt;&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, C, T, V>">MapRemoveT&lt;A, B, C, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;HashMap&lt;C, T&gt;, HashMap&lt;C, V&gt;&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, T, V>">MapRemoveT&lt;A, B, T, V&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;HashMap&lt;B, T&gt;, HashMap&lt;B, V&gt;&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, C, D, T, V>">MapT&lt;A, B, C, D, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, C, T, V>">MapT&lt;A, B, C, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, T, V>">MapT&lt;A, B, T, V&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#Remove&lt;A, B, C, T>">Remove&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C)</a><a class="nav-link" href="#Remove&lt;A, B, T>">Remove&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, D, V>">SetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, D, V>">SetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, V>">SetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, V>">SetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)</a><a class="nav-link" href="#SetItemT&lt;A, B, V>">SetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, V>">SetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)</a><a class="nav-link" href="#Sum&lt;K>">Sum&lt;K&gt;(HashMap&lt;K, int&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, D, V>">TrySetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, D, V>">TrySetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, V>">TrySetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, V>">TrySetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, V>">TrySetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, V>">TrySetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)</a></div><div class="content-panel"><h1 >HashMapExtensions Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">HashMapExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div></div></div><h2 >Methods</h2><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D, T>"></a>AddOrUpdate&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__T__value_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            aKey,
            bKey,
            cKey,
            d =&gt; d.AddOrUpdate(dKey, _ =&gt; value, value),
            () =&gt; Prelude.HashMap(Tuple(dKey, value))
        )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D, T>"></a>AddOrUpdate&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;T, T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_T_T_Some__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_T_T_Some__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            aKey,
            bKey,
            cKey,
            d =&gt; d.AddOrUpdate(dKey, Some, None),
            () =&gt; Prelude.HashMap(Tuple(dKey, None()))
        )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, T>"></a>AddOrUpdate&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__T__value_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            aKey,
            bKey,
            c =&gt; c.AddOrUpdate(cKey, _ =&gt; value, value),
            () =&gt; Prelude.HashMap(Tuple(cKey, value))
        )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, T>"></a>AddOrUpdate&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, Func&lt;T, T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__Func_T_T_Some__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__Func_T_T_Some__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            aKey,
            bKey,
            c =&gt; c.AddOrUpdate(cKey, Some, None),
            () =&gt; Prelude.HashMap(Tuple(cKey, None()))
        )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, T>"></a>AddOrUpdate&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, Func&lt;T, T&gt;, Func&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__Func_T_T_Some__Func_T_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">T</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">T</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__Func_T_T_Some__Func_T_None_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            outerKey,
            b =&gt; b.AddOrUpdate(innerKey, Some, None),
            () =&gt; Prelude.HashMap(Tuple(innerKey, None()))
        )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, T>"></a>AddOrUpdate&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, T)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__T__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">T</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">T</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__T__value_"><div class="section_title">SOURCE</div><div class="code">
        self.AddOrUpdate(
            outerKey,
            b =&gt; b.AddOrUpdate(innerKey, _ =&gt; value, value),
            () =&gt; Prelude.HashMap(Tuple(innerKey, value))
        )</div></div></div><div class="member-title"><a name="Count&lt;K, V>"></a>Count&lt;K, V&gt;(HashMap&lt;K, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_K_V_HashMap_K_V_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Count</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Count_K_V_HashMap_K_V_self_"><div class="section_title">SOURCE</div><div class="code">
        self.Count</div></div></div><div class="member-title"><a name="Exists&lt;A, B, C, D, T>"></a>Exists&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Exists((k, v) =&gt; v.Exists(pred));
    </div></div></div><div class="member-title"><a name="Exists&lt;A, B, C, T>"></a>Exists&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Exists((k, v) =&gt; v.Exists(pred));
    </div></div></div><div class="member-title"><a name="Exists&lt;A, B, T>"></a>Exists&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Exists((k, v) =&gt; v.Exists(pred));
    </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, C, D, T>"></a>FilterRemoveT&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.MapRemoveT(v =&gt; v.Filter(pred));
    </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, C, T>"></a>FilterRemoveT&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.MapRemoveT(v =&gt; v.Filter(pred));
    </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, T>"></a>FilterRemoveT&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.MapRemoveT(v =&gt; v.Filter(pred));
    </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, C, D, T>"></a>FilterT&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.FilterT(pred));
    </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, C, T>"></a>FilterT&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.FilterT(pred));
    </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, T>"></a>FilterT&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.Filter(pred));
    </div></div></div><div class="member-title"><a name="Find&lt;A, B, C, D, T, R>"></a>Find&lt;A, B, C, D, T, R&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_D_T_R_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_D_T_R_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
        self.Find(aKey,
            b =&gt; b.Find(bKey,
                c =&gt; c.Find(cKey,
                    d =&gt; d.Find(dKey, Some, None),
                    None),
                None),
            None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C, T, R>"></a>Find&lt;A, B, C, T, R&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_T_R_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_T_R_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
        self.Find(aKey,
            b =&gt; b.Find(bKey,
                c =&gt; c.Find(cKey, Some, None),
                None),
            None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C, T>"></a>Find&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey_"><div class="section_title">SOURCE</div><div class="code">
        self.Find(aKey, b =&gt; b.Find(bKey, c =&gt; c.Find(cKey), () =&gt; None), () =&gt; None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, T, R>"></a>Find&lt;A, B, T, R&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B, Func&lt;T, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_T_R_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__Func_T_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">R</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>, <span class="ident">R</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_T_R_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey__Func_T_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
        self.Find(outerKey, b =&gt; b.Find(innerKey, Some, None), None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, T>"></a>Find&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">T</span>&gt; <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey_"><div class="section_title">SOURCE</div><div class="code">
        self.Find(outerKey, b =&gt; b.Find(innerKey), () =&gt; None)</div></div></div><div class="member-title"><a name="FoldT&lt;A, B, C, D, S, V>"></a>FoldT&lt;A, B, C, D, S, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_C_D_S_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_C_D_S_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
        return map.Fold(state, (s, x) =&gt; x.FoldT(s, folder));
    </div></div></div><div class="member-title"><a name="FoldT&lt;A, B, C, S, V>"></a>FoldT&lt;A, B, C, S, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_C_S_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_C_S_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
        return map.Fold(state, (s, x) =&gt; x.FoldT(s, folder));
    </div></div></div><div class="member-title"><a name="FoldT&lt;A, B, S, V>"></a>FoldT&lt;A, B, S, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_S_V_HashMap_A_HashMap&lt;B, V>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_S_V_HashMap_A_HashMap&lt;B, V>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
        return map.Fold(state, (s, x) =&gt; x.Fold(s, folder));
    </div></div></div><div class="member-title"><a name="ForAll&lt;A, B, C, D, T>"></a>ForAll&lt;A, B, C, D, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_C_D_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.ForAll((k, v) =&gt; v.ForAll(pred));
    </div></div></div><div class="member-title"><a name="ForAll&lt;A, B, C, T>"></a>ForAll&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.ForAll((k, v) =&gt; v.ForAll(pred));
    </div></div></div><div class="member-title"><a name="ForAll&lt;A, B, T>"></a>ForAll&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_T_HashMap_A_HashMap&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
        return self.ForAll((k, v) =&gt; v.ForAll(pred));
    </div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, C, D, T, V>"></a>MapRemoveT&lt;A, B, C, D, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;HashMap&lt;D, T&gt;, HashMap&lt;D, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_C_D_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_HashMap&lt;D, T>_HashMap&lt;D, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_C_D_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_HashMap&lt;D, T>_HashMap&lt;D, V>_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.Map((kb, vb) =&gt; vb.Map((kc, vc) =&gt; map(vc))
                                                         .Filter((kc, vc) =&gt; vc.Count &gt; 0))
                                      .Filter((kb, vb) =&gt; vb.Count &gt; 0))
                   .Filter((ka, va) =&gt; va.Count &gt; 0);
    </div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, C, T, V>"></a>MapRemoveT&lt;A, B, C, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;HashMap&lt;C, T&gt;, HashMap&lt;C, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_C_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_HashMap&lt;C, T>_HashMap&lt;C, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_C_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_HashMap&lt;C, T>_HashMap&lt;C, V>_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.Map((kb, vb) =&gt; map(vb))
                                      .Filter((kb, vb) =&gt; vb.Count &gt; 0))
                   .Filter((ka, va) =&gt; va.Count &gt; 0);
    </div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, T, V>"></a>MapRemoveT&lt;A, B, T, V&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;HashMap&lt;B, T&gt;, HashMap&lt;B, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_T_V_HashMap_A_HashMap&lt;B, T>_self__Func_HashMap&lt;B, T>_HashMap&lt;B, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_T_V_HashMap_A_HashMap&lt;B, T>_self__Func_HashMap&lt;B, T>_HashMap&lt;B, V>_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; map(va))
                   .Filter((ka, va) =&gt; va.Count &gt; 0);
    </div></div></div><div class="member-title"><a name="MapT&lt;A, B, C, D, T, V>"></a>MapT&lt;A, B, C, D, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_C_D_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_C_D_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, T>>>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.MapT(map));
    </div></div></div><div class="member-title"><a name="MapT&lt;A, B, C, T, V>"></a>MapT&lt;A, B, C, T, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_C_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_C_T_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.MapT(map));
    </div></div></div><div class="member-title"><a name="MapT&lt;A, B, T, V>"></a>MapT&lt;A, B, T, V&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_T_V_HashMap_A_HashMap&lt;B, T>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_T_V_HashMap_A_HashMap&lt;B, T>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
        return self.Map((ka, va) =&gt; va.Map(map));
    </div></div></div><div class="member-title"><a name="Remove&lt;A, B, C, T>"></a>Remove&lt;A, B, C, T&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, T&gt;&gt;&gt;, A, B, C)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">Remove</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove_A_B_C_T_HashMap_A_HashMap&lt;B, HashMap&lt;C, T>>_self__A__aKey__B__bKey__C__cKey_"><div class="section_title">SOURCE</div><div class="code">
        var b = self.Find(aKey);
        if (b.IsSome)
        {
            var c = b.Value.Find(bKey);
            if (c.IsSome)
            {
                var cv = c.Value.Remove(cKey);
                if (cv.Count() == 0)
                {
                    var bv = b.Value.Remove(bKey);
                    if (b.Value.Count() == 0)
                    {
                        return self.Remove(aKey);
                    }
                    else
                    {
                        return self.SetItem(aKey, bv);
                    }
                }
                else
                {
                    return self.SetItem(aKey, b.Value.SetItem(bKey, cv));
                }
            }
            else
            {
                return self;
            }
        }
        else
        {
            return self;
        }
    </div></div></div><div class="member-title"><a name="Remove&lt;A, B, T>"></a>Remove&lt;A, B, T&gt;(HashMap&lt;A, HashMap&lt;B, T&gt;&gt;, A, B)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">Remove</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove_A_B_T_HashMap_A_HashMap&lt;B, T>_self__A__outerKey__B__innerKey_"><div class="section_title">SOURCE</div><div class="code">
        var b = self.Find(outerKey);
        if (b.IsSome)
        {
            var bv = b.Value.Remove(innerKey);
            if (bv.Count() == 0)
            {
                return self.Remove(outerKey);
            }
            else
            {
                return self.SetItem(outerKey, bv);
            }
        }
        else
        {
            return self;
        }
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, D, V>"></a>SetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;

        return map.SetItem(aKey, av.SetItemT(bKey, cKey, dKey, value));
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, D, V>"></a>SetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;

        return map.SetItem(aKey, av.SetItemT(bKey, cKey, dKey, Some));
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, V>"></a>SetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;

        return map.SetItem(aKey, av.SetItemT(bKey, cKey, value));
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, V>"></a>SetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;

        return map.SetItem(aKey, av.SetItemT(bKey, cKey, Some));
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, V>"></a>SetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;
        return map.SetItem(aKey, av.SetItem(bKey, value));
    </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, V>"></a>SetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
        var av = a.Value;
        return map.SetItem(aKey, av.SetItem(bKey, Some));
    </div></div></div><div class="member-title"><a name="Sum&lt;K>"></a>Sum&lt;K&gt;(HashMap&lt;K, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_K_HashMap_K_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Sum</span>&lt;<span class="ident">K</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Sum_K_HashMap_K_int_self_"><div class="section_title">SOURCE</div><div class="code">
        self.Values.Sum()</div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, D, V>"></a>TrySetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;

        return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, dKey, value));
    </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, D, V>"></a>TrySetItemT&lt;A, B, C, D, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">HashMap</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_D_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, HashMap&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;

        return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, dKey, Some));
    </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, V>"></a>TrySetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;

        return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, value));
    </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, V>"></a>TrySetItemT&lt;A, B, C, V&gt;(HashMap&lt;A, HashMap&lt;B, HashMap&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">HashMap</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_V_HashMap_A_HashMap&lt;B, HashMap&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;

        return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, Some));
    </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, V>"></a>TrySetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;
        return map.SetItem(aKey, av.TrySetItem(bKey, value));
    </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, V>"></a>TrySetItemT&lt;A, B, V&gt;(HashMap&lt;A, HashMap&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashMap</span>&lt;<span class="ident">A</span>, <span class="ident">HashMap</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_V_HashMap_A_HashMap&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
        var a = map.Find(aKey);
        if (a.IsNone) return map;
        var av = a.Value;
        return map.SetItem(aKey, av.TrySetItem(bKey, Some));
    </div></div></div></div></body></html>