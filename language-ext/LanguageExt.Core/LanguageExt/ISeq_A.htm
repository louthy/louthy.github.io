<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="ISeq_A.htm">ISeq&lt;A&gt;</span></div><div class="nav-panel"><h3 >PROPERTIES</h3><a class="nav-link" href="#Count">Count</a><a class="nav-link" href="#Head">Head</a><a class="nav-link" href="#IsEmpty">IsEmpty</a><a class="nav-link" href="#Tail">Tail</a><h3 >METHODS</h3><a class="nav-link" href="#Bind&lt;B>">Bind&lt;B&gt;(Func&lt;A, Seq&lt;B&gt;&gt;)</a><a class="nav-link" href="#Exists">Exists(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Filter">Filter(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBack&lt;S>">FoldBack&lt;S&gt;(S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBackRec&lt;S>">FoldBackRec&lt;S&gt;(S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#ForAll">ForAll(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#HeadOrNone">HeadOrNone()</a><a class="nav-link" href="#Map&lt;B>">Map&lt;B&gt;(Func&lt;A, B&gt;)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, Seq&lt;A&gt;, B&gt;)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, B&gt;, Func&lt;A, Seq&lt;A&gt;, B&gt;)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;Seq&lt;A&gt;, B&gt;)</a><a class="nav-link" href="#Match&lt;B>">Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, B&gt;, Func&lt;Seq&lt;A&gt;, B&gt;)</a><a class="nav-link" href="#Select&lt;B>">Select&lt;B&gt;(Func&lt;A, B&gt;)</a><a class="nav-link" href="#SelectMany&lt;B, C>">SelectMany&lt;B, C&gt;(Func&lt;A, Seq&lt;B&gt;&gt;, Func&lt;A, B, C&gt;)</a><a class="nav-link" href="#Skip">Skip(int)</a><a class="nav-link" href="#Take">Take(int)</a><a class="nav-link" href="#TakeWhile">TakeWhile(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#TakeWhile">TakeWhile(Func&lt;A, int, bool&gt;)</a><a class="nav-link" href="#Where">Where(Func&lt;A, bool&gt;)</a></div><div class="content-panel"><h1 >ISeq&lt;A&gt; Interface</h1><p ><span >Cons sequence Represents a sequence of values in a similar way to IEnumerable, but without the issues of multiple evaluation for key LINQ operators like Skip, Count, etc. </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="ident">ISeq</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">ISeq</span>&lt;<span class="ident">A</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">ISeq</span>&lt;<span class="ident">A</span>&gt;&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Properties</h2><div class="member-title"><a name="Count"></a>Count</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the number of items in the sequence </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="keyword">int</span> <span class="ident">Count</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >Number of items in the sequence</span></div></div></div></div><div class="member-title"><a name="Head"></a>Head</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Head of the sequence </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">A</span> <span class="ident">Head</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsEmpty"></a>IsEmpty</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >True if this cons node is the Empty node </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="ident">IsEmpty</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Tail"></a>Tail</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tail of the sequence </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Tail</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Bind&lt;B>"></a>Bind&lt;B&gt;(Func&lt;A, Seq&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_B_Func_A_Seq&lt;B>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind (flatmap) of the sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div><div class="arg-desc"><span >Bind function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"><span >Flatmapped sequence</span></div></div></div><div style="display:none" id="code-Bind_B_Func_A_Seq&lt;B>_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Exists"></a>Exists(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists__Func_A_bool_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns true if the supplied predicate returns true for any item in the sequence.  False otherwise. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate to apply</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="ident">Exists</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the supplied predicate returns true for any item in the sequence.  False otherwise.</span></div></div></div><div style="display:none" id="code-Exists__Func_A_bool_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Filter"></a>Filter(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter__Func_A_bool_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the items in the sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate to apply to the items</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Filter</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Filtered sequence</span></div></div></div><div style="display:none" id="code-Filter__Func_A_bool_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold the sequence from the first item to the last </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Fold function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Aggregated state</span></div></div></div><div style="display:none" id="code-Fold_S_S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="FoldBack&lt;S>"></a>FoldBack&lt;S&gt;(S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_S_S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold the sequence from the last item to the first.  For  sequences that are not lazy and are less than 5000 items long, FoldBackRec is called instead, because it is faster. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Fold function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">S</span> <span class="ident">FoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Aggregated state</span></div></div></div><div style="display:none" id="code-FoldBack_S_S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="FoldBackRec&lt;S>"></a>FoldBackRec&lt;S&gt;(S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBackRec_S_S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold the sequence (recursively) from the last item to the  first.  This is faster than FoldBack, but be wary of calling  this with sequences that are large, you can blow the stack. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Fold function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">S</span> <span class="ident">FoldBackRec</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >Aggregated state</span></div></div></div><div style="display:none" id="code-FoldBackRec_S_S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="ForAll"></a>ForAll(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll__Func_A_bool_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns true if the supplied predicate returns true for all items in the sequence.  False otherwise.  If there is an  empty sequence then true is returned. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate to apply</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the supplied predicate returns true for all items in the sequence.  False otherwise.  If there is an  empty sequence then true is returned.</span></div></div></div><div style="display:none" id="code-ForAll__Func_A_bool_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="HeadOrNone"></a>HeadOrNone()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-HeadOrNone__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Head of the sequence </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Option</span>&lt;<span class="ident">A</span>&gt; <span class="ident">HeadOrNone</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-HeadOrNone__"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Map&lt;B>"></a>Map&lt;B&gt;(Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_B_Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map the sequence using the function provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Mapping function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"><span >Mapped sequence</span></div></div></div><div style="display:none" id="code-Map_B_Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, Seq&lt;A&gt;, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_Func_B_Empty__Func_A_Seq&lt;A>_B_Tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match empty sequence, or multi-item sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for an empty list</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Tail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for a non-empty</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt; Tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"><span >Result of match function invoked</span></div></div></div><div style="display:none" id="code-Match_B_Func_B_Empty__Func_A_Seq&lt;A>_B_Tail_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, B&gt;, Func&lt;A, Seq&lt;A&gt;, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_Func_B_Empty__Func_A_B_Head__Func_A_Seq&lt;A>_B_Tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match empty sequence, or one item sequence, or multi-item sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for an empty list</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Head</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Tail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for a non-empty</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Head, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt; Tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"><span >Result of match function invoked</span></div></div></div><div style="display:none" id="code-Match_B_Func_B_Empty__Func_A_B_Head__Func_A_Seq&lt;A>_B_Tail_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;Seq&lt;A&gt;, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_Func_B_Empty__Func_Seq&lt;A>_B_Seq_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match empty sequence, or multi-item sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for an empty list</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Seq</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for a non-empty</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt; Seq)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"><span >Result of match function invoked</span></div></div></div><div style="display:none" id="code-Match_B_Func_B_Empty__Func_Seq&lt;A>_B_Seq_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Match&lt;B>"></a>Match&lt;B&gt;(Func&lt;B&gt;, Func&lt;A, B&gt;, Func&lt;Seq&lt;A&gt;, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_B_Func_B_Empty__Func_A_B_Head__Func_Seq&lt;A>_B_Tail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match empty sequence, or one item sequence, or multi-item sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Empty</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for an empty list</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Head</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Tail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Match for a non-empty</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">B</span> <span class="ident">Match</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">B</span>&gt; Empty, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; Head, <span class="ident">Func</span>&lt;<span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;, <span class="ident">B</span>&gt; Tail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">B</span></div><div class="normal"><span >Result of match function invoked</span></div></div></div><div style="display:none" id="code-Match_B_Func_B_Empty__Func_A_B_Head__Func_Seq&lt;A>_B_Tail_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Select&lt;B>"></a>Select&lt;B&gt;(Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_B_Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map the sequence using the function provided </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div><div class="arg-desc"><span >Mapping function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"><span >Mapped sequence</span></div></div></div><div style="display:none" id="code-Select_B_Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="SelectMany&lt;B, C>"></a>SelectMany&lt;B, C&gt;(Func&lt;A, Seq&lt;B&gt;&gt;, Func&lt;A, B, C&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_B_C_Func_A_Seq&lt;B>_bind__Func_A_B_C_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind (flatmap) of the sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div><div class="arg-desc"><span >Bind function</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">C</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Seq</span>&lt;<span class="ident">B</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">C</span>&gt;</div><div class="normal"><span >Flatmapped sequence</span></div></div></div><div style="display:none" id="code-SelectMany_B_C_Func_A_Seq&lt;B>_bind__Func_A_B_C_project_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Skip"></a>Skip(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Skip__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Skip count items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Skip</span>(<span class="keyword">int</span> count)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Skip__int__count_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Take"></a>Take(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Take__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Take count items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Take</span>(<span class="keyword">int</span> count)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Take__int__count_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="TakeWhile"></a>TakeWhile(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TakeWhile__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the sequence, yielding items if they match the predicate  provided, and stopping as soon as one doesn&#39;t </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TakeWhile</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >A new sequence with the first items that match the  predicate</span></div></div></div><div style="display:none" id="code-TakeWhile__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="TakeWhile"></a>TakeWhile(Func&lt;A, int, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TakeWhile__Func_A_int_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the sequence, yielding items if they match the predicate  provided, and stopping as soon as one doesn&#39;t.  An index value is  also provided to the predicate function. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">int</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TakeWhile</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">int</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >A new sequence with the first items that match the  predicate</span></div></div></div><div style="display:none" id="code-TakeWhile__Func_A_int_bool_pred_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Where"></a>Where(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where__Func_A_bool_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the items in the sequence </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate to apply to the items</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">private</span> <span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Where</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Filtered sequence</span></div></div></div><div style="display:none" id="code-Where__Func_A_bool_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div></div></body></html>