<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Arr_A.htm">Arr&lt;A&gt;</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#Arr">Arr(IEnumerable&lt;A&gt;)</a><h3 >FIELDS</h3><a class="nav-link" href="#Empty">Empty</a><h3 >PROPERTIES</h3><a class="nav-link" href="#Count">Count</a><a class="nav-link" href="#IsEmpty">IsEmpty</a><a class="nav-link" href="#this">this</a><h3 >METHODS</h3><a class="nav-link" href="#Add">Add(A)</a><a class="nav-link" href="#AddRange">AddRange(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Append">Append(Arr&lt;A&gt;)</a><a class="nav-link" href="#Clear">Clear()</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#Equals">Equals(Lst&lt;A&gt;)</a><a class="nav-link" href="#Filter">Filter(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#GetEnumerator">GetEnumerator()</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#IndexOf">IndexOf(A, int, int, IEqualityComparer&lt;A&gt;)</a><a class="nav-link" href="#IndexOf&lt;EQ>">IndexOf&lt;EQ&gt;(A, int, int)</a><a class="nav-link" href="#Insert">Insert(int, A)</a><a class="nav-link" href="#InsertRange">InsertRange(int, IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#LastIndexOf">LastIndexOf(A, int, int, IEqualityComparer&lt;A&gt;)</a><a class="nav-link" href="#LastIndexOf&lt;EQ>">LastIndexOf&lt;EQ&gt;(A, int, int)</a><a class="nav-link" href="#Map&lt;B>">Map&lt;B&gt;(Func&lt;A, B&gt;)</a><a class="nav-link" href="#Remove">Remove(A)</a><a class="nav-link" href="#Remove">Remove(A, IEqualityComparer&lt;A&gt;)</a><a class="nav-link" href="#Remove&lt;EQ>">Remove&lt;EQ&gt;(A)</a><a class="nav-link" href="#RemoveAll">RemoveAll(Predicate&lt;A&gt;)</a><a class="nav-link" href="#RemoveAt">RemoveAt(int)</a><a class="nav-link" href="#RemoveRange">RemoveRange(int, int)</a><a class="nav-link" href="#Reverse">Reverse()</a><a class="nav-link" href="#SetItem">SetItem(int, A)</a><a class="nav-link" href="#Skip">Skip(int)</a></div><div class="content-panel"><h1 >Arr&lt;A&gt; Struct</h1><p ><span >Immutable array Native array O(1) read performance.  Modifications require copying of the entire  array to generate the newly mutated version.  This is will be very expensive  for large arrays. </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Serializable]</div><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IReadOnlyList</span>&lt;<span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IReadOnlyCollection</span>&lt;<span class="ident">A</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Constructors</h2><div class="member-title"><a name="Arr"></a>Arr(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Arr__IEnumerable_A_initial_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Ctor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">initial</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">Arr</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; initial)</div></div><div style="display:none" id="code-Arr__IEnumerable_A_initial_"><div class="section_title">SOURCE</div><div class="code">
            hashCode = 0;
            value = initial.ToArray();
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="Empty"></a>Empty</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Empty array </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Empty</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="Count"></a>Count</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the array </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsEmpty"></a>IsEmpty</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsEmpty</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="this"></a>this</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Index accessor </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">A</span> <span class="keyword">this</span> [<span class="keyword">int</span> index] { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Add"></a>Add(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Add__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Add an item to the end of the array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Add</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Add__A__value_"><div class="section_title">SOURCE</div><div class="code">
            var self = Value;
            if (self.Length == 0)
            {
                return new Arr&lt;A&gt;(new[] { value });
            }
            return Insert(self.Length, value);
        </div></div></div><div class="member-title"><a name="AddRange"></a>AddRange(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddRange__IEnumerable_A_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Add a range of items to the end of the array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AddRange</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddRange__IEnumerable_A_items_"><div class="section_title">SOURCE</div><div class="code">
            InsertRange(Count, items)</div></div></div><div class="member-title"><a name="Append"></a>Append(Arr&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Append__Arr_A_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Append</span>(<span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Append__Arr_A_rhs_"><div class="section_title">SOURCE</div><div class="code">
            rhs.InsertRange(0, this)</div></div></div><div class="member-title"><a name="Clear"></a>Clear()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Clear__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Clear the array </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Clear</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Clear__"><div class="section_title">SOURCE</div><div class="code">
            Empty</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            obj is Arr&lt;A&gt; &amp;&amp; Equals((Arr&lt;A&gt;)obj)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(Lst&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__Lst_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">Lst</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">Lst</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__Lst_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other.Value)</div></div></div><div class="member-title"><a name="Filter"></a>Filter(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Filter</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Filter__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            RemoveAll(x =&gt; !pred(x))</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_S__state__Func_S_A_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fold </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_S_S__state__Func_S_A_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            foreach(var item in Value)
            {
                state = folder(state, item);
            }
            return state;
        </div></div></div><div class="member-title"><a name="GetEnumerator"></a>GetEnumerator()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetEnumerator__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get enumerator </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IEnumerator</span>&lt;<span class="ident">A</span>&gt; <span class="ident">GetEnumerator</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerator</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetEnumerator__"><div class="section_title">SOURCE</div><div class="code">
            Value.AsEnumerable().GetEnumerator()</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get the hash code Lazily (and once only) calculates the hash from the elements in the array Empty array hash == 0 </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            hashCode == 0
                ? hashCode = hash(Value)
                : hashCode</div></div></div><div class="member-title"><a name="IndexOf"></a>IndexOf(A, int, int, IEqualityComparer&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IndexOf__A__item__int__index__int__count__IEqualityComparer_A_equalityComparer_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the index of an item </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">equalityComparer</div><div class="arg-type"><span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">IndexOf</span>(<span class="ident">A</span> item, <span class="keyword">int</span> index = 0, <span class="keyword">int</span> count = -1, <span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt; equalityComparer = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IndexOf__A__item__int__index__int__count__IEqualityComparer_A_equalityComparer_"><div class="section_title">SOURCE</div><div class="code">
            var eq = equalityComparer ?? EqualityComparer&lt;A&gt;.Default;

            var arr = Value;
            for (; index &gt;=0 &amp;&amp; index &lt; arr.Length &amp;&amp; count != 0; index++, count--)
            {
                if (eq.Equals(item, arr[index])) return index;
            }
            return -1;
        </div></div></div><div class="member-title"><a name="IndexOf&lt;EQ>"></a>IndexOf&lt;EQ&gt;(A, int, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IndexOf_EQ_A__item__int__index__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the index of an item </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">IndexOf</span>&lt;<span class="ident">EQ</span>&gt;(<span class="ident">A</span> item, <span class="keyword">int</span> index = 0, <span class="keyword">int</span> count = -1)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">EQ</span> : <span class="keyword">struct</span> <span class="ident">Eq</span>&lt;<span class="ident">A</span>&gt;</div></div><div style="display:none" id="code-IndexOf_EQ_A__item__int__index__int__count_"><div class="section_title">SOURCE</div><div class="code">
            var eq = default(EQ);

            var arr = Value;
            for (; index &lt; arr.Length &amp;&amp; count != 0; index++, count--)
            {
                if (eq.Equals(item, arr[index])) return index;
            }
            return -1;
        </div></div></div><div class="member-title"><a name="Insert"></a>Insert(int, A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Insert__int__index__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Insert value at specified index </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Insert</span>(<span class="keyword">int</span> index, <span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Insert__int__index__A__value_"><div class="section_title">SOURCE</div><div class="code">
            var arr = Value;
            if (index &lt; 0 || index &gt; Count) throw new IndexOutOfRangeException(nameof(index));
            if (arr.Length == 0)
            {
                return new Arr&lt;A&gt;(new A[1] { value });
            }

            A[] xs = new A[arr.Length + 1];
            xs[index] = value;

            if (index != 0)
            {
                System.Array.Copy(arr, 0, xs, 0, index);
            }
            if (index != arr.Length)
            {
                System.Array.Copy(arr, index, xs, index + 1, arr.Length - index);
            }
            return new Arr&lt;A&gt;(xs);
        </div></div></div><div class="member-title"><a name="InsertRange"></a>InsertRange(int, IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-InsertRange__int__index__IEnumerable_A_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Insert range of values at specified index </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">InsertRange</span>(<span class="keyword">int</span> index, <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-InsertRange__int__index__IEnumerable_A_items_"><div class="section_title">SOURCE</div><div class="code">
            items = items ?? new A[0];
            var arr = Value;
            if( index &lt; 0 || index &gt; arr.Length) throw new IndexOutOfRangeException(nameof(index));

            if (arr.Length == 0)
            {
                return new Arr&lt;A&gt;(items);
            }

            var insertArr = items.ToArray();

            int count = insertArr.Length;
            if (count == 0)
            {
                return this;
            }

            A[] newArray = new A[arr.Length + count];

            if (index != 0)
            {
                System.Array.Copy(arr, 0, newArray, 0, index);
            }
            if (index != arr.Length)
            {
                System.Array.Copy(arr, index, newArray, index + count, arr.Length - index);
            }
            insertArr.CopyTo(newArray, index);

            return new Arr&lt;A&gt;(newArray);
        </div></div></div><div class="member-title"><a name="LastIndexOf"></a>LastIndexOf(A, int, int, IEqualityComparer&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LastIndexOf__A__item__int__index__int__count__IEqualityComparer_A_equalityComparer_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the index of an item </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">equalityComparer</div><div class="arg-type"><span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">LastIndexOf</span>(<span class="ident">A</span> item, <span class="keyword">int</span> index = -1, <span class="keyword">int</span> count = -1, <span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt; equalityComparer = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-LastIndexOf__A__item__int__index__int__count__IEqualityComparer_A_equalityComparer_"><div class="section_title">SOURCE</div><div class="code">
            var eq = equalityComparer ?? EqualityComparer&lt;A&gt;.Default;

            var arr = Value;
            index = index &lt; 0 ? arr.Length - 1 : index;

            for (; index &gt;= 0 &amp;&amp; index &lt; arr.Length &amp;&amp; count != 0; index--, count--)
            {
                if (eq.Equals(item, arr[index])) return index;
            }
            return -1;
        </div></div></div><div class="member-title"><a name="LastIndexOf&lt;EQ>"></a>LastIndexOf&lt;EQ&gt;(A, int, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LastIndexOf_EQ_A__item__int__index__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find the index of an item </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">item</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">LastIndexOf</span>&lt;<span class="ident">EQ</span>&gt;(<span class="ident">A</span> item, <span class="keyword">int</span> index = -1, <span class="keyword">int</span> count = -1)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">EQ</span> : <span class="keyword">struct</span> <span class="ident">Eq</span>&lt;<span class="ident">A</span>&gt;</div></div><div style="display:none" id="code-LastIndexOf_EQ_A__item__int__index__int__count_"><div class="section_title">SOURCE</div><div class="code">
            var eq = default(EQ);

            var arr = Value;
            index = index &lt; 0 ? arr.Length - 1 : index;

            for (; index &gt;= 0 &amp;&amp; index &lt; arr.Length &amp;&amp; count != 0; index--, count--)
            {
                if (eq.Equals(item, arr[index])) return index;
            }
            return -1;
        </div></div></div><div class="member-title"><a name="Map&lt;B>"></a>Map&lt;B&gt;(Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_B_Func_A_B_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_B_Func_A_B_map_"><div class="section_title">SOURCE</div><div class="code">
            var arr = Value;
            var length = arr.Length;
            var newArray = new B[length];
            for(var i = 0; i &lt; length; i++)
            {
                newArray[i] = map(arr[i]);
            }
            return new Arr&lt;B&gt;(newArray);
        </div></div></div><div class="member-title"><a name="Remove"></a>Remove(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove an item from the array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Remove</span>(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove__A__value_"><div class="section_title">SOURCE</div><div class="code">
            Remove&lt;EqDefault&lt;A&gt;&gt;(value)</div></div></div><div class="member-title"><a name="Remove"></a>Remove(A, IEqualityComparer&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove__A__value__IEqualityComparer_A_equalityComparer_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove an item from the array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">equalityComparer</div><div class="arg-type"><span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Remove</span>(<span class="ident">A</span> value, <span class="ident">IEqualityComparer</span>&lt;<span class="ident">A</span>&gt; equalityComparer)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove__A__value__IEqualityComparer_A_equalityComparer_"><div class="section_title">SOURCE</div><div class="code">
            int index = IndexOf(value, 0, -1, equalityComparer);
            return index &lt; 0
                ? this
                : RemoveAt(index);
        </div></div></div><div class="member-title"><a name="Remove&lt;EQ>"></a>Remove&lt;EQ&gt;(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove_EQ_A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove an item from the array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Remove</span>&lt;<span class="ident">EQ</span>&gt;(<span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">EQ</span> : <span class="keyword">struct</span> <span class="ident">Eq</span>&lt;<span class="ident">A</span>&gt;</div></div><div style="display:none" id="code-Remove_EQ_A__value_"><div class="section_title">SOURCE</div><div class="code">
            int index = IndexOf&lt;EQ&gt;(value);
            return index &lt; 0
                ? this
                : RemoveAt(index);
        </div></div></div><div class="member-title"><a name="RemoveAll"></a>RemoveAll(Predicate&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RemoveAll__Predicate_A_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove all items that match a predicate </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Predicate</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">RemoveAll</span>(<span class="ident">Predicate</span>&lt;<span class="ident">A</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-RemoveAll__Predicate_A_pred_"><div class="section_title">SOURCE</div><div class="code">
            var self = Value;
            pred = pred ?? (_ =&gt; true);
            if (IsEmpty) return this;

            List&lt;int&gt; removeIndices = null;
            for (int i = 0; i &lt; self.Length; i++)
            {
                if (pred(self[i]))
                {
                    if (removeIndices == null)
                    {
                        removeIndices = new List&lt;int&gt;();
                    }
                    removeIndices.Add(i);
                }
            }

            return removeIndices != null 
                ? RemoveAtRange(removeIndices) 
                : this;
        </div></div></div><div class="member-title"><a name="RemoveAt"></a>RemoveAt(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RemoveAt__int__index_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove item at location </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div><div class="arg-desc"><span ></span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">RemoveAt</span>(<span class="keyword">int</span> index)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span ></span></div></div></div><div style="display:none" id="code-RemoveAt__int__index_"><div class="section_title">SOURCE</div><div class="code">
            RemoveRange(index, 1)</div></div></div><div class="member-title"><a name="RemoveRange"></a>RemoveRange(int, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RemoveRange__int__index__int__count_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Remove a range of items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">count</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">RemoveRange</span>(<span class="keyword">int</span> index, <span class="keyword">int</span> count)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-RemoveRange__int__index__int__count_"><div class="section_title">SOURCE</div><div class="code">
            var arr = Value;
            if( index &lt; 0 || index &gt; arr.Length) throw new IndexOutOfRangeException(nameof(index));
            if (!(count &gt;= 0 &amp;&amp; index + count &lt;= arr.Length)) throw new IndexOutOfRangeException(nameof(index));
            if (count == 0) return this;

            A[] newArray = new A[arr.Length - count];
            System.Array.Copy(arr, 0, newArray, 0, index);
            System.Array.Copy(arr, index + count, newArray, index, arr.Length - index - count);
            return new Arr&lt;A&gt;(newArray);
        </div></div></div><div class="member-title"><a name="Reverse"></a>Reverse()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Reverse__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Reverse the order of the items in the array </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Reverse</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Reverse__"><div class="section_title">SOURCE</div><div class="code">
            new Arr&lt;A&gt;(Value.Reverse().ToArray())</div></div></div><div class="member-title"><a name="SetItem"></a>SetItem(int, A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItem__int__index__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Set an item at the specified index </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt; <span class="ident">SetItem</span>(<span class="keyword">int</span> index, <span class="ident">A</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItem__int__index__A__value_"><div class="section_title">SOURCE</div><div class="code">
            var arr = Value;
            if (index &lt; 0 || index &gt;= arr.Length) throw new IndexOutOfRangeException(nameof(index));

            var newArray = new A[Count];
            arr.CopyTo(newArray, 0);
            newArray[index] = value;
            return new Arr&lt;A&gt;(newArray);
        </div></div></div><div class="member-title"><a name="Skip"></a>Skip(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Skip__int__amount_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">amount</div><div class="arg-type"><span class="keyword">int</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Skip</span>(<span class="keyword">int</span> amount)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Skip__int__amount_"><div class="section_title">SOURCE</div><div class="code">
            Value.Skip(amount)</div></div></div></div></body></html>