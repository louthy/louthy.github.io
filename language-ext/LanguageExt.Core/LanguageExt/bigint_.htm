<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="bigint_.htm">bigint</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#bigint">bigint(BigInteger)</a><a class="nav-link" href="#bigint">bigint(byte)</a><a class="nav-link" href="#bigint">bigint(decimal)</a><a class="nav-link" href="#bigint">bigint(double)</a><a class="nav-link" href="#bigint">bigint(int)</a><a class="nav-link" href="#bigint">bigint(long)</a><a class="nav-link" href="#bigint">bigint(float)</a><a class="nav-link" href="#bigint">bigint(uint)</a><a class="nav-link" href="#bigint">bigint(ulong)</a><h3 >FIELDS</h3><a class="nav-link" href="#MinusOne">MinusOne</a><a class="nav-link" href="#One">One</a><a class="nav-link" href="#Value">Value</a><a class="nav-link" href="#Zero">Zero</a><h3 >PROPERTIES</h3><a class="nav-link" href="#IsEven">IsEven</a><a class="nav-link" href="#IsOne">IsOne</a><a class="nav-link" href="#IsPowerOfTwo">IsPowerOfTwo</a><a class="nav-link" href="#IsZero">IsZero</a><a class="nav-link" href="#Sign">Sign</a><h3 >METHODS</h3><a class="nav-link" href="#Abs">Abs(bigint)</a><a class="nav-link" href="#Add">Add(bigint, bigint)</a><a class="nav-link" href="#Compare">Compare(bigint, bigint)</a><a class="nav-link" href="#CompareTo">CompareTo(long)</a><a class="nav-link" href="#CompareTo">CompareTo(ulong)</a><a class="nav-link" href="#CompareTo">CompareTo(BigInteger)</a><a class="nav-link" href="#CompareTo">CompareTo(bigint)</a><a class="nav-link" href="#Divide">Divide(bigint, bigint)</a><a class="nav-link" href="#DivRem">DivRem(bigint, bigint)</a><a class="nav-link" href="#Equals">Equals(long)</a><a class="nav-link" href="#Equals">Equals(BigInteger)</a><a class="nav-link" href="#Equals">Equals(bigint)</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#Equals">Equals(ulong)</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#GreatestCommonDivisor">GreatestCommonDivisor(bigint, bigint)</a><a class="nav-link" href="#Log">Log(bigint)</a><a class="nav-link" href="#Log">Log(bigint, double)</a><a class="nav-link" href="#Log10">Log10(bigint)</a><a class="nav-link" href="#Max">Max(bigint, bigint)</a><a class="nav-link" href="#Min">Min(bigint, bigint)</a><a class="nav-link" href="#ModPow">ModPow(bigint, bigint, bigint)</a><a class="nav-link" href="#Multiply">Multiply(bigint, bigint)</a><a class="nav-link" href="#Negate">Negate(bigint)</a><a class="nav-link" href="#Parse">Parse(string, NumberStyles)</a><a class="nav-link" href="#Parse">Parse(string, IFormatProvider)</a><a class="nav-link" href="#Parse">Parse(string)</a><a class="nav-link" href="#Parse">Parse(string, NumberStyles, IFormatProvider)</a><a class="nav-link" href="#Pow">Pow(bigint, int)</a><a class="nav-link" href="#Remainder">Remainder(bigint, bigint)</a><a class="nav-link" href="#Subtract">Subtract(bigint, bigint)</a><a class="nav-link" href="#ToByteArray">ToByteArray()</a><a class="nav-link" href="#ToString">ToString()</a><a class="nav-link" href="#ToString">ToString(string)</a><a class="nav-link" href="#ToString">ToString(IFormatProvider)</a><a class="nav-link" href="#ToString">ToString(string, IFormatProvider)</a><a class="nav-link" href="#TryParse">TryParse(string, NumberStyles, IFormatProvider)</a><a class="nav-link" href="#TryParse">TryParse(string)</a></div><div class="content-panel"><h1 >bigint Struct</h1><p ><span >BigInteger convenience wrapper </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">bigint</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Constructors</h2><div class="member-title"><a name="bigint"></a>bigint(BigInteger)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__BigInteger__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of bigint structure using provided BigInteger value. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">BigInteger</span></div></div><div class="arg-desc"><span >A big integer value to initialise this structure with</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="ident">BigInteger</span> value)</div></div><div style="display:none" id="code-bigint__BigInteger__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = value;
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(byte)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__byte__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using the values in a byte array.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">byte</span></div></div></div><div class="section_title">REMARKS</div><span >value: An array of byte values in little-endian order.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">byte</span> value)</div></div><div style="display:none" id="code-bigint__byte__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(decimal)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__decimal__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using a System.Decimal value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">decimal</span></div></div></div><div class="section_title">REMARKS</div><span >value: A decimal number. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">decimal</span> value)</div></div><div style="display:none" id="code-bigint__decimal__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(double)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__double__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using a double-precision floating-point value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">double</span></div></div></div><div class="section_title">REMARKS</div><span >value: A double-precision floating-point value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">double</span> value)</div></div><div style="display:none" id="code-bigint__double__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__int__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using a 32-bit signed integer value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="section_title">REMARKS</div><span >value: A 32-bit signed integer. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">int</span> value)</div></div><div style="display:none" id="code-bigint__int__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(long)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__long__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using a 64-bit signed integer value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">long</span></div></div></div><div class="section_title">REMARKS</div><span >value: A 64-bit signed integer. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">long</span> value)</div></div><div style="display:none" id="code-bigint__long__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(float)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__float__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using a single-precision floating-point value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">float</span></div></div></div><div class="section_title">REMARKS</div><span >value: A single-precision floating-point value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">float</span> value)</div></div><div style="display:none" id="code-bigint__float__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(uint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__uint__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure using an unsigned 32-bit integer value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">uint</span></div></div></div><div class="section_title">REMARKS</div><span >value: An unsigned 32-bit integer value. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">uint</span> value)</div></div><div style="display:none" id="code-bigint__uint__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><div class="member-title"><a name="bigint"></a>bigint(ulong)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-bigint__ulong__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Initializes a new instance of the bigint structure with an unsigned 64-bit integer value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">ulong</span></div></div></div><div class="section_title">REMARKS</div><span >value: An unsigned 64-bit integer. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">bigint</span>(<span class="keyword">ulong</span> value)</div></div><div style="display:none" id="code-bigint__ulong__value_"><div class="section_title">SOURCE</div><div class="code">
            Value = new BigInteger(value);
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="MinusOne"></a>MinusOne</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">bigint</span> <span class="ident">MinusOne</span></div></div></div><div class="member-title"><a name="One"></a>One</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">bigint</span> <span class="ident">One</span></div></div></div><div class="member-title"><a name="Value"></a>Value</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="ident">BigInteger</span> <span class="ident">Value</span></div></div></div><div class="member-title"><a name="Zero"></a>Zero</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Zero</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="IsEven"></a>IsEven</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsEven</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsOne"></a>IsOne</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsOne</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsPowerOfTwo"></a>IsPowerOfTwo</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsPowerOfTwo</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsZero"></a>IsZero</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsZero</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Sign"></a>Sign</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Sign</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Abs"></a>Abs(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Abs__bigint__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Gets the absolute value of a bigint object.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >value: A number.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Abs</span>(<span class="ident">bigint</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The absolute value of value. </span></div></div></div><div style="display:none" id="code-Abs__bigint__value_"><div class="section_title">SOURCE</div><div class="code"> 
            new bigint(BigInteger.Abs(value.Value))</div></div></div><div class="member-title"><a name="Add"></a>Add(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Add__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Adds two bigint values and returns the result.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first value to add.<br/><br/> right: The second value to add.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Add</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The sum of left and right. </span></div></div></div><div style="display:none" id="code-Add__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.Add(left.Value, right.Value)</div></div></div><div class="member-title"><a name="Compare"></a>Compare(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Compare__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compares two bigint values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first value to compare.<br/><br/> right: The second value to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Compare</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A signed integer that indicates the relative values of left and right, as shown in the following table.ValueConditionLess than zeroleft is less than right.Zeroleft equals right.Greater than zeroleft is greater than right. </span></div></div></div><div style="display:none" id="code-Compare__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            left.Value.CompareTo(right.Value)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(long)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__long__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="keyword">long</span></div></div></div><div class="section_title">REMARKS</div><span >other: The signed 64-bit integer to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="keyword">long</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A signed integer value that indicates the relationship of this instance to other, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than other.ZeroThe current instance equals other.Greater than zeroThe current instance is greater than other. </span></div></div></div><div style="display:none" id="code-CompareTo__long__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.CompareTo(other)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(ulong)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__ulong__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="keyword">ulong</span></div></div></div><div class="section_title">REMARKS</div><span >other: The unsigned 64-bit integer to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="keyword">ulong</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A signed integer that indicates the relative value of this instance and other, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than other.ZeroThe current instance equals other.Greater than zeroThe current instance is greater than other. </span></div></div></div><div style="display:none" id="code-CompareTo__ulong__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.CompareTo(other)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(BigInteger)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__BigInteger__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compares this instance to a second bigint and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">BigInteger</span></div></div></div><div class="section_title">REMARKS</div><span >other: The object to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">BigInteger</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A signed integer value that indicates the relationship of this instance to other, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than other.ZeroThe current instance equals other.Greater than zeroThe current instance is greater than other. </span></div></div></div><div style="display:none" id="code-CompareTo__BigInteger__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.CompareTo(other)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__bigint__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Compares this instance to a second bigint and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >other: The object to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">bigint</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >A signed integer value that indicates the relationship of this instance to other, as shown in the following table.Return valueDescriptionLess than zeroThe current instance is less than other.ZeroThe current instance equals other.Greater than zeroThe current instance is greater than other. </span></div></div></div><div style="display:none" id="code-CompareTo__bigint__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.CompareTo(other.Value)</div></div></div><div class="member-title"><a name="Divide"></a>Divide(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Divide__bigint__dividend__bigint__divisor_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divides one bigint value by another and returns the result.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">dividend</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">divisor</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >dividend: The value to be divided.<br/><br/> divisor: The value to divide by.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Divide</span>(<span class="ident">bigint</span> dividend, <span class="ident">bigint</span> divisor)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The quotient of the division.<br/><br/> </span></div></div></div><div style="display:none" id="code-Divide__bigint__dividend__bigint__divisor_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.Divide(dividend.Value, divisor.Value)</div></div></div><div class="member-title"><a name="DivRem"></a>DivRem(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-DivRem__bigint__dividend__bigint__divisor_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Divides one bigint value by another, returns the quotient and remainder.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">dividend</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">divisor</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >dividend: The value to be divided.<br/><br/> divisor: The value to divide by.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">ValueTuple</span>&lt;<span class="ident">bigint</span>, <span class="ident">bigint</span>&gt; <span class="ident">DivRem</span>(<span class="ident">bigint</span> dividend, <span class="ident">bigint</span> divisor)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">ValueTuple</span>&lt;<span class="ident">bigint</span>, <span class="ident">bigint</span>&gt;</div><div class="normal"><span >The quotient and remainder of the division as a tuple<br/><br/> </span></div></div></div><div style="display:none" id="code-DivRem__bigint__dividend__bigint__divisor_"><div class="section_title">SOURCE</div><div class="code">
            var res = BigInteger.DivRem(dividend.Value, divisor.Value, out BigInteger rem);
            return (new bigint(res), new bigint(rem));
        </div></div></div><div class="member-title"><a name="Equals"></a>Equals(long)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__long__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="keyword">long</span></div></div></div><div class="section_title">REMARKS</div><span >other: The signed 64-bit integer value to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">long</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >true if the signed 64-bit integer and the current instance have the same value; otherwise, false. </span></div></div></div><div style="display:none" id="code-Equals__long__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(BigInteger)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__BigInteger__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a value that indicates whether the current instance and a specified bigint object have the same value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">BigInteger</span></div></div></div><div class="section_title">REMARKS</div><span >other: The object to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">BigInteger</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >true if this bigint object and other have the same value; otherwise, false. </span></div></div></div><div style="display:none" id="code-Equals__BigInteger__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__bigint__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a value that indicates whether the current instance and a specified bigint object have the same value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >other: The object to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">bigint</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >true if this bigint object and other have the same value; otherwise, false. </span></div></div></div><div style="display:none" id="code-Equals__bigint__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other.Value)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a value that indicates whether the current instance and a specified object have the same value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div><div class="section_title">REMARKS</div><span >obj: The object to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >true if the obj parameter is a bigint object or a type capable of implicit conversion to a bigint value, and its value is equal to the value of the current bigint object; otherwise, false. </span></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(obj)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(ulong)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__ulong__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="keyword">ulong</span></div></div></div><div class="section_title">REMARKS</div><span >other: The unsigned 64-bit integer to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">ulong</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >true if the current instance and the unsigned 64-bit integer have the same value; otherwise, false. </span></div></div></div><div style="display:none" id="code-Equals__ulong__other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other)</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            Value.GetHashCode()</div></div></div><div class="member-title"><a name="GreatestCommonDivisor"></a>GreatestCommonDivisor(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GreatestCommonDivisor__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Finds the greatest common divisor of two bigint values.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first value.<br/><br/> right: The second value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">GreatestCommonDivisor</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The greatest common divisor of left and right. </span></div></div></div><div style="display:none" id="code-GreatestCommonDivisor__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.GreatestCommonDivisor(left.Value, right.Value))</div></div></div><div class="member-title"><a name="Log"></a>Log(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Log__bigint__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the natural (base e) logarithm of a specified number.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >value: The number whose logarithm is to be found.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="ident">Log</span>(<span class="ident">bigint</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">double</span></div><div class="normal"><span >The natural (base e) logarithm of value, as shown in the table in the Remarks section.<br/><br/> </span></div></div></div><div style="display:none" id="code-Log__bigint__value_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.Log(value.Value)</div></div></div><div class="member-title"><a name="Log"></a>Log(bigint, double)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Log__bigint__value__double__baseValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the logarithm of a specified number in a specified base.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">baseValue</div><div class="arg-type"><span class="keyword">double</span></div></div></div><div class="section_title">REMARKS</div><span >value: A number whose logarithm is to be found.<br/><br/> baseValue: The base of the logarithm.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="ident">Log</span>(<span class="ident">bigint</span> value, <span class="keyword">double</span> baseValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">double</span></div><div class="normal"><span >The base baseValue logarithm of value, as shown in the table in the Remarks section.<br/><br/> </span></div></div></div><div style="display:none" id="code-Log__bigint__value__double__baseValue_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.Log(value.Value, baseValue)</div></div></div><div class="member-title"><a name="Log10"></a>Log10(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Log10__bigint__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the base 10 logarithm of a specified number.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >value: A number whose logarithm is to be found.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="ident">Log10</span>(<span class="ident">bigint</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">double</span></div><div class="normal"><span >The base 10 logarithm of value, as shown in the table in the Remarks section.<br/><br/> </span></div></div></div><div style="display:none" id="code-Log10__bigint__value_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.Log10(value.Value)</div></div></div><div class="member-title"><a name="Max"></a>Max(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Max__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the larger of two bigint values.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first value to compare.<br/><br/> right: The second value to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Max</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The left or right parameter, whichever is larger. </span></div></div></div><div style="display:none" id="code-Max__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Max(left.Value, right.Value))</div></div></div><div class="member-title"><a name="Min"></a>Min(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Min__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the smaller of two bigint values.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first value to compare.<br/><br/> right: The second value to compare.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Min</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The left or right parameter, whichever is smaller. </span></div></div></div><div style="display:none" id="code-Min__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Min(left.Value, right.Value))</div></div></div><div class="member-title"><a name="ModPow"></a>ModPow(bigint, bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ModPow__bigint__value__bigint__exponent__bigint__modulus_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Performs modulus division on a number raised to the power of another number.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">exponent</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">modulus</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >value: The number to raise to the exponent power.<br/><br/> exponent: The exponent to raise value by.<br/><br/> modulus: The number by which to divide value raised to the exponent power.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">ModPow</span>(<span class="ident">bigint</span> value, <span class="ident">bigint</span> exponent, <span class="ident">bigint</span> modulus)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The remainder after dividing valueexponent by modulus.<br/><br/> </span></div></div></div><div style="display:none" id="code-ModPow__bigint__value__bigint__exponent__bigint__modulus_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.ModPow(value.Value, exponent.Value, modulus.Value))</div></div></div><div class="member-title"><a name="Multiply"></a>Multiply(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Multiply__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the product of two bigint values.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The first number to multiply.<br/><br/> right: The second number to multiply.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Multiply</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The product of the left and right parameters. </span></div></div></div><div style="display:none" id="code-Multiply__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Multiply(left.Value, right.Value))</div></div></div><div class="member-title"><a name="Negate"></a>Negate(bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Negate__bigint__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Negates a specified bigint value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >value: The value to negate.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Negate</span>(<span class="ident">bigint</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The result of the value parameter multiplied by negative one (-1). </span></div></div></div><div style="display:none" id="code-Negate__bigint__value_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Negate(value.Value))</div></div></div><div class="member-title"><a name="Parse"></a>Parse(string, NumberStyles)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Parse__string__value__NumberStyles__style_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the string representation of a number in a specified style to its bigint equivalent.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">style</div><div class="arg-type"><span class="ident">NumberStyles</span></div></div></div><div class="section_title">REMARKS</div><span >value: A string that contains a number to convert.<br/><br/> style: A bitwise combination of the enumeration values that specify the permitted format of value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Parse</span>(<span class="keyword">string</span> value, <span class="ident">NumberStyles</span> style)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >A value that is equivalent to the number specified in the value parameter.<br/><br/> </span></div></div></div><div style="display:none" id="code-Parse__string__value__NumberStyles__style_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Parse(value, style))</div></div></div><div class="member-title"><a name="Parse"></a>Parse(string, IFormatProvider)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Parse__string__value__IFormatProvider__provider_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the string representation of a number in a specified culture-specific format to its bigint equivalent.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">provider</div><div class="arg-type"><span class="ident">IFormatProvider</span></div></div></div><div class="section_title">REMARKS</div><span >value: A string that contains a number to convert.<br/><br/> provider: An object that provides culture-specific formatting information about value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Parse</span>(<span class="keyword">string</span> value, <span class="ident">IFormatProvider</span> provider)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >A value that is equivalent to the number specified in the value parameter.<br/><br/> </span></div></div></div><div style="display:none" id="code-Parse__string__value__IFormatProvider__provider_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Parse(value, provider))</div></div></div><div class="member-title"><a name="Parse"></a>Parse(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Parse__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the string representation of a number to its bigint equivalent.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="section_title">REMARKS</div><span >value: A string that contains the number to convert.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Parse</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >A value that is equivalent to the number specified in the value parameter.<br/><br/> </span></div></div></div><div style="display:none" id="code-Parse__string__value_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Parse(value))</div></div></div><div class="member-title"><a name="Parse"></a>Parse(string, NumberStyles, IFormatProvider)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Parse__string__value__NumberStyles__style__IFormatProvider__provider_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the string representation of a number in a specified style and culture-specific format to its bigint equivalent.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">style</div><div class="arg-type"><span class="ident">NumberStyles</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">provider</div><div class="arg-type"><span class="ident">IFormatProvider</span></div></div></div><div class="section_title">REMARKS</div><span >value: A string that contains a number to convert.<br/><br/> style: A bitwise combination of the enumeration values that specify the permitted format of value.<br/><br/> provider: An object that provides culture-specific formatting information about value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Parse</span>(<span class="keyword">string</span> value, <span class="ident">NumberStyles</span> style, <span class="ident">IFormatProvider</span> provider)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >A value that is equivalent to the number specified in the value parameter.<br/><br/> </span></div></div></div><div style="display:none" id="code-Parse__string__value__NumberStyles__style__IFormatProvider__provider_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Parse(value, style, provider))</div></div></div><div class="member-title"><a name="Pow"></a>Pow(bigint, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Pow__bigint__value__int__exponent_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Raises a bigint value to the power of a specified value.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">exponent</div><div class="arg-type"><span class="keyword">int</span></div></div></div><div class="section_title">REMARKS</div><span >value: The number to raise to the exponent power.<br/><br/> exponent: The exponent to raise value by.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Pow</span>(<span class="ident">bigint</span> value, <span class="keyword">int</span> exponent)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The result of raising value to the exponent power.<br/><br/> </span></div></div></div><div style="display:none" id="code-Pow__bigint__value__int__exponent_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Pow(value.Value, exponent))</div></div></div><div class="member-title"><a name="Remainder"></a>Remainder(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remainder__bigint__dividend__bigint__divisor_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Performs integer division on two bigint values and returns the remainder.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">dividend</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">divisor</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >dividend: The value to be divided.<br/><br/> divisor: The value to divide by.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Remainder</span>(<span class="ident">bigint</span> dividend, <span class="ident">bigint</span> divisor)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The remainder after dividing dividend by divisor.<br/><br/> </span></div></div></div><div style="display:none" id="code-Remainder__bigint__dividend__bigint__divisor_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Remainder(dividend.Value, divisor.Value))</div></div></div><div class="member-title"><a name="Subtract"></a>Subtract(bigint, bigint)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Subtract__bigint__left__bigint__right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Subtracts one bigint value from another and returns the result.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">left</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">bigint</span></div></div></div><div class="section_title">REMARKS</div><span >left: The value to subtract from (the minuend).<br/><br/> right: The value to subtract (the subtrahend).<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">bigint</span> <span class="ident">Subtract</span>(<span class="ident">bigint</span> left, <span class="ident">bigint</span> right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">bigint</span></div><div class="normal"><span >The result of subtracting right from left. </span></div></div></div><div style="display:none" id="code-Subtract__bigint__left__bigint__right_"><div class="section_title">SOURCE</div><div class="code">
            new bigint(BigInteger.Subtract(left.Value, right.Value))</div></div></div><div class="member-title"><a name="ToByteArray"></a>ToByteArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToByteArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">byte</span> <span class="ident">ToByteArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">byte</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ToByteArray__"><div class="section_title">SOURCE</div><div class="code">
            Value.ToByteArray()</div></div></div><div class="member-title"><a name="ToString"></a>ToString()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="ident">ToString</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ToString__"><div class="section_title">SOURCE</div><div class="code">
            Value.ToString()</div></div></div><div class="member-title"><a name="ToString"></a>ToString(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__string__format_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the numeric value of the current bigint object to its equivalent string representation by using the specified format.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">format</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="section_title">REMARKS</div><span >format: A standard or custom numeric format string.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">string</span> <span class="ident">ToString</span>(<span class="keyword">string</span> format)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >The string representation of the current bigint value in the format specified by the format parameter.<br/><br/> </span></div></div></div><div style="display:none" id="code-ToString__string__format_"><div class="section_title">SOURCE</div><div class="code">
            Value.ToString(format)</div></div></div><div class="member-title"><a name="ToString"></a>ToString(IFormatProvider)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__IFormatProvider__provider_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the numeric value of the current bigint object to its equivalent string representation by using the specified culture-specific formatting information.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">provider</div><div class="arg-type"><span class="ident">IFormatProvider</span></div></div></div><div class="section_title">REMARKS</div><span >provider: An object that supplies culture-specific formatting information.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">string</span> <span class="ident">ToString</span>(<span class="ident">IFormatProvider</span> provider)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >The string representation of the current bigint value in the format specified by the provider parameter. </span></div></div></div><div style="display:none" id="code-ToString__IFormatProvider__provider_"><div class="section_title">SOURCE</div><div class="code">
            Value.ToString(provider)</div></div></div><div class="member-title"><a name="ToString"></a>ToString(string, IFormatProvider)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__string__format__IFormatProvider__provider_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Converts the numeric value of the current bigint object to its equivalent string representation by using the specified format and culture-specific format information.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">format</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">provider</div><div class="arg-type"><span class="ident">IFormatProvider</span></div></div></div><div class="section_title">REMARKS</div><span >format: A standard or custom numeric format string.<br/><br/> provider: An object that supplies culture-specific formatting information.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">string</span> <span class="ident">ToString</span>(<span class="keyword">string</span> format, <span class="ident">IFormatProvider</span> provider)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >The string representation of the current bigint value as specified by the format and provider parameters.<br/><br/> </span></div></div></div><div style="display:none" id="code-ToString__string__format__IFormatProvider__provider_"><div class="section_title">SOURCE</div><div class="code">
            Value.ToString(format, provider)</div></div></div><div class="member-title"><a name="TryParse"></a>TryParse(string, NumberStyles, IFormatProvider)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TryParse__string__value__NumberStyles__style__IFormatProvider__provider_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tries to convert the string representation of a number in a specified style and culture-specific format to its bigint equivalent, and returns a value that indicates whether the conversion succeeded.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">style</div><div class="arg-type"><span class="ident">NumberStyles</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">provider</div><div class="arg-type"><span class="ident">IFormatProvider</span></div></div></div><div class="section_title">REMARKS</div><span >value: The string representation of a number. The string is interpreted using the style specified by style.<br/><br/> style: A bitwise combination of enumeration values that indicates the style elements that can be present in value. A typical value to specify is System.Globalization.NumberStyles.Integer.<br/><br/> provider: An object that supplies culture-specific formatting information about value.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">bigint</span>&gt; <span class="ident">TryParse</span>(<span class="keyword">string</span> value, <span class="ident">NumberStyles</span> style, <span class="ident">IFormatProvider</span> provider)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">bigint</span>&gt;</div><div class="normal"><span >Optional value <br/><br/> </span></div></div></div><div style="display:none" id="code-TryParse__string__value__NumberStyles__style__IFormatProvider__provider_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.TryParse(value, style, provider, out BigInteger res)
                ? Some(new bigint(res))
                : None</div></div></div><div class="member-title"><a name="TryParse"></a>TryParse(string)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TryParse__string__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Tries to convert the string representation of a number to its bigint equivalent, and returns a value that indicates whether the conversion succeeded.<br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="keyword">string</span></div></div></div><div class="section_title">REMARKS</div><span >value: The string representation of a number.<br/><br/> </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">bigint</span>&gt; <span class="ident">TryParse</span>(<span class="keyword">string</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">bigint</span>&gt;</div><div class="normal"><span >Optional value <br/><br/> </span></div></div></div><div style="display:none" id="code-TryParse__string__value_"><div class="section_title">SOURCE</div><div class="code">
            BigInteger.TryParse(value, out BigInteger res)
                ? Some(new bigint(res))
                : None</div></div></div></div></body></html>