<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Validation_MonoidFail_FAIL_SUCCESS.htm">Validation&lt;MonoidFail, FAIL, SUCCESS&gt;</span></div><div class="nav-panel"><h3 >PROPERTIES</h3><a class="nav-link" href="#IsFail">IsFail</a><a class="nav-link" href="#IsSuccess">IsSuccess</a><h3 >METHODS</h3><a class="nav-link" href="#BiBind&lt;B>">BiBind&lt;B&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, B&gt;&gt;, Func&lt;FAIL, Validation&lt;MonoidFail, FAIL, B&gt;&gt;)</a><a class="nav-link" href="#BiExists">BiExists(Func&lt;SUCCESS, bool&gt;, Func&lt;FAIL, bool&gt;)</a><a class="nav-link" href="#BiFold&lt;S>">BiFold&lt;S&gt;(S, Func&lt;S, SUCCESS, S&gt;, Func&lt;S, FAIL, S&gt;)</a><a class="nav-link" href="#BiForAll">BiForAll(Func&lt;SUCCESS, bool&gt;, Func&lt;FAIL, bool&gt;)</a><a class="nav-link" href="#BiIter">BiIter(Action&lt;SUCCESS&gt;, Action&lt;FAIL&gt;)</a><a class="nav-link" href="#BiMap&lt;Ret>">BiMap&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)</a><a class="nav-link" href="#Bind&lt;U>">Bind&lt;U&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, U&gt;&gt;)</a><a class="nav-link" href="#CompareTo">CompareTo(Validation&lt;MonoidFail, FAIL, SUCCESS&gt;)</a><a class="nav-link" href="#CompareTo">CompareTo(SUCCESS)</a><a class="nav-link" href="#CompareTo">CompareTo(FAIL)</a><a class="nav-link" href="#Count">Count()</a><a class="nav-link" href="#Disjunction&lt;SUCCESSB>">Disjunction&lt;SUCCESSB&gt;(Validation&lt;MonoidFail, FAIL, SUCCESSB&gt;)</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#Equals">Equals(SUCCESS)</a><a class="nav-link" href="#Equals">Equals(FAIL)</a><a class="nav-link" href="#Equals">Equals(Validation&lt;MonoidFail, FAIL, SUCCESS&gt;)</a><a class="nav-link" href="#Exists">Exists(Func&lt;SUCCESS, bool&gt;)</a><a class="nav-link" href="#Fail">Fail(FAIL)</a><a class="nav-link" href="#FailAsEnumerable">FailAsEnumerable()</a><a class="nav-link" href="#FailToArray">FailToArray()</a><a class="nav-link" href="#FailToList">FailToList()</a><a class="nav-link" href="#FailToSeq">FailToSeq()</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(S, Func&lt;S, SUCCESS, S&gt;)</a><a class="nav-link" href="#ForAll">ForAll(Func&lt;SUCCESS, bool&gt;)</a><a class="nav-link" href="#GetEnumerator">GetEnumerator()</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#IfFail">IfFail(Func&lt;SUCCESS&gt;)</a><a class="nav-link" href="#IfFail">IfFail(Func&lt;FAIL, SUCCESS&gt;)</a><a class="nav-link" href="#IfFail">IfFail(SUCCESS)</a><a class="nav-link" href="#IfFail">IfFail(Action&lt;FAIL&gt;)</a><a class="nav-link" href="#IfSuccess">IfSuccess(Action&lt;SUCCESS&gt;)</a><a class="nav-link" href="#IfSuccess">IfSuccess(FAIL)</a><a class="nav-link" href="#IfSuccess">IfSuccess(Func&lt;FAIL&gt;)</a><a class="nav-link" href="#IfSuccess">IfSuccess(Func&lt;SUCCESS, FAIL&gt;)</a><a class="nav-link" href="#Iter">Iter(Action&lt;SUCCESS&gt;)</a><a class="nav-link" href="#Map&lt;Ret>">Map&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;)</a><a class="nav-link" href="#Match">Match(Action&lt;SUCCESS&gt;, Action&lt;FAIL&gt;)</a><a class="nav-link" href="#Match&lt;Ret>">Match&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)</a><a class="nav-link" href="#MatchAsync&lt;R2>">MatchAsync&lt;R2&gt;(Func&lt;SUCCESS, Task&lt;R2&gt;&gt;, Func&lt;FAIL, R2&gt;)</a><a class="nav-link" href="#MatchAsync&lt;R2>">MatchAsync&lt;R2&gt;(Func&lt;SUCCESS, Task&lt;R2&gt;&gt;, Func&lt;FAIL, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MatchObservable&lt;R2>">MatchObservable&lt;R2&gt;(Func&lt;SUCCESS, IObservable&lt;R2&gt;&gt;, Func&lt;FAIL, R2&gt;)</a><a class="nav-link" href="#MatchObservable&lt;R2>">MatchObservable&lt;R2&gt;(Func&lt;SUCCESS, IObservable&lt;R2&gt;&gt;, Func&lt;FAIL, IObservable&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MatchUnsafe&lt;Ret>">MatchUnsafe&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)</a><a class="nav-link" href="#Select&lt;U>">Select&lt;U&gt;(Func&lt;SUCCESS, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;U, V>">SelectMany&lt;U, V&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, U&gt;&gt;, Func&lt;SUCCESS, U, V&gt;)</a><a class="nav-link" href="#Success">Success(SUCCESS)</a><a class="nav-link" href="#SuccessAsEnumerable">SuccessAsEnumerable()</a><a class="nav-link" href="#SuccessToArray">SuccessToArray()</a><a class="nav-link" href="#SuccessToList">SuccessToList()</a><a class="nav-link" href="#SuccessToSeq">SuccessToSeq()</a><a class="nav-link" href="#ToEither">ToEither()</a><a class="nav-link" href="#ToEitherUnsafe">ToEitherUnsafe()</a><a class="nav-link" href="#ToOption">ToOption()</a><a class="nav-link" href="#ToString">ToString()</a><a class="nav-link" href="#ToTryOption">ToTryOption()</a><h3 >ENUMS</h3><a class="nav-link" href="#StateType">StateType</a></div><div class="content-panel"><h1 >Validation&lt;MonoidFail, FAIL, SUCCESS&gt; Struct</h1><p ><span >Like <span class='code-inline'>Either</span> but collects the failed values </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEnumerable</span>&lt;<span class="ident">ValidationData</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">SUCCESS</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">SUCCESS</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Properties</h2><div class="member-title"><a name="IsFail"></a>IsFail</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsFail</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsSuccess"></a>IsSuccess</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSuccess</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="BiBind&lt;B>"></a>BiBind&lt;B&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, B&gt;&gt;, Func&lt;FAIL, Validation&lt;MonoidFail, FAIL, B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiBind_B_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, B>_Succ__Func_FAIL_Validation&lt;MonoidFail, FAIL, B>_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-bind.  Allows mapping of both monad states </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt; <span class="ident">BiBind</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt;&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-BiBind_B_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, B>_Succ__Func_FAIL_Validation&lt;MonoidFail, FAIL, B>_Fail_"><div class="section_title">SOURCE</div><div class="code">
            IsSuccess
                ? Succ(SuccessValue)
                : Fail(FailValue)</div></div></div><div class="member-title"><a name="BiExists"></a>BiExists(Func&lt;SUCCESS, bool&gt;, Func&lt;FAIL, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiExists__Func_SUCCESS_bool_Success__Func_FAIL_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Validation </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Success predicate</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Fail predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">BiExists</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt; Success, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-BiExists__Func_SUCCESS_bool_Success__Func_FAIL_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            biExists&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Fail, Success)</div></div></div><div class="member-title"><a name="BiFold&lt;S>"></a>BiFold&lt;S&gt;(S, Func&lt;S, SUCCESS, S&gt;, Func&lt;S, FAIL, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFold_S_S__state__Func_S_SUCCESS_S_Success__Func_S_FAIL_S_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Validation types are like lists of 0 or 1 items, and therefore follow the  same rules when folding. <br/><br/> In the case of lists, &#39;Fold&#39;, when applied to a binary operator, a starting value(typically the Fail-identity of the operator), and a list, reduces the list using the binary operator, from Fail to Success: <br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">SUCCESS</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if Validation is in a Success state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FAIL</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if Validation is in a Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">SUCCESS</span>, <span class="ident">S</span>&gt; Success, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">FAIL</span>, <span class="ident">S</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-BiFold_S_S__state__Func_S_SUCCESS_S_Success__Func_S_FAIL_S_Fail_"><div class="section_title">SOURCE</div><div class="code">
            default(FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;).BiFold(this, state, Fail, Success)</div></div></div><div class="member-title"><a name="BiForAll"></a>BiForAll(Func&lt;SUCCESS, bool&gt;, Func&lt;FAIL, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiForAll__Func_SUCCESS_bool_Success__Func_FAIL_bool_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Validation if it&#39;s in the Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">BiForAll</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt; Success, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="keyword">bool</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if Validation Predicate returns true</span></div></div></div><div style="display:none" id="code-BiForAll__Func_SUCCESS_bool_Success__Func_FAIL_bool_Fail_"><div class="section_title">SOURCE</div><div class="code">
            biForAll&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Fail, Success)</div></div></div><div class="member-title"><a name="BiIter"></a>BiIter(Action&lt;SUCCESS&gt;, Action&lt;FAIL&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiIter__Action_SUCCESS_Success__Action_FAIL_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the Validation action is invoked if in the Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">BiIter</span>(<span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt; Success, <span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt; Fail)</div></div><div style="display:none" id="code-BiIter__Action_SUCCESS_Success__Action_FAIL_Fail_"><div class="section_title">SOURCE</div><div class="code">
            biIter&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Fail, Success)</div></div></div><div class="member-title"><a name="BiMap&lt;Ret>"></a>BiMap&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiMap_Ret_Func_SUCCESS_Ret_Success__Func_FAIL_Ret_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the Validation if it&#39;s in a Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Success map function</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Fail map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt; <span class="ident">BiMap</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt; Success, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped Validation</span></div></div></div><div style="display:none" id="code-BiMap_Ret_Func_SUCCESS_Ret_Success__Func_FAIL_Ret_Fail_"><div class="section_title">SOURCE</div><div class="code">
            FValidation&lt;MonoidFail, FAIL, SUCCESS, Ret&gt;.Inst.BiMap(this, Fail, Success)</div></div></div><div class="member-title"><a name="Bind&lt;U>"></a>Bind&lt;U&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, U&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_U_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, U>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">U</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Bind_U_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, U>_f_"><div class="section_title">SOURCE</div><div class="code">
            IsSuccess
                ? f(success)
                : Validation&lt;MonoidFail, FAIL, U&gt;.Fail(FailValue)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(Validation&lt;MonoidFail, FAIL, SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__Validation_MonoidFail_FAIL_SUCCESS_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__Validation_MonoidFail_FAIL_SUCCESS_other_"><div class="section_title">SOURCE</div><div class="code">
            OrdChoice&lt;
                OrdDefault&lt;FAIL&gt;,
                OrdDefault&lt;SUCCESS&gt;,
                FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;,
                Validation&lt;MonoidFail, FAIL, SUCCESS&gt;,
                FAIL, SUCCESS&gt;
               .Inst.Compare(this, other)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(SUCCESS)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__SUCCESS__success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">success</div><div class="arg-type"><span class="ident">SUCCESS</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">SUCCESS</span> success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__SUCCESS__success_"><div class="section_title">SOURCE</div><div class="code">
            CompareTo(Success(success))</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(FAIL)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__FAIL__fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fail</div><div class="arg-type"><span class="ident">FAIL</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">FAIL</span> fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__FAIL__fail_"><div class="section_title">SOURCE</div><div class="code">
            CompareTo(Fail(fail))</div></div></div><div class="member-title"><a name="Count"></a>Count()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Counts the Validation </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if the Validation is in a Success state, 0 otherwise.</span></div></div></div><div style="display:none" id="code-Count__"><div class="section_title">SOURCE</div><div class="code">
            IsFail
                ? 0
                : 1</div></div></div><div class="member-title"><a name="Disjunction&lt;SUCCESSB>"></a>Disjunction&lt;SUCCESSB&gt;(Validation&lt;MonoidFail, FAIL, SUCCESSB&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Disjunction_SUCCESSB_Validation_MonoidFail_FAIL_SUCCESSB_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESSB</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; <span class="ident">Disjunction</span>&lt;<span class="ident">SUCCESSB</span>&gt;(<span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESSB</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Disjunction_SUCCESSB_Validation_MonoidFail_FAIL_SUCCESSB_other_"><div class="section_title">SOURCE</div><div class="code">
            if (IsSuccess &amp;&amp; other.IsSuccess) return this;
            if (IsSuccess) return new Validation&lt;MonoidFail, FAIL, SUCCESS&gt;(other.FailValue);
            if (other.IsSuccess) return this;
            return new Validation&lt;MonoidFail, FAIL, SUCCESS&gt;(default(MonoidFail).Append(FailValue, other.FailValue));
        </div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div><div class="arg-desc"><span >Object to test for equality</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if equal</span></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            !ReferenceEquals(obj, null) &amp;&amp;
            obj is Validation&lt;MonoidFail, FAIL, SUCCESS&gt; &amp;&amp;
            EqChoice&lt;
                MonoidFail, 
                EqDefault&lt;SUCCESS&gt;, 
                FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, 
                Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, 
                FAIL, SUCCESS&gt;
               .Inst.Equals(this, (Validation&lt;MonoidFail, FAIL, SUCCESS&gt;)obj)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(SUCCESS)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__SUCCESS__success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">success</div><div class="arg-type"><span class="ident">SUCCESS</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">SUCCESS</span> success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__SUCCESS__success_"><div class="section_title">SOURCE</div><div class="code">
            Equals(Success(success))</div></div></div><div class="member-title"><a name="Equals"></a>Equals(FAIL)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__FAIL__fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fail</div><div class="arg-type"><span class="ident">FAIL</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">FAIL</span> fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__FAIL__fail_"><div class="section_title">SOURCE</div><div class="code">
            Equals(Fail(fail))</div></div></div><div class="member-title"><a name="Equals"></a>Equals(Validation&lt;MonoidFail, FAIL, SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__Validation_MonoidFail_FAIL_SUCCESS_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__Validation_MonoidFail_FAIL_SUCCESS_other_"><div class="section_title">SOURCE</div><div class="code">
            EqChoice&lt;
                MonoidFail, 
                EqDefault&lt;SUCCESS&gt;, 
                FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, 
                Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, 
                FAIL, SUCCESS&gt;
               .Inst.Equals(this, other)</div></div></div><div class="member-title"><a name="Exists"></a>Exists(Func&lt;SUCCESS, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists__Func_SUCCESS_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Validation if it&#39;s in the Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Exists</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Validation is in a Success state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-Exists__Func_SUCCESS_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            exists&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, SUCCESS&gt;(this, pred)</div></div></div><div class="member-title"><a name="Fail"></a>Fail(FAIL)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fail__FAIL__fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Fail constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fail</div><div class="arg-type"><span class="ident">FAIL</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; <span class="ident">Fail</span>(<span class="ident">FAIL</span> fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Fail__FAIL__fail_"><div class="section_title">SOURCE</div><div class="code">
            new Validation&lt;MonoidFail, FAIL, SUCCESS&gt;(fail)</div></div></div><div class="member-title"><a name="FailAsEnumerable"></a>FailAsEnumerable()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FailAsEnumerable__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation fail into a Seq </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">FAIL</span>&gt; <span class="ident">FailAsEnumerable</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">FAIL</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FailAsEnumerable__"><div class="section_title">SOURCE</div><div class="code">
            leftAsEnumerable&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="FailToArray"></a>FailToArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FailToArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation into an immutable array R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">FAIL</span>&gt; <span class="ident">FailToArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">FAIL</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FailToArray__"><div class="section_title">SOURCE</div><div class="code">
            leftToArray&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="FailToList"></a>FailToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FailToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation into a Lst </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">FAIL</span>&gt; <span class="ident">FailToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">FAIL</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FailToList__"><div class="section_title">SOURCE</div><div class="code">
            leftToList&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="FailToSeq"></a>FailToSeq()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FailToSeq__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert Validation to sequence of 0 or 1 success values </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">FAIL</span>&gt; <span class="ident">FailToSeq</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">FAIL</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FailToSeq__"><div class="section_title">SOURCE</div><div class="code">
            FailAsEnumerable()</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(S, Func&lt;S, SUCCESS, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_S__state__Func_S_SUCCESS_S_Success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Validation types are like lists of 0 or 1 items, and therefore follow the  same rules when folding. <br/><br/> In the case of lists, &#39;Fold&#39;, when applied to a binary operator, a starting value(typically the Fail-identity of the operator), and a list, reduces the list using the binary operator, from Fail to Success: <br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">SUCCESS</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if structure is in a Success state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">SUCCESS</span>, <span class="ident">S</span>&gt; Success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-Fold_S_S__state__Func_S_SUCCESS_S_Success_"><div class="section_title">SOURCE</div><div class="code">
            default(FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;).Fold(this, state, Success)(unit)</div></div></div><div class="member-title"><a name="ForAll"></a>ForAll(Func&lt;SUCCESS, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll__Func_SUCCESS_bool_Success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the Validation if it&#39;s in the Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="keyword">bool</span>&gt; Success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the Validation is in a Fail state.   True if the Validation is in a Success state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-ForAll__Func_SUCCESS_bool_Success_"><div class="section_title">SOURCE</div><div class="code">
            forall&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, SUCCESS&gt;(this, Success)</div></div></div><div class="member-title"><a name="GetEnumerator"></a>GetEnumerator()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetEnumerator__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">IEnumerator</span>&lt;<span class="ident">ValidationData</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;&gt; <span class="ident">GetEnumerator</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerator</span>&lt;<span class="ident">ValidationData</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetEnumerator__"><div class="section_title">SOURCE</div><div class="code">
            Enum().GetEnumerator()</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a hash code of the wrapped value of the Validation </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >Hash code</span></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            hashCode&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(Func&lt;SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__Func_SUCCESS_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Fail function if the Validation is in a Fail state. Returns the Success value if the Validation is in a Success state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Success value if in the Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">SUCCESS</span> <span class="ident">IfFail</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">SUCCESS</span></div><div class="normal"><span >Returns an unwrapped Success value</span></div></div></div><div style="display:none" id="code-IfFail__Func_SUCCESS_Fail_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Fail)</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(Func&lt;FAIL, SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__Func_FAIL_SUCCESS_FailMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the FailMap function if the Validation is in a Fail state. Returns the Success value if the Validation is in a Success state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">FailMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Success value if in the Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">SUCCESS</span> <span class="ident">IfFail</span>(<span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; FailMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">SUCCESS</span></div><div class="normal"><span >Returns an unwrapped Success value</span></div></div></div><div style="display:none" id="code-IfFail__Func_FAIL_SUCCESS_FailMap_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, FailMap)</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(SUCCESS)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__SUCCESS__SuccessValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the SuccessValue if the Validation is in a Fail state. Returns the Success value if the Validation is in a Success state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">SuccessValue</div><div class="arg-type"><span class="ident">SUCCESS</span></div></div><div class="arg-desc"><span >Value to return if in the Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">SUCCESS</span> <span class="ident">IfFail</span>(<span class="ident">SUCCESS</span> SuccessValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">SUCCESS</span></div><div class="normal"><span >Returns an unwrapped Success value</span></div></div></div><div style="display:none" id="code-IfFail__SUCCESS__SuccessValue_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, SuccessValue)</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(Action&lt;FAIL&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__Action_FAIL_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Fail action if the Validation is in a Fail state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Success value if in the Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfFail</span>(<span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt; Fail)</div></div><div style="display:none" id="code-IfFail__Action_FAIL_Fail_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Fail)</div></div></div><div class="member-title"><a name="IfSuccess"></a>IfSuccess(Action&lt;SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfSuccess__Action_SUCCESS_Success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Success action if the Validation is in a Success state, otherwise does nothing </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfSuccess</span>(<span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt; Success)</div></div><div style="display:none" id="code-IfSuccess__Action_SUCCESS_Success_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Success)</div></div></div><div class="member-title"><a name="IfSuccess"></a>IfSuccess(FAIL)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfSuccess__FAIL__FailValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the FailValue if the Validation is in a Success state. Returns the Fail value if the Validation is in a Fail state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">FailValue</div><div class="arg-type"><span class="ident">FAIL</span></div></div><div class="arg-desc"><span >Value to return if in the Fail state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">FAIL</span> <span class="ident">IfSuccess</span>(<span class="ident">FAIL</span> FailValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FAIL</span></div><div class="normal"><span >Returns an unwrapped Fail value</span></div></div></div><div style="display:none" id="code-IfSuccess__FAIL__FailValue_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, FailValue)</div></div></div><div class="member-title"><a name="IfSuccess"></a>IfSuccess(Func&lt;FAIL&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfSuccess__Func_FAIL_Success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of Success() if the Validation is in a Success state. Returns the Fail value if the Validation is in a Fail state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Fail value if in the Success state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">FAIL</span> <span class="ident">IfSuccess</span>(<span class="ident">Func</span>&lt;<span class="ident">FAIL</span>&gt; Success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FAIL</span></div><div class="normal"><span >Returns an unwrapped Fail value</span></div></div></div><div style="display:none" id="code-IfSuccess__Func_FAIL_Success_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, Success)</div></div></div><div class="member-title"><a name="IfSuccess"></a>IfSuccess(Func&lt;SUCCESS, FAIL&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfSuccess__Func_SUCCESS_FAIL_SuccessMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of SuccessMap if the Validation is in a Success state. Returns the Fail value if the Validation is in a Fail state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">SuccessMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">FAIL</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Fail value if in the Success state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">FAIL</span> <span class="ident">IfSuccess</span>(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">FAIL</span>&gt; SuccessMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">FAIL</span></div><div class="normal"><span >Returns an unwrapped Fail value</span></div></div></div><div style="display:none" id="code-IfSuccess__Func_SUCCESS_FAIL_SuccessMap_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this, SuccessMap)</div></div></div><div class="member-title"><a name="Iter"></a>Iter(Action&lt;SUCCESS&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter__Action_SUCCESS_Success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the Validation action is invoked if in the Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">Iter</span>(<span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt; Success)</div></div><div style="display:none" id="code-Iter__Action_SUCCESS_Success_"><div class="section_title">SOURCE</div><div class="code">
            iter&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, SUCCESS&gt;(this, Success)</div></div></div><div class="member-title"><a name="Map&lt;Ret>"></a>Map&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_Ret_Func_SUCCESS_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Validation if it&#39;s in a Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped Validation</span></div></div></div><div style="display:none" id="code-Map_Ret_Func_SUCCESS_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            FValidation&lt;MonoidFail, FAIL, SUCCESS, Ret&gt;.Inst.Map(this, mapper)</div></div></div><div class="member-title"><a name="Match"></a>Match(Action&lt;SUCCESS&gt;, Action&lt;FAIL&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match__Action_SUCCESS_Succ__Action_FAIL_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the <span class='code-inline'>Succ</span> or <span class='code-inline'>Fail</span> action depending on the state of the <span class='code-inline'>Validation</span> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if in a <span class='code-inline'>Success</span> state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if in a <span class='code-inline'>Fail</span> state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">Match</span>(<span class="ident">Action</span>&lt;<span class="ident">SUCCESS</span>&gt; Succ, <span class="ident">Action</span>&lt;<span class="ident">FAIL</span>&gt; Fail)</div></div><div style="display:none" id="code-Match__Action_SUCCESS_Succ__Action_FAIL_Fail_"><div class="section_title">SOURCE</div><div class="code">
            if (IsFail)
            {
                Fail(FailValue);
            }
            else 
            {
                Succ(success);
            }
            return unit;
        </div></div></div><div class="member-title"><a name="Match&lt;Ret>"></a>Match&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_Ret_Func_SUCCESS_Ret_Succ__Func_FAIL_Ret_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the <span class='code-inline'>Succ</span> or <span class='code-inline'>Fail</span> function depending on the state of the <span class='code-inline'>Validation</span> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a <span class='code-inline'>Success</span> state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a <span class='code-inline'>Fail</span> state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Ret</span> <span class="ident">Match</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Ret</span></div><div class="normal"><span >The return value of the invoked function</span></div></div></div><div style="display:none" id="code-Match_Ret_Func_SUCCESS_Ret_Succ__Func_FAIL_Ret_Fail_"><div class="section_title">SOURCE</div><div class="code">
            Check.NullReturn(MatchUnsafe(Succ, Fail))</div></div></div><div class="member-title"><a name="MatchAsync&lt;R2>"></a>MatchAsync&lt;R2&gt;(Func&lt;SUCCESS, Task&lt;R2&gt;&gt;, Func&lt;FAIL, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_R2_Func_SUCCESS_Task&lt;R2>_Succ__Func_FAIL_R2_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Validation and return a promise for a non-null R2. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">R2</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"><span >A promise to return a non-null R2</span></div></div></div><div style="display:none" id="code-MatchAsync_R2_Func_SUCCESS_Task&lt;R2>_Succ__Func_FAIL_R2_Fail_"><div class="section_title">SOURCE</div><div class="code">
            matchAsync&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS, R2&gt;(this, Fail, Succ)</div></div></div><div class="member-title"><a name="MatchAsync&lt;R2>"></a>MatchAsync&lt;R2&gt;(Func&lt;SUCCESS, Task&lt;R2&gt;&gt;, Func&lt;FAIL, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsync_R2_Func_SUCCESS_Task&lt;R2>_Succ__Func_FAIL_Task&lt;R2>_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Validation and return a promise for a non-null R2. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchAsync</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"><span >A promise to return a non-null R2</span></div></div></div><div style="display:none" id="code-MatchAsync_R2_Func_SUCCESS_Task&lt;R2>_Succ__Func_FAIL_Task&lt;R2>_Fail_"><div class="section_title">SOURCE</div><div class="code">
            matchAsync&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS, R2&gt;(this, Fail, Succ)</div></div></div><div class="member-title"><a name="MatchObservable&lt;R2>"></a>MatchObservable&lt;R2&gt;(Func&lt;SUCCESS, IObservable&lt;R2&gt;&gt;, Func&lt;FAIL, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservable_R2_Func_SUCCESS_IObservable&lt;R2>_Succ__Func_FAIL_R2_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Validation and return an observable stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">R2</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservable_R2_Func_SUCCESS_IObservable&lt;R2>_Succ__Func_FAIL_R2_Fail_"><div class="section_title">SOURCE</div><div class="code">
            matchObservable&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS, R2&gt;(this, Fail, Succ)</div></div></div><div class="member-title"><a name="MatchObservable&lt;R2>"></a>MatchObservable&lt;R2&gt;(Func&lt;SUCCESS, IObservable&lt;R2&gt;&gt;, Func&lt;FAIL, IObservable&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservable_R2_Func_SUCCESS_IObservable&lt;R2>_Succ__Func_FAIL_IObservable&lt;R2>_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the Validation and return an observable stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservable</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservable_R2_Func_SUCCESS_IObservable&lt;R2>_Succ__Func_FAIL_IObservable&lt;R2>_Fail_"><div class="section_title">SOURCE</div><div class="code">
            matchObservable&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS, R2&gt;(this, Fail, Succ)</div></div></div><div class="member-title"><a name="MatchUnsafe&lt;Ret>"></a>MatchUnsafe&lt;Ret&gt;(Func&lt;SUCCESS, Ret&gt;, Func&lt;FAIL, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_Ret_Func_SUCCESS_Ret_Succ__Func_FAIL_Ret_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the <span class='code-inline'>Succ</span> or <span class='code-inline'>Fail</span> function depending on the state of the <span class='code-inline'>Validation</span> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a <span class='code-inline'>Success</span> state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a <span class='code-inline'>Fail</span> state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Ret</span> <span class="ident">MatchUnsafe</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Ret</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">FAIL</span>, <span class="ident">Ret</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Ret</span></div><div class="normal"><span >The return value of the invoked function</span></div></div></div><div style="display:none" id="code-MatchUnsafe_Ret_Func_SUCCESS_Ret_Succ__Func_FAIL_Ret_Fail_"><div class="section_title">SOURCE</div><div class="code">
            IsFail
                ? Fail == null
                    ? throw new ArgumentNullException(nameof(Fail))
                    : Fail(FailValue)
                : Succ == null
                    ? throw new ArgumentNullException(nameof(Succ))
                    : Succ(success)</div></div></div><div class="member-title"><a name="Select&lt;U>"></a>Select&lt;U&gt;(Func&lt;SUCCESS, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_U_Func_SUCCESS_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the Validation if it&#39;s in a Success state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">U</span>&gt;</div></div><div class="arg-desc"><span >Map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">U</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;</div><div class="normal"><span >Mapped Validation</span></div></div></div><div style="display:none" id="code-Select_U_Func_SUCCESS_U_map_"><div class="section_title">SOURCE</div><div class="code">
            FValidation&lt;MonoidFail, FAIL, SUCCESS, U&gt;.Inst.Map(this, map)</div></div></div><div class="member-title"><a name="SelectMany&lt;U, V>"></a>SelectMany&lt;U, V&gt;(Func&lt;SUCCESS, Validation&lt;MonoidFail, FAIL, U&gt;&gt;, Func&lt;SUCCESS, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_U_V_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, U>_bind__Func_SUCCESS_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">SUCCESS</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_U_V_Func_SUCCESS_Validation&lt;MonoidFail, FAIL, U>_bind__Func_SUCCESS_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            var t = success;
            return IsSuccess
                ? bind(t).Map(u =&gt; project(t, u))
                : Validation&lt;MonoidFail, FAIL, V&gt;.Fail(FailValue);
        </div></div></div><div class="member-title"><a name="Success"></a>Success(SUCCESS)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Success__SUCCESS__success_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Success constructor </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">success</div><div class="arg-type"><span class="ident">SUCCESS</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; <span class="ident">Success</span>(<span class="ident">SUCCESS</span> success)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Validation</span>&lt;<span class="ident">MonoidFail</span>, <span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Success__SUCCESS__success_"><div class="section_title">SOURCE</div><div class="code">
            new Validation&lt;MonoidFail, FAIL, SUCCESS&gt;(success)</div></div></div><div class="member-title"><a name="SuccessAsEnumerable"></a>SuccessAsEnumerable()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SuccessAsEnumerable__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation success into a Seq </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">SuccessAsEnumerable</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SuccessAsEnumerable__"><div class="section_title">SOURCE</div><div class="code">
            rightAsEnumerable&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="SuccessToArray"></a>SuccessToArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SuccessToArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation into an immutable array </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">SuccessToArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SuccessToArray__"><div class="section_title">SOURCE</div><div class="code">
            rightToArray&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="SuccessToList"></a>SuccessToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SuccessToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the Validation into a Lst </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">SuccessToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SuccessToList__"><div class="section_title">SOURCE</div><div class="code">
            rightToList&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="SuccessToSeq"></a>SuccessToSeq()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SuccessToSeq__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert either to sequence of 0 or 1 success values </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">SuccessToSeq</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SuccessToSeq__"><div class="section_title">SOURCE</div><div class="code">
            SuccessAsEnumerable()</div></div></div><div class="member-title"><a name="ToEither"></a>ToEither()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToEither__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the Validation to an EitherUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Either</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; <span class="ident">ToEither</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToEither__"><div class="section_title">SOURCE</div><div class="code">
            toEither&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="ToEitherUnsafe"></a>ToEitherUnsafe()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToEitherUnsafe__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the Validation to an EitherUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt; <span class="ident">ToEitherUnsafe</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">FAIL</span>, <span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToEitherUnsafe__"><div class="section_title">SOURCE</div><div class="code">
            toEitherUnsafe&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="ToOption"></a>ToOption()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToOption__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the Validation to an Option </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Option</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">ToOption</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToOption__"><div class="section_title">SOURCE</div><div class="code">
            toOption&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><div class="member-title"><a name="ToString"></a>ToString()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Return a string representation of the Validation </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="ident">ToString</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >String representation of the Validation</span></div></div></div><div style="display:none" id="code-ToString__"><div class="section_title">SOURCE</div><div class="code">
            IsSuccess
                ? isnull(success)
                    ? &quot;Success(null)&quot;
                    : $&quot;Success({success})&quot;
                : $&quot;Fail({FailValue})&quot;</div></div></div><div class="member-title"><a name="ToTryOption"></a>ToTryOption()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToTryOption__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the Validation to an TryOption </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOption</span>&lt;<span class="ident">SUCCESS</span>&gt; <span class="ident">ToTryOption</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">SUCCESS</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-ToTryOption__"><div class="section_title">SOURCE</div><div class="code">
            toTryOption&lt;FoldValidation&lt;MonoidFail, FAIL, SUCCESS&gt;, Validation&lt;MonoidFail, FAIL, SUCCESS&gt;, FAIL, SUCCESS&gt;(this)</div></div></div><h2 >Enums</h2><div class="member-title"><a name="StateType"></a>StateType</div><div class="section"><p ></p><div class="left"><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="number"></span></div></div><div class="arg-desc"></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Success</div><div class="arg-type"><span class="number"></span></div></div><div class="arg-desc"></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="ident">StateType</span> : <span class="keyword">byte</span></div></div></div></div></body></html>