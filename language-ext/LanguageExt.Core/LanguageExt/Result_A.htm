<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Result_A.htm">Result&lt;A&gt;</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#Result">Result(A)</a><a class="nav-link" href="#Result">Result(Exception)</a><h3 >FIELDS</h3><a class="nav-link" href="#Bottom">Bottom</a><h3 >PROPERTIES</h3><a class="nav-link" href="#IsBottom">IsBottom</a><a class="nav-link" href="#IsFaulted">IsFaulted</a><h3 >METHODS</h3><a class="nav-link" href="#Equals">Equals(Result&lt;A&gt;)</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#IfFail">IfFail(A)</a><a class="nav-link" href="#IfFail">IfFail(Func&lt;Exception, A&gt;)</a><a class="nav-link" href="#IfFail">IfFail(Action&lt;Exception&gt;)</a><a class="nav-link" href="#IfSucc">IfSucc(Action&lt;A&gt;)</a><a class="nav-link" href="#Map&lt;B>">Map&lt;B&gt;(Func&lt;A, B&gt;)</a><a class="nav-link" href="#MapAsync&lt;B>">MapAsync&lt;B&gt;(Func&lt;A, Task&lt;B&gt;&gt;)</a><a class="nav-link" href="#Match&lt;R>">Match&lt;R&gt;(Func&lt;A, R&gt;, Func&lt;Exception, R&gt;)</a><a class="nav-link" href="#ToString">ToString()</a></div><div class="content-panel"><h1 >Result&lt;A&gt; Struct</h1><p ><span >Represents the result of an operation:<br/><br/><div class='code-line'>     A | Exception</div><br/><br/> </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">Result</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">Result</span>&lt;<span class="ident">A</span>&gt;&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Constructors</h2><div class="member-title"><a name="Result"></a>Result(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Result__A__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Constructor of a concrete value </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span ></span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">Result</span>(<span class="ident">A</span> value)</div></div><div style="display:none" id="code-Result__A__value_"><div class="section_title">SOURCE</div><div class="code">
            IsValid = true;
            Value = value;
            Exception = null;
        </div></div></div><div class="member-title"><a name="Result"></a>Result(Exception)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Result__Exception__e_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Constructor of an error value </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">e</div><div class="arg-type"><span class="ident">Exception</span></div></div><div class="arg-desc"><span ></span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">Result</span>(<span class="ident">Exception</span> e)</div></div><div style="display:none" id="code-Result__Exception__e_"><div class="section_title">SOURCE</div><div class="code">
            IsValid = true;
            Exception = e;
            Value = default(A);
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="Bottom"></a>Bottom</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Result</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Bottom</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="IsBottom"></a>IsBottom</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >True if the struct is in an invalid state </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsBottom</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsFaulted"></a>IsFaulted</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >True if the result is faulted </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsFaulted</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Equals"></a>Equals(Result&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__Result_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">Result</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">Result</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__Result_A_other_"><div class="section_title">SOURCE</div><div class="code">
            IsBottom == other.IsBottom &amp;&amp;
            IsFaulted
                ? Exception == other.Exception
                : EqDefault&lt;A&gt;.Inst.Equals(Value, other.Value)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            obj is Result&lt;A&gt; &amp;&amp; Equals((Result&lt;A&gt;)obj)</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Get hash code for bound value </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            if (IsBottom) return -1;
            if (IsFaulted) return -2;
            return Value?.GetHashCode() ?? 0;
        </div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__A__defaultValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">defaultValue</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">A</span> <span class="ident">IfFail</span>(<span class="ident">A</span> defaultValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IfFail__A__defaultValue_"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? defaultValue
                : Value</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(Func&lt;Exception, A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__Func_Exception_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">A</span> <span class="ident">IfFail</span>(<span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">A</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"></div></div></div><div style="display:none" id="code-IfFail__Func_Exception_A_f_"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? f(Exception)
                : Value</div></div></div><div class="member-title"><a name="IfFail"></a>IfFail(Action&lt;Exception&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfFail__Action_Exception_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfFail</span>(<span class="ident">Action</span>&lt;<span class="ident">Exception</span>&gt; f)</div></div><div style="display:none" id="code-IfFail__Action_Exception_f_"><div class="section_title">SOURCE</div><div class="code">
            if (IsFaulted) f(Exception);
            return unit;
        </div></div></div><div class="member-title"><a name="IfSucc"></a>IfSucc(Action&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfSucc__Action_A_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfSucc</span>(<span class="ident">Action</span>&lt;<span class="ident">A</span>&gt; f)</div></div><div style="display:none" id="code-IfSucc__Action_A_f_"><div class="section_title">SOURCE</div><div class="code">
            if (!IsFaulted) f(Value);
            return unit;
        </div></div></div><div class="member-title"><a name="Map&lt;B>"></a>Map&lt;B&gt;(Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_B_Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Result</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Result</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Map_B_Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? new Result&lt;B&gt;(Exception)
                : new Result&lt;B&gt;(f(Value))</div></div></div><div class="member-title"><a name="MapAsync&lt;B>"></a>MapAsync&lt;B&gt;(Func&lt;A, Task&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapAsync_B_Func_A_Task&lt;B>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">async</span> <span class="ident">Task</span>&lt;<span class="ident">Result</span>&lt;<span class="ident">B</span>&gt;&gt; <span class="ident">MapAsync</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">Task</span>&lt;<span class="ident">B</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">Result</span>&lt;<span class="ident">B</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapAsync_B_Func_A_Task&lt;B>_f_"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? new Result&lt;B&gt;(Exception)
                : new Result&lt;B&gt;(await f(Value))</div></div></div><div class="member-title"><a name="Match&lt;R>"></a>Match&lt;R&gt;(Func&lt;A, R&gt;, Func&lt;Exception, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Match_R_Func_A_R_Succ__Func_Exception_R_Fail_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Succ</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Fail</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R</span> <span class="ident">Match</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt; Succ, <span class="ident">Func</span>&lt;<span class="ident">Exception</span>, <span class="ident">R</span>&gt; Fail)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Match_R_Func_A_R_Succ__Func_Exception_R_Fail_"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? Fail(Exception)
                : Succ(Value)</div></div></div><div class="member-title"><a name="ToString"></a>ToString()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the value to a showable string </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="ident">ToString</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ToString__"><div class="section_title">SOURCE</div><div class="code">
            IsFaulted
                ? Exception.ToString()
                : Value.ToString()</div></div></div></div></body></html>