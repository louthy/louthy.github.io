<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="MapExtensions_.htm">MapExtensions</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D, E>">AddOrUpdate&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, E)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D, E>">AddOrUpdate&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;E, E&gt;, Func&lt;E&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D>">AddOrUpdate&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, D)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C, D>">AddOrUpdate&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, Func&lt;D, D&gt;, Func&lt;D&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C>">AddOrUpdate&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, Func&lt;C, C&gt;, Func&lt;C&gt;)</a><a class="nav-link" href="#AddOrUpdate&lt;A, B, C>">AddOrUpdate&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, C)</a><a class="nav-link" href="#Count&lt;K, V>">Count&lt;K, V&gt;(Map&lt;K, V&gt;)</a><a class="nav-link" href="#CountT&lt;A, B, C, D, V>">CountT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;)</a><a class="nav-link" href="#CountT&lt;A, B, C, V>">CountT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;)</a><a class="nav-link" href="#CountT&lt;A, B, V>">CountT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, C, D, T>">Exists&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, C, T>">Exists&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Exists&lt;A, B, T>">Exists&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, C, D, T>">FilterRemoveT&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, C, T>">FilterRemoveT&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterRemoveT&lt;A, B, T>">FilterRemoveT&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, C, D, T>">FilterT&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, C, T>">FilterT&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#FilterT&lt;A, B, T>">FilterT&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, D, E, F>">Find&lt;A, B, C, D, E, F&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;E, F&gt;, Func&lt;F&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, D, E>">Find&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, Func&lt;D, E&gt;, Func&lt;E&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C, D>">Find&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C)</a><a class="nav-link" href="#Find&lt;A, B, C, D>">Find&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, Func&lt;C, D&gt;, Func&lt;D&gt;)</a><a class="nav-link" href="#Find&lt;A, B, C>">Find&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B)</a><a class="nav-link" href="#FoldT&lt;A, B, C, D, S, V>">FoldT&lt;A, B, C, D, S, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#FoldT&lt;A, B, C, S, V>">FoldT&lt;A, B, C, S, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#FoldT&lt;A, B, S, V>">FoldT&lt;A, B, S, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, S, Func&lt;S, V, S&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, C, D, T>">ForAll&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, C, T>">ForAll&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#ForAll&lt;A, B, T>">ForAll&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)</a><a class="nav-link" href="#Map&lt;K, V, U>">Map&lt;K, V, U&gt;(Map&lt;K, V&gt;, Func&lt;V, U&gt;)</a><a class="nav-link" href="#Map&lt;K, V, U>">Map&lt;K, V, U&gt;(Map&lt;K, V&gt;, Func&lt;K, V, U&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, C, D, T, V>">MapRemoveT&lt;A, B, C, D, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;Map&lt;D, T&gt;, Map&lt;D, V&gt;&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, C, T, V>">MapRemoveT&lt;A, B, C, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;Map&lt;C, T&gt;, Map&lt;C, V&gt;&gt;)</a><a class="nav-link" href="#MapRemoveT&lt;A, B, T, V>">MapRemoveT&lt;A, B, T, V&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;Map&lt;B, T&gt;, Map&lt;B, V&gt;&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, C, D, T, V>">MapT&lt;A, B, C, D, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, C, T, V>">MapT&lt;A, B, C, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#MapT&lt;A, B, T, V>">MapT&lt;A, B, T, V&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, V&gt;)</a><a class="nav-link" href="#Remove&lt;A, B, C, D>">Remove&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C)</a><a class="nav-link" href="#Remove&lt;A, B, C>">Remove&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, D, V>">SetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, D, V>">SetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, V>">SetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, C, V>">SetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)</a><a class="nav-link" href="#SetItemT&lt;A, B, V>">SetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, V)</a><a class="nav-link" href="#SetItemT&lt;A, B, V>">SetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)</a><a class="nav-link" href="#Sum&lt;K>">Sum&lt;K&gt;(Map&lt;K, int&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, D, V>">TrySetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, D, V>">TrySetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, V>">TrySetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, C, V>">TrySetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, V>">TrySetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, V)</a><a class="nav-link" href="#TrySetItemT&lt;A, B, V>">TrySetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)</a></div><div class="content-panel"><h1 >MapExtensions Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">MapExtensions</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Methods</h2><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D, E>"></a>AddOrUpdate&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, E)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__E__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">E</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">E</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">E</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__E__value_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                aKey,
                bKey,
                cKey,
                d =&gt; d.AddOrUpdate(dKey, _ =&gt; value, value),
                () =&gt; Prelude.Map(Tuple(dKey, value))
            )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D, E>"></a>AddOrUpdate&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;E, E&gt;, Func&lt;E&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_E_E_Some__Func_E_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">E</span>, <span class="ident">E</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">E</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">E</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">E</span>, <span class="ident">E</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">E</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_E_E_Some__Func_E_None_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                aKey,
                bKey,
                cKey,
                d =&gt; d.AddOrUpdate(dKey, Some, None),
                () =&gt; Prelude.Map(Tuple(dKey, None()))
            )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D>"></a>AddOrUpdate&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, D)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__D__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">D</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__D__value_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                aKey,
                bKey,
                c =&gt; c.AddOrUpdate(cKey, _ =&gt; value, value),
                () =&gt; Prelude.Map(Tuple(cKey, value))
            )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C, D>"></a>AddOrUpdate&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, Func&lt;D, D&gt;, Func&lt;D&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__Func_D_D_Some__Func_D_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">D</span>, <span class="ident">D</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">D</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">D</span>, <span class="ident">D</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">D</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__Func_D_D_Some__Func_D_None_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                aKey,
                bKey,
                c =&gt; c.AddOrUpdate(cKey, Some, None),
                () =&gt; Prelude.Map(Tuple(cKey, None()))
            )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C>"></a>AddOrUpdate&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, Func&lt;C, C&gt;, Func&lt;C&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__Func_C_C_Some__Func_C_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">C</span>, <span class="ident">C</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">C</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">Func</span>&lt;<span class="ident">C</span>, <span class="ident">C</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">C</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__Func_C_C_Some__Func_C_None_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                outerKey,
                b =&gt; b.AddOrUpdate(innerKey, Some, None),
                () =&gt; Prelude.Map(Tuple(innerKey, None()))
            )</div></div></div><div class="member-title"><a name="AddOrUpdate&lt;A, B, C>"></a>AddOrUpdate&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, C)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__C__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">C</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; <span class="ident">AddOrUpdate</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">C</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AddOrUpdate_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__C__value_"><div class="section_title">SOURCE</div><div class="code">
            self.AddOrUpdate(
                outerKey,
                b =&gt; b.AddOrUpdate(innerKey, _ =&gt; value, value),
                () =&gt; Prelude.Map(Tuple(innerKey, value))
            )</div></div></div><div class="member-title"><a name="Count&lt;K, V>"></a>Count&lt;K, V&gt;(Map&lt;K, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count_K_V_Map_K_V_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Count</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Count_K_V_Map_K_V_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Count</div></div></div><div class="member-title"><a name="CountT&lt;A, B, C, D, V>"></a>CountT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">CountT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CountT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(0, (s, x) =&gt; s + x.CountT())</div></div></div><div class="member-title"><a name="CountT&lt;A, B, C, V>"></a>CountT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">CountT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CountT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(0, (s, x) =&gt; s + x.CountT())</div></div></div><div class="member-title"><a name="CountT&lt;A, B, V>"></a>CountT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CountT_A_B_V_Map_A_Map&lt;B, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">CountT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CountT_A_B_V_Map_A_Map&lt;B, V>_map_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(0, (s, x) =&gt; s+  x.Count)</div></div></div><div class="member-title"><a name="Exists&lt;A, B, C, D, T>"></a>Exists&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Exists((k, v) =&gt; v.Exists(pred));
        </div></div></div><div class="member-title"><a name="Exists&lt;A, B, C, T>"></a>Exists&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Exists((k, v) =&gt; v.Exists(pred));
        </div></div></div><div class="member-title"><a name="Exists&lt;A, B, T>"></a>Exists&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">Exists</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Exists_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Exists((k, v) =&gt; v.Exists(pred));
        </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, C, D, T>"></a>FilterRemoveT&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.MapRemoveT(v =&gt; v.Filter(pred));
        </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, C, T>"></a>FilterRemoveT&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.MapRemoveT(v =&gt; v.Filter(pred));
        </div></div></div><div class="member-title"><a name="FilterRemoveT&lt;A, B, T>"></a>FilterRemoveT&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterRemoveT_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">FilterRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterRemoveT_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.MapRemoveT(v =&gt; v.Filter(pred));
        </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, C, D, T>"></a>FilterT&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.FilterT(pred));
        </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, C, T>"></a>FilterT&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.FilterT(pred));
        </div></div></div><div class="member-title"><a name="FilterT&lt;A, B, T>"></a>FilterT&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FilterT_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; <span class="ident">FilterT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-FilterT_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.Filter(pred));
        </div></div></div><div class="member-title"><a name="Find&lt;A, B, C, D, E, F>"></a>Find&lt;A, B, C, D, E, F&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, E&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;E, F&gt;, Func&lt;F&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_D_E_F_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_E_F_Some__Func_F_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">E</span>, <span class="ident">F</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">F</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">F</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">E</span>, <span class="ident">F</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">E</span>, <span class="ident">F</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">F</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">F</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_D_E_F_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, E>>>_self__A__aKey__B__bKey__C__cKey__D__dKey__Func_E_F_Some__Func_F_None_"><div class="section_title">SOURCE</div><div class="code">
            self.Find(aKey,
                b =&gt; b.Find(bKey,
                    c =&gt; c.Find(cKey,
                        d =&gt; d.Find(dKey, Some, None),
                        None),
                    None),
                None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C, D, E>"></a>Find&lt;A, B, C, D, E&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C, Func&lt;D, E&gt;, Func&lt;E&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__Func_D_E_Some__Func_E_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">E</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">E</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">E</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">D</span>, <span class="ident">E</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">E</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">E</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_D_E_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey__Func_D_E_Some__Func_E_None_"><div class="section_title">SOURCE</div><div class="code">
            self.Find(aKey,
                b =&gt; b.Find(bKey,
                    c =&gt; c.Find(cKey, Some, None),
                    None),
                None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C, D>"></a>Find&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">D</span>&gt; <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">D</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey_"><div class="section_title">SOURCE</div><div class="code">
            self.Find(aKey, b =&gt; b.Find(bKey, c =&gt; c.Find(cKey), () =&gt; None), () =&gt; None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C, D>"></a>Find&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B, Func&lt;C, D&gt;, Func&lt;D&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_D_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__Func_C_D_Some__Func_D_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">D</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">D</span> <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey, <span class="ident">Func</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">D</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">D</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_D_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey__Func_C_D_Some__Func_D_None_"><div class="section_title">SOURCE</div><div class="code">
            self.Find(outerKey, b =&gt; b.Find(innerKey, Some, None), None)</div></div></div><div class="member-title"><a name="Find&lt;A, B, C>"></a>Find&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Option</span>&lt;<span class="ident">C</span>&gt; <span class="ident">Find</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">C</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Find_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey_"><div class="section_title">SOURCE</div><div class="code">
            self.Find(outerKey, b =&gt; b.Find(innerKey), () =&gt; None)</div></div></div><div class="member-title"><a name="FoldT&lt;A, B, C, D, S, V>"></a>FoldT&lt;A, B, C, D, S, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_C_D_S_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_C_D_S_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(state, (s, x) =&gt; x.FoldT(s, folder))</div></div></div><div class="member-title"><a name="FoldT&lt;A, B, C, S, V>"></a>FoldT&lt;A, B, C, S, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_C_S_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_C_S_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(state, (s, x) =&gt; x.FoldT(s, folder))</div></div></div><div class="member-title"><a name="FoldT&lt;A, B, S, V>"></a>FoldT&lt;A, B, S, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, S, Func&lt;S, V, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldT_A_B_S_V_Map_A_Map&lt;B, V>_map__S__state__Func_S_V_S_folder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">folder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">S</span> <span class="ident">FoldT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">S</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">V</span>, <span class="ident">S</span>&gt; folder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldT_A_B_S_V_Map_A_Map&lt;B, V>_map__S__state__Func_S_V_S_folder_"><div class="section_title">SOURCE</div><div class="code">
            map.Fold(state, (s, x) =&gt; x.Fold(s, folder))</div></div></div><div class="member-title"><a name="ForAll&lt;A, B, C, D, T>"></a>ForAll&lt;A, B, C, D, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_C_D_T_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.ForAll((k, v) =&gt; v.ForAll(pred));
        </div></div></div><div class="member-title"><a name="ForAll&lt;A, B, C, T>"></a>ForAll&lt;A, B, C, T&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_C_T_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.ForAll((k, v) =&gt; v.ForAll(pred));
        </div></div></div><div class="member-title"><a name="ForAll&lt;A, B, T>"></a>ForAll&lt;A, B, T&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-ForAll_A_B_T_Map_A_Map&lt;B, T>_self__Func_T_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            return self.ForAll((k, v) =&gt; v.ForAll(pred));
        </div></div></div><div class="member-title"><a name="Map&lt;K, V, U>"></a>Map&lt;K, V, U&gt;(Map&lt;K, V&gt;, Func&lt;V, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_U_Map_K_V_self__Func_V_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically maps the map to a new map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;</div><div class="normal"><span >Mapped items in a new map</span></div></div></div><div style="display:none" id="code-Map_K_V_U_Map_K_V_self__Func_V_U_mapper_"><div class="section_title">SOURCE</div><div class="code">
            new Map&lt;K, U&gt;(MapModule.Map(self.Value.Root, mapper), self.Value.Rev)</div></div></div><div class="member-title"><a name="Map&lt;K, V, U>"></a>Map&lt;K, V, U&gt;(Map&lt;K, V&gt;, Func&lt;K, V, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_K_V_U_Map_K_V_self__Func_K_V_U_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically maps the map to a new map </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>, <span class="ident">U</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>, <span class="ident">U</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>&gt; self, <span class="ident">Func</span>&lt;<span class="ident">K</span>, <span class="ident">V</span>, <span class="ident">U</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="ident">U</span>&gt;</div><div class="normal"><span >Mapped items in a new map</span></div></div></div><div style="display:none" id="code-Map_K_V_U_Map_K_V_self__Func_K_V_U_mapper_"><div class="section_title">SOURCE</div><div class="code">
            new Map&lt;K, U&gt;(MapModule.Map(self.Value.Root, mapper), self.Value.Rev)</div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, C, D, T, V>"></a>MapRemoveT&lt;A, B, C, D, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;Map&lt;D, T&gt;, Map&lt;D, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_C_D_T_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_Map&lt;D, T>_Map&lt;D, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_C_D_T_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_Map&lt;D, T>_Map&lt;D, V>_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.Map((kb, vb) =&gt; vb.Map((kc, vc) =&gt; map(vc))
                                                             .Filter((kc, vc) =&gt; vc.Count &gt; 0))
                                          .Filter((kb, vb) =&gt; vb.Count &gt; 0))
                       .Filter((ka, va) =&gt; va.Count &gt; 0);
        </div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, C, T, V>"></a>MapRemoveT&lt;A, B, C, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;Map&lt;C, T&gt;, Map&lt;C, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_C_T_V_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_Map&lt;C, T>_Map&lt;C, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_C_T_V_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_Map&lt;C, T>_Map&lt;C, V>_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.Map((kb, vb) =&gt; map(vb))
                                          .Filter((kb, vb) =&gt; vb.Count &gt; 0))
                       .Filter((ka, va) =&gt; va.Count &gt; 0);
        </div></div></div><div class="member-title"><a name="MapRemoveT&lt;A, B, T, V>"></a>MapRemoveT&lt;A, B, T, V&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;Map&lt;B, T&gt;, Map&lt;B, V&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapRemoveT_A_B_T_V_Map_A_Map&lt;B, T>_self__Func_Map&lt;B, T>_Map&lt;B, V>_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">MapRemoveT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapRemoveT_A_B_T_V_Map_A_Map&lt;B, T>_self__Func_Map&lt;B, T>_Map&lt;B, V>_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; map(va))
                       .Filter((ka, va) =&gt; va.Count &gt; 0);
        </div></div></div><div class="member-title"><a name="MapT&lt;A, B, C, D, T, V>"></a>MapT&lt;A, B, C, D, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, T&gt;&gt;&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_C_D_T_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">T</span>&gt;&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_C_D_T_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, T>>>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.MapT(map));
        </div></div></div><div class="member-title"><a name="MapT&lt;A, B, C, T, V>"></a>MapT&lt;A, B, C, T, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, T&gt;&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_C_T_V_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">T</span>&gt;&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_C_T_V_Map_A_Map&lt;B, Map&lt;C, T>>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.MapT(map));
        </div></div></div><div class="member-title"><a name="MapT&lt;A, B, T, V>"></a>MapT&lt;A, B, T, V&gt;(Map&lt;A, Map&lt;B, T&gt;&gt;, Func&lt;T, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapT_A_B_T_V_Map_A_Map&lt;B, T>_self__Func_T_V_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">MapT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">T</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">T</span>&gt;&gt; self, <span class="ident">Func</span>&lt;<span class="ident">T</span>, <span class="ident">V</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MapT_A_B_T_V_Map_A_Map&lt;B, T>_self__Func_T_V_map_"><div class="section_title">SOURCE</div><div class="code">
            return self.Map((ka, va) =&gt; va.Map(map));
        </div></div></div><div class="member-title"><a name="Remove&lt;A, B, C, D>"></a>Remove&lt;A, B, C, D&gt;(Map&lt;A, Map&lt;B, Map&lt;C, D&gt;&gt;&gt;, A, B, C)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; <span class="ident">Remove</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt; self, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">D</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove_A_B_C_D_Map_A_Map&lt;B, Map&lt;C, D>>_self__A__aKey__B__bKey__C__cKey_"><div class="section_title">SOURCE</div><div class="code">
            var b = self.Find(aKey);
            if (b.IsSome)
            {
                var c = b.Value.Find(bKey);
                if (c.IsSome)
                {
                    var cv = c.Value.Remove(cKey);
                    if (cv.Count() == 0)
                    {
                        var bv = b.Value.Remove(bKey);
                        if (b.Value.Count() == 0)
                        {
                            return self.Remove(aKey);
                        }
                        else
                        {
                            return self.SetItem(aKey, bv);
                        }
                    }
                    else
                    {
                        return self.SetItem(aKey, b.Value.SetItem(bKey, cv));
                    }
                }
                else
                {
                    return self;
                }
            }
            else
            {
                return self;
            }
        </div></div></div><div class="member-title"><a name="Remove&lt;A, B, C>"></a>Remove&lt;A, B, C&gt;(Map&lt;A, Map&lt;B, C&gt;&gt;, A, B)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKey</div><div class="arg-type"><span class="ident">B</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; <span class="ident">Remove</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt; self, <span class="ident">A</span> outerKey, <span class="ident">B</span> innerKey)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Remove_A_B_C_Map_A_Map&lt;B, C>_self__A__outerKey__B__innerKey_"><div class="section_title">SOURCE</div><div class="code">
            var b = self.Find(outerKey);
            if (b.IsSome)
            {
                var bv = b.Value.Remove(innerKey);
                if (bv.Count() == 0)
                {
                    return self.Remove(outerKey);
                }
                else
                {
                    return self.SetItem(outerKey, bv);
                }
            }
            else
            {
                return self;
            }
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, D, V>"></a>SetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;

            return map.SetItem(aKey, av.SetItemT(bKey, cKey, dKey, value));
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, D, V>"></a>SetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;

            return map.SetItem(aKey, av.SetItemT(bKey, cKey, dKey, Some));
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, V>"></a>SetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;

            return map.SetItem(aKey, av.SetItemT(bKey, cKey, value));
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, C, V>"></a>SetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;

            return map.SetItem(aKey, av.SetItemT(bKey, cKey, Some));
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, V>"></a>SetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;
            return map.SetItem(aKey, av.SetItem(bKey, value));
        </div></div></div><div class="member-title"><a name="SetItemT&lt;A, B, V>"></a>SetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">SetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) throw new ArgumentException(&quot;Key not found in Map&quot;);
            var av = a.Value;
            return map.SetItem(aKey, av.SetItem(bKey, Some));
        </div></div></div><div class="member-title"><a name="Sum&lt;K>"></a>Sum&lt;K&gt;(Map&lt;K, int&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sum_K_Map_K_int_self_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">self</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="ident">Sum</span>&lt;<span class="ident">K</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">K</span>, <span class="keyword">int</span>&gt; self)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Sum_K_Map_K_int_self_"><div class="section_title">SOURCE</div><div class="code">
            self.Values.Sum()</div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, D, V>"></a>TrySetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;

            return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, dKey, value));
        </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, D, V>"></a>TrySetItemT&lt;A, B, C, D, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, Map&lt;D, V&gt;&gt;&gt;&gt;, A, B, C, D, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">dKey</div><div class="arg-type"><span class="ident">D</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">D</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">D</span> dKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">Map</span>&lt;<span class="ident">D</span>, <span class="ident">V</span>&gt;&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_D_V_Map_A_Map&lt;B, Map&lt;C, Map&lt;D, V>>>_map__A__aKey__B__bKey__C__cKey__D__dKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;

            return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, dKey, Some));
        </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, V>"></a>TrySetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;

            return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, value));
        </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, C, V>"></a>TrySetItemT&lt;A, B, C, V&gt;(Map&lt;A, Map&lt;B, Map&lt;C, V&gt;&gt;&gt;, A, B, C, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">cKey</div><div class="arg-type"><span class="ident">C</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">C</span> cKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">Map</span>&lt;<span class="ident">C</span>, <span class="ident">V</span>&gt;&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_C_V_Map_A_Map&lt;B, Map&lt;C, V>>_map__A__aKey__B__bKey__C__cKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;

            return map.SetItem(aKey, av.TrySetItemT(bKey, cKey, Some));
        </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, V>"></a>TrySetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, V)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__V__value_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">value</div><div class="arg-type"><span class="ident">V</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">V</span> value)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__V__value_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;
            return map.SetItem(aKey, av.TrySetItem(bKey, value));
        </div></div></div><div class="member-title"><a name="TrySetItemT&lt;A, B, V>"></a>TrySetItemT&lt;A, B, V&gt;(Map&lt;A, Map&lt;B, V&gt;&gt;, A, B, Func&lt;V, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">aKey</div><div class="arg-type"><span class="ident">A</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">bKey</div><div class="arg-type"><span class="ident">B</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; <span class="ident">TrySetItemT</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">V</span>&gt;(<span class="keyword">this</span> <span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt; map, <span class="ident">A</span> aKey, <span class="ident">B</span> bKey, <span class="ident">Func</span>&lt;<span class="ident">V</span>, <span class="ident">V</span>&gt; Some)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Map</span>&lt;<span class="ident">A</span>, <span class="ident">Map</span>&lt;<span class="ident">B</span>, <span class="ident">V</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-TrySetItemT_A_B_V_Map_A_Map&lt;B, V>_map__A__aKey__B__bKey__Func_V_V_Some_"><div class="section_title">SOURCE</div><div class="code">
            var a = map.Find(aKey);
            if (a.IsNone) return map;
            var av = a.Value;
            return map.SetItem(aKey, av.TrySetItem(bKey, Some));
        </div></div></div></div></body></html>