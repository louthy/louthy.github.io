<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="Trans_OuterMonad_OuterType_InnerMonad_InnerType_A.htm">Trans&lt;OuterMonad, OuterType, InnerMonad, InnerType, A&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Inst">Inst</a><h3 >METHODS</h3><a class="nav-link" href="#Bind&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>">Bind&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, NewInnerType&gt;)</a><a class="nav-link" href="#Count">Count(OuterType)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(OuterType, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBack&lt;S>">FoldBack&lt;S&gt;(OuterType, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#Map&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>">Map&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, B&gt;)</a><a class="nav-link" href="#Plus">Plus(OuterType, OuterType)</a><a class="nav-link" href="#Sequence&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType>">Sequence&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType&gt;(OuterType)</a><a class="nav-link" href="#Traverse&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>">Traverse&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, B&gt;)</a><a class="nav-link" href="#Zero">Zero()</a></div><div class="content-panel"><h1 >Trans&lt;OuterMonad, OuterType, InnerMonad, InnerType, A&gt; Struct</h1><p ><span >Default monad transformer, can nest any two monadic types and provide the correct default behaviour based on their Bind operations.<br/><br/><div class='code-line'>     i.e.</div><br/><br/><div class='code-line'>         Trans&lt;MLst&lt;Option&lt;int&gt;&gt;, Lst&lt;Option&lt;int&gt;&gt;, MOption&lt;int&gt;, Option&lt;int&gt;, int&gt;</div><br/><br/> </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">Trans</span>&lt;<span class="ident">OuterMonad</span>, <span class="ident">OuterType</span>, <span class="ident">InnerMonad</span>, <span class="ident">InnerType</span>, <span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">MonadTrans</span>&lt;<span class="ident">OuterMonad</span>, <span class="ident">OuterType</span>, <span class="ident">InnerMonad</span>, <span class="ident">InnerType</span>, <span class="ident">A</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Fields</h2><div class="member-title"><a name="Inst"></a>Inst</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">Trans</span>&lt;<span class="ident">OuterMonad</span>, <span class="ident">OuterType</span>, <span class="ident">InnerMonad</span>, <span class="ident">InnerType</span>, <span class="ident">A</span>&gt; <span class="ident">Inst</span></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Bind&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>"></a>Bind&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, NewInnerType&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_NewInnerType_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">NewInnerType</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">NewOuterType</span> <span class="ident">Bind</span>&lt;<span class="ident">NewOuterMonad</span>, <span class="ident">NewOuterType</span>, <span class="ident">NewInnerMonad</span>, <span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;(<span class="ident">OuterType</span> ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">NewInnerType</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewOuterType</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">NewOuterMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewOuterType</span>, <span class="ident">NewInnerType</span>&gt;</div><div class="code"><span class="keyword">where</span> <span class="ident">NewInnerMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Bind_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_NewInnerType_f_"><div class="section_title">SOURCE</div><div class="code">
                MOuter.Bind&lt;NewOuterMonad, NewOuterType, NewInnerType&gt;(ma,
                    inner =&gt;
                        default(NewOuterMonad).Return(
                            MInner.Bind&lt;NewInnerMonad, NewInnerType, B&gt;(inner, f)))</div></div></div><div class="member-title"><a name="Count"></a>Count(OuterType)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__OuterType__ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>(<span class="ident">OuterType</span> ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Count__OuterType__ma_"><div class="section_title">SOURCE</div><div class="code">
            MOuter.Fold(ma, 0, (s, inner) =&gt;
                s + MInner.Count(inner)(unit))(unit)</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(OuterType, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_OuterType__ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">OuterType</span> ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Fold_S_OuterType__ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code">
            MOuter.Fold(ma, state, (s, inner) =&gt;
                MInner.Fold(inner, s, f)(unit))(unit)</div></div></div><div class="member-title"><a name="FoldBack&lt;S>"></a>FoldBack&lt;S&gt;(OuterType, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_S_OuterType__ma__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">FoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">OuterType</span> ma, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"></div></div></div><div style="display:none" id="code-FoldBack_S_OuterType__ma__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code">
            MOuter.FoldBack(ma, state, (s, inner) =&gt;
                MInner.FoldBack(inner, s, f)(unit))(unit)</div></div></div><div class="member-title"><a name="Map&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>"></a>Map&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">NewOuterType</span> <span class="ident">Map</span>&lt;<span class="ident">NewOuterMonad</span>, <span class="ident">NewOuterType</span>, <span class="ident">NewInnerMonad</span>, <span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;(<span class="ident">OuterType</span> ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewOuterType</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">NewOuterMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewOuterType</span>, <span class="ident">NewInnerType</span>&gt;</div><div class="code"><span class="keyword">where</span> <span class="ident">NewInnerMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Map_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
                MOuter.Bind&lt;NewOuterMonad, NewOuterType, NewInnerType&gt;(ma,
                    inner =&gt;
                        default(NewOuterMonad).Return(
                            MInner.Bind&lt;NewInnerMonad, NewInnerType, B&gt;(inner,
                                a =&gt; default(NewInnerMonad).Return(f(a)))))</div></div></div><div class="member-title"><a name="Plus"></a>Plus(OuterType, OuterType)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Plus__OuterType__ma__OuterType__mb_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">mb</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">OuterType</span> <span class="ident">Plus</span>(<span class="ident">OuterType</span> ma, <span class="ident">OuterType</span> mb)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OuterType</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Plus__OuterType__ma__OuterType__mb_"><div class="section_title">SOURCE</div><div class="code">
            MOuter.Bind&lt;OuterMonad, OuterType, InnerType&gt;(ma, a =&gt;
               MOuter.Bind&lt;OuterMonad, OuterType, InnerType&gt;(mb, b =&gt;
                  MOuter.Return(MInner.Plus(a, b))))</div></div></div><div class="member-title"><a name="Sequence&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType>"></a>Sequence&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType&gt;(OuterType)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Sequence_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_OuterType__ma_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">NewOuterType</span> <span class="ident">Sequence</span>&lt;<span class="ident">NewOuterMonad</span>, <span class="ident">NewOuterType</span>, <span class="ident">NewInnerMonad</span>, <span class="ident">NewInnerType</span>&gt;(<span class="ident">OuterType</span> ma)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewOuterType</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">NewOuterMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewOuterType</span>, <span class="ident">NewInnerType</span>&gt;</div><div class="code"><span class="keyword">where</span> <span class="ident">NewInnerMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewInnerType</span>, <span class="ident">A</span>&gt;</div></div><div style="display:none" id="code-Sequence_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_OuterType__ma_"><div class="section_title">SOURCE</div><div class="code">
                Traverse&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, A&gt;(ma, identity)</div></div></div><div class="member-title"><a name="Traverse&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B>"></a>Traverse&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;(OuterType, Func&lt;A, B&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Traverse_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_B_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">ma</div><div class="arg-type"><span class="ident">OuterType</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">NewOuterType</span> <span class="ident">Traverse</span>&lt;<span class="ident">NewOuterMonad</span>, <span class="ident">NewOuterType</span>, <span class="ident">NewInnerMonad</span>, <span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;(<span class="ident">OuterType</span> ma, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">NewOuterType</span></div><div class="normal"></div></div><div class="section_title">CONSTRAINTS</div><div class="code"><span class="keyword">where</span> <span class="ident">NewOuterMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewOuterType</span>, <span class="ident">NewInnerType</span>&gt;</div><div class="code"><span class="keyword">where</span> <span class="ident">NewInnerMonad</span> : <span class="keyword">struct</span> <span class="ident">Monad</span>&lt;<span class="ident">NewInnerType</span>, <span class="ident">B</span>&gt;</div></div><div style="display:none" id="code-Traverse_NewOuterMonad_NewOuterType_NewInnerMonad_NewInnerType_B_OuterType__ma__Func_A_B_f_"><div class="section_title">SOURCE</div><div class="code">
                MOuter.Fold(ma, default(NewOuterMonad).Return(default(NewInnerMonad).Zero()), (outerState, innerA) =&gt;
                    Trans&lt;NewOuterMonad, NewOuterType, NewInnerMonad, NewInnerType, B&gt;.Inst.Plus(outerState,
                        MInner.Bind&lt;NewOuterMonad, NewOuterType, NewInnerType&gt;(innerA, a =&gt;
                            default(NewOuterMonad).Return(default(NewInnerMonad).Return(f(a))))))(unit)</div></div></div><div class="member-title"><a name="Zero"></a>Zero()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Zero__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">OuterType</span> <span class="ident">Zero</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">OuterType</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Zero__"><div class="section_title">SOURCE</div><div class="code">
            MOuter.Return(MInner.Zero())</div></div></div></div></body></html>