<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="EitherUnsafe_L_R.htm">EitherUnsafe&lt;L, R&gt;</span></div><div class="nav-panel"><h3 >CONSTRUCTORS</h3><a class="nav-link" href="#EitherUnsafe">EitherUnsafe(IEnumerable&lt;EitherData&lt;L, R&gt;&gt;)</a><h3 >FIELDS</h3><a class="nav-link" href="#Bottom">Bottom</a><a class="nav-link" href="#State">State</a><h3 >PROPERTIES</h3><a class="nav-link" href="#IsBottom">IsBottom</a><a class="nav-link" href="#IsLeft">IsLeft</a><a class="nav-link" href="#IsRight">IsRight</a><h3 >METHODS</h3><a class="nav-link" href="#BiExists">BiExists(Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#BiFold&lt;S>">BiFold&lt;S&gt;(S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)</a><a class="nav-link" href="#BiForAll">BiForAll(Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)</a><a class="nav-link" href="#BiIter">BiIter(Action&lt;R&gt;, Action&lt;L&gt;)</a><a class="nav-link" href="#BiMap&lt;L2, R2>">BiMap&lt;L2, R2&gt;(Func&lt;R, R2&gt;, Func&lt;L, L2&gt;)</a><a class="nav-link" href="#BiMap&lt;LRet, Ret>">BiMap&lt;LRet, Ret&gt;(Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#Bind&lt;Ret>">Bind&lt;Ret&gt;(Func&lt;R, EitherUnsafe&lt;L, Ret&gt;&gt;)</a><a class="nav-link" href="#CompareTo">CompareTo(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#CompareTo">CompareTo(R)</a><a class="nav-link" href="#CompareTo">CompareTo(L)</a><a class="nav-link" href="#Count">Count()</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#Equals">Equals(R)</a><a class="nav-link" href="#Equals">Equals(L)</a><a class="nav-link" href="#Equals">Equals(EitherUnsafe&lt;L, R&gt;)</a><a class="nav-link" href="#Exists">Exists(Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Filter">Filter(Func&lt;R, bool&gt;)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(S, Func&lt;S, R, S&gt;)</a><a class="nav-link" href="#ForAll">ForAll(Func&lt;R, bool&gt;)</a><a class="nav-link" href="#GetEnumerator">GetEnumerator()</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#GetUnderlyingLeftType">GetUnderlyingLeftType()</a><a class="nav-link" href="#GetUnderlyingRightType">GetUnderlyingRightType()</a><a class="nav-link" href="#GetUnderlyingType">GetUnderlyingType()</a><a class="nav-link" href="#IfLeftUnsafe">IfLeftUnsafe(Func&lt;R&gt;)</a><a class="nav-link" href="#IfLeftUnsafe">IfLeftUnsafe(Func&lt;L, R&gt;)</a><a class="nav-link" href="#IfLeftUnsafe">IfLeftUnsafe(R)</a><a class="nav-link" href="#IfLeftUnsafe">IfLeftUnsafe(Action&lt;L&gt;)</a><a class="nav-link" href="#IfRightUnsafe">IfRightUnsafe(Action&lt;R&gt;)</a><a class="nav-link" href="#IfRightUnsafe">IfRightUnsafe(L)</a><a class="nav-link" href="#IfRightUnsafe">IfRightUnsafe(Func&lt;L&gt;)</a><a class="nav-link" href="#IfRightUnsafe">IfRightUnsafe(Func&lt;R, L&gt;)</a><a class="nav-link" href="#Iter">Iter(Action&lt;R&gt;)</a><a class="nav-link" href="#Join&lt;U, K, V>">Join&lt;U, K, V&gt;(EitherUnsafe&lt;L, U&gt;, Func&lt;R, K&gt;, Func&lt;U, K&gt;, Func&lt;R, U, V&gt;)</a><a class="nav-link" href="#LeftAsEnumerable">LeftAsEnumerable()</a><a class="nav-link" href="#LeftToArray">LeftToArray()</a><a class="nav-link" href="#LeftToList">LeftToList()</a><a class="nav-link" href="#LeftToSeq">LeftToSeq()</a><a class="nav-link" href="#Map&lt;Ret>">Map&lt;Ret&gt;(Func&lt;R, Ret&gt;)</a><a class="nav-link" href="#MapLeft&lt;Ret>">MapLeft&lt;Ret&gt;(Func&lt;L, Ret&gt;)</a><a class="nav-link" href="#MatchAsyncUnsafe&lt;R2>">MatchAsyncUnsafe&lt;R2&gt;(Func&lt;R, Task&lt;R2&gt;&gt;, Func&lt;L, R2&gt;)</a><a class="nav-link" href="#MatchAsyncUnsafe&lt;R2>">MatchAsyncUnsafe&lt;R2&gt;(Func&lt;R, Task&lt;R2&gt;&gt;, Func&lt;L, Task&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MatchObservableUnsafe&lt;R2>">MatchObservableUnsafe&lt;R2&gt;(Func&lt;R, IObservable&lt;R2&gt;&gt;, Func&lt;L, R2&gt;)</a><a class="nav-link" href="#MatchObservableUnsafe&lt;R2>">MatchObservableUnsafe&lt;R2&gt;(Func&lt;R, IObservable&lt;R2&gt;&gt;, Func&lt;L, IObservable&lt;R2&gt;&gt;)</a><a class="nav-link" href="#MatchUnsafe">MatchUnsafe(Action&lt;R&gt;, Action&lt;L&gt;, Action)</a><a class="nav-link" href="#MatchUnsafe&lt;Ret>">MatchUnsafe&lt;Ret&gt;(Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;, Func&lt;Ret&gt;)</a><a class="nav-link" href="#MatchUntyped&lt;R1>">MatchUntyped&lt;R1&gt;(Func&lt;object, R1&gt;, Func&lt;R1&gt;)</a><a class="nav-link" href="#MatchUntyped&lt;TResult>">MatchUntyped&lt;TResult&gt;(Func&lt;object, TResult&gt;, Func&lt;object, TResult&gt;)</a><a class="nav-link" href="#Right">Right(Action&lt;R&gt;)</a><a class="nav-link" href="#Right&lt;Ret>">Right&lt;Ret&gt;(Func&lt;R, Ret&gt;)</a><a class="nav-link" href="#RightAsEnumerable">RightAsEnumerable()</a><a class="nav-link" href="#RightToArray">RightToArray()</a><a class="nav-link" href="#RightToList">RightToList()</a><a class="nav-link" href="#RightToSeq">RightToSeq()</a><a class="nav-link" href="#Select&lt;U>">Select&lt;U&gt;(Func&lt;R, U&gt;)</a><a class="nav-link" href="#SelectMany&lt;U, V>">SelectMany&lt;U, V&gt;(Func&lt;R, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;R, U, V&gt;)</a><a class="nav-link" href="#ToArray">ToArray()</a><a class="nav-link" href="#ToEither">ToEither()</a><a class="nav-link" href="#ToList">ToList()</a><a class="nav-link" href="#ToOption">ToOption()</a><a class="nav-link" href="#ToString">ToString()</a><a class="nav-link" href="#ToTryOption">ToTryOption()</a><a class="nav-link" href="#Where">Where(Func&lt;R, bool&gt;)</a></div><div class="content-panel"><h1 >EitherUnsafe&lt;L, R&gt; Struct</h1><p ><span >Either L R Holds one of two values &#39;Left&#39; or &#39;Right&#39;.  Usually &#39;Left&#39; is considered &#39;wrong&#39; or &#39;in error&#39;, and &#39;Right&#39; is, well, right.  So when the Either is in a Left state, it cancels computations like bind or map, etc.  So you can see Left as an &#39;early out, with a message&#39;.  Unlike Option that has None as its alternative value (i.e. it has an &#39;early out, but no message&#39;). </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Serializable]</div><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEnumerable</span>&lt;<span class="ident">EitherData</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEither</span></span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IComparable</span>&lt;<span class="ident">R</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">R</span>&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div><div class="section"><div class="section_title">REMARKS</div><span >NOTE: If you use Filter or Where (or &#39;where&#39; in a LINQ expression) with Either, then the Either  will be put into a &#39;Bottom&#39; state if the predicate returns false.  When it&#39;s in this state it is  neither Right nor Left.  And any usage could trigger a BottomException.  So be aware of the issue of filtering Either.<br/><br/> Also note, when the Either is in a Bottom state, some operations on it will continue to give valid results or return another Either in the Bottom state and not throw.  This is so a filtered Either  doesn&#39;t needlessly break expressions.  </span></div></div><h2 >Constructors</h2><div class="member-title"><a name="EitherUnsafe"></a>EitherUnsafe(IEnumerable&lt;EitherData&lt;L, R&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-EitherUnsafe__IEnumerable_EitherData&lt;L, R>_either_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Ctor that facilitates serialisation </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">either</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">EitherData</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">ctor</span> <span class="ident">EitherUnsafe</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">EitherData</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; either)</div></div><div style="display:none" id="code-EitherUnsafe__IEnumerable_EitherData&lt;L, R>_either_"><div class="section_title">SOURCE</div><div class="code">
            var first = either.Take(1).ToArray();
            if (first.Length == 0)
            {
                this.State = EitherStatus.IsBottom;
                this.right = default(R);
                this.left = default(L);
            }
            else
            {
                this.right = first[0].Right;
                this.left = first[0].Left;
                this.State =first[0].State;
            }
        </div></div></div><h2 >Fields</h2><div class="member-title"><a name="Bottom"></a>Bottom</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Bottom</span></div></div></div><div class="member-title"><a name="State"></a>State</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >State of the EitherUnsafe You can also use:<div class='code-line'>     IsRight</div><div class='code-line'>     IsLeft</div><div class='code-line'>     IsBottom</div> </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">readonly</span> <span class="ident">EitherStatus</span> <span class="ident">State</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="IsBottom"></a>IsBottom</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Is the EitherUnsafe in a Bottom state? When the EitherUnsafe is filtered, both Right and Left are meaningless.<br/><br/> If you use Filter or Where (or &#39;where&#39; in a LINQ expression) with EitherUnsafe, then the EitherUnsafe  will be put into a &#39;Bottom&#39; state if the predicate returns false.  When it&#39;s in this state it is  neither Right nor Left.  And any usage could trigger a BottomException.  So be aware of the issue of filtering Either.<br/><br/> Also note, when the EitherUnsafe is in a Bottom state, some operations on it will continue to give valid results or return another EitherUnsafe in the Bottom state and not throw.  This is so a filtered EitherUnsafe  doesn&#39;t needlessly break expressions.  </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsBottom</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsLeft"></a>IsLeft</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Is the EitherUnsafe in a Left state? </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsLeft</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsRight"></a>IsRight</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Is the EitherUnsafe in a Right state? </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsRight</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="BiExists"></a>BiExists(Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiExists__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the EitherUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Right predicate</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Left predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">BiExists</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the predicate returns True.  False otherwise or if the EitherUnsafe is in a bottom state.</span></div></div></div><div style="display:none" id="code-BiExists__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            biExists&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="BiFold&lt;S>"></a>BiFold&lt;S&gt;(S, Func&lt;S, R, S&gt;, Func&lt;S, L, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiFold_S_S__state__Func_S_R_S_Right__Func_S_L_S_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >EitherUnsafe types are like lists of 0 or 1 items, and therefore follow the  same rules when folding. <br/><br/> In the case of lists, &#39;Fold&#39;, when applied to a binary operator, a starting value(typically the left-identity of the operator), and a list, reduces the list using the binary operator, from left to right: <br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if EitherUnsafe is in a Right state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if EitherUnsafe is in a Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">BiFold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">L</span>, <span class="ident">S</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-BiFold_S_S__state__Func_S_R_S_Right__Func_S_L_S_Left_"><div class="section_title">SOURCE</div><div class="code">
            MEitherUnsafe&lt;L, R&gt;.Inst.BiFold(this, state, Left, Right)</div></div></div><div class="member-title"><a name="BiForAll"></a>BiForAll(Func&lt;R, bool&gt;, Func&lt;L, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiForAll__Func_R_bool_Right__Func_L_bool_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the EitherUnsafe if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">BiForAll</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="keyword">bool</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if EitherUnsafe Predicate returns true</span></div></div></div><div style="display:none" id="code-BiForAll__Func_R_bool_Right__Func_L_bool_Left_"><div class="section_title">SOURCE</div><div class="code">
            biForAll&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="BiIter"></a>BiIter(Action&lt;R&gt;, Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiIter__Action_R_Right__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the EitherUnsafe action is invoked if in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">BiIter</span>(<span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-BiIter__Action_R_Right__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            biIter&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="BiMap&lt;L2, R2>"></a>BiMap&lt;L2, R2&gt;(Func&lt;R, R2&gt;, Func&lt;L, L2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiMap_L2_R2_Func_R_R2_Right__Func_L_L2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the EitherUnsafe if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt;</div></div><div class="arg-desc"><span >Right map function</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">L2</span>&gt;</div></div><div class="arg-desc"><span >Left map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L2</span>, <span class="ident">R2</span>&gt; <span class="ident">BiMap</span>&lt;<span class="ident">L2</span>, <span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">R2</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">L2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L2</span>, <span class="ident">R2</span>&gt;</div><div class="normal"><span >Mapped EitherUnsafe</span></div></div></div><div style="display:none" id="code-BiMap_L2_R2_Func_R_R2_Right__Func_L_L2_Left_"><div class="section_title">SOURCE</div><div class="code">
            FEitherUnsafeBi&lt;L, R, L2, R2&gt;.Inst.BiMap(this, Left, Right)</div></div></div><div class="member-title"><a name="BiMap&lt;LRet, Ret>"></a>BiMap&lt;LRet, Ret&gt;(Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-BiMap_LRet_Ret_Func_R_Ret_Right__Func_L_Ret_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Bi-maps the value in the EitherUnsafe if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Right map function</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Left map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">BiMap</span>&lt;<span class="ident">LRet</span>, <span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped EitherUnsafe</span></div></div></div><div style="display:none" id="code-BiMap_LRet_Ret_Func_R_Ret_Right__Func_L_Ret_Left_"><div class="section_title">SOURCE</div><div class="code">
            FEitherUnsafe&lt;L, R, Ret&gt;.Inst.BiMap(this, Left, Right)</div></div></div><div class="member-title"><a name="Bind&lt;Ret>"></a>Bind&lt;Ret&gt;(Func&lt;R, EitherUnsafe&lt;L, Ret&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_Ret_Func_R_EitherUnsafe&lt;L, Ret>_binder_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">binder</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt;</div></div><div class="arg-desc"><span ></span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;&gt; binder)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Bound EitherUnsafe</span></div></div></div><div style="display:none" id="code-Bind_Ret_Func_R_EitherUnsafe&lt;L, Ret>_binder_"><div class="section_title">SOURCE</div><div class="code">
            MEitherUnsafe&lt;L, R&gt;.Inst.Bind&lt;MEitherUnsafe&lt;L, Ret&gt;, EitherUnsafe&lt;L, Ret&gt;, Ret&gt;(this, binder)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__EitherUnsafe_L_R_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__EitherUnsafe_L_R_other_"><div class="section_title">SOURCE</div><div class="code">
            OrdChoice&lt;OrdDefault&lt;L&gt;, OrdDefault&lt;R&gt;, MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;.Inst.Compare(this, other)</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__R__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">R</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__R__other_"><div class="section_title">SOURCE</div><div class="code">
            CompareTo(RightUnsafe&lt;L, R&gt;(other))</div></div></div><div class="member-title"><a name="CompareTo"></a>CompareTo(L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CompareTo__L__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >CompareTo override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">L</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">CompareTo</span>(<span class="ident">L</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-CompareTo__L__other_"><div class="section_title">SOURCE</div><div class="code">
            CompareTo(LeftUnsafe&lt;L, R&gt;(other))</div></div></div><div class="member-title"><a name="Count"></a>Count()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Counts the EitherUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >1 if the EitherUnsafe is in a Right state, 0 otherwise.</span></div></div></div><div style="display:none" id="code-Count__"><div class="section_title">SOURCE</div><div class="code">
            IsBottom || IsLeft
                ? 0
                : 1</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality check </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div><div class="arg-desc"><span >Object to test for equality</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if equal</span></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            !ReferenceEquals(obj, null) &amp;&amp;
            obj is EitherUnsafe&lt;L, R&gt; &amp;&amp;
            EqChoice&lt;EqDefault&lt;L&gt;, EqDefault&lt;R&gt;, MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;.Inst.Equals(this, (EitherUnsafe&lt;L, R&gt;)obj)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__R__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">R</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">R</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__R__other_"><div class="section_title">SOURCE</div><div class="code">
            Equals(Right&lt;L, R&gt;(other))</div></div></div><div class="member-title"><a name="Equals"></a>Equals(L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__L__other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">L</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">L</span> other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__L__other_"><div class="section_title">SOURCE</div><div class="code">
            Equals(Left&lt;L, R&gt;(other))</div></div></div><div class="member-title"><a name="Equals"></a>Equals(EitherUnsafe&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__EitherUnsafe_L_R_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Equality override </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__EitherUnsafe_L_R_other_"><div class="section_title">SOURCE</div><div class="code">
            EqChoice&lt;EqDefault&lt;L&gt;, EqDefault&lt;R&gt;, MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;.Inst.Equals(this, other)</div></div></div><div class="member-title"><a name="Exists"></a>Exists(Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Exists__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the EitherUnsafe if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Exists</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the EitherUnsafe is in a Right state and the predicate returns True.  False otherwise.</span></div></div></div><div style="display:none" id="code-Exists__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            exists&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R&gt;(this, pred)</div></div></div><div class="member-title"><a name="Filter"></a>Filter(Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the EitherUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate function</span></div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The EitherUnsafe won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Filter</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the EitherUnsafe is returned as-is. If the predicate returns False the EitherUnsafe is returned in a &#39;Bottom&#39; state.</span></div></div></div><div style="display:none" id="code-Filter__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            filter&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R&gt;(this, pred)</div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(S, Func&lt;S, R, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_S__state__Func_S_R_S_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >EitherUnsafe types are like lists of 0 or 1 items, and therefore follow the  same rules when folding. <br/><br/> In the case of lists, &#39;Fold&#39;, when applied to a binary operator, a starting value(typically the left-identity of the operator), and a list, reduces the list using the binary operator, from left to right: <br/><br/> </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc"><span >Initial state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc"><span >Folder function, applied if structure is in a Right state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">S</span> <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">R</span>, <span class="ident">S</span>&gt; Right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">S</span></div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-Fold_S_S__state__Func_S_R_S_Right_"><div class="section_title">SOURCE</div><div class="code">
            MEitherUnsafe&lt;L, R&gt;.Inst.Fold(this, state, Right)(unit)</div></div></div><div class="member-title"><a name="ForAll"></a>ForAll(Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ForAll__Func_R_bool_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes a predicate on the value of the EitherUnsafe if it&#39;s in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">ForAll</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; Right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if the EitherUnsafe is in a Left state.   True if the EitherUnsafe is in a Right state and the predicate returns True.   False otherwise.</span></div></div></div><div style="display:none" id="code-ForAll__Func_R_bool_Right_"><div class="section_title">SOURCE</div><div class="code">
            forall&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R&gt;(this, Right)</div></div></div><div class="member-title"><a name="GetEnumerator"></a>GetEnumerator()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetEnumerator__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">IEnumerator</span>&lt;<span class="ident">EitherData</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt; <span class="ident">GetEnumerator</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerator</span>&lt;<span class="ident">EitherData</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetEnumerator__"><div class="section_title">SOURCE</div><div class="code">
            EitherEnum().GetEnumerator()</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns a hash code of the wrapped value of the EitherUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"><span >Hash code</span></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            hashCode&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="GetUnderlyingLeftType"></a>GetUnderlyingLeftType()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetUnderlyingLeftType__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find out the underlying Left type </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Type</span> <span class="ident">GetUnderlyingLeftType</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Type</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetUnderlyingLeftType__"><div class="section_title">SOURCE</div><div class="code">
            typeof(L)</div></div></div><div class="member-title"><a name="GetUnderlyingRightType"></a>GetUnderlyingRightType()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetUnderlyingRightType__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Find out the underlying Right type </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Type</span> <span class="ident">GetUnderlyingRightType</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Type</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetUnderlyingRightType__"><div class="section_title">SOURCE</div><div class="code">
            typeof(R)</div></div></div><div class="member-title"><a name="GetUnderlyingType"></a>GetUnderlyingType()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetUnderlyingType__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Type</span> <span class="ident">GetUnderlyingType</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Type</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetUnderlyingType__"><div class="section_title">SOURCE</div><div class="code">
            typeof(R)</div></div></div><div class="member-title"><a name="IfLeftUnsafe"></a>IfLeftUnsafe(Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfLeftUnsafe__Func_R_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left function if the EitherUnsafe is in a Left state. Returns the Right value if the EitherUnsafe is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Right value if in the Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R</span> <span class="ident">IfLeftUnsafe</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-IfLeftUnsafe__Func_R_Left_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Left)</div></div></div><div class="member-title"><a name="IfLeftUnsafe"></a>IfLeftUnsafe(Func&lt;L, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfLeftUnsafe__Func_L_R_leftMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the leftMap function if the EitherUnsafe is in a Left state. Returns the Right value if the EitherUnsafe is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">leftMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Right value if in the Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R</span> <span class="ident">IfLeftUnsafe</span>(<span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; leftMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-IfLeftUnsafe__Func_L_R_leftMap_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, leftMap)</div></div></div><div class="member-title"><a name="IfLeftUnsafe"></a>IfLeftUnsafe(R)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfLeftUnsafe__R__rightValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the rightValue if the EitherUnsafe is in a Left state. Returns the Right value if the EitherUnsafe is in a Right state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">rightValue</div><div class="arg-type"><span class="ident">R</span></div></div><div class="arg-desc"><span >Value to return if in the Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R</span> <span class="ident">IfLeftUnsafe</span>(<span class="ident">R</span> rightValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Returns an unwrapped Right value</span></div></div></div><div style="display:none" id="code-IfLeftUnsafe__R__rightValue_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, rightValue)</div></div></div><div class="member-title"><a name="IfLeftUnsafe"></a>IfLeftUnsafe(Action&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfLeftUnsafe__Action_L_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Executes the Left action if the EitherUnsafe is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Right value if in the Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfLeftUnsafe</span>(<span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left)</div></div><div style="display:none" id="code-IfLeftUnsafe__Action_L_Left_"><div class="section_title">SOURCE</div><div class="code">
            ifLeft&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Left)</div></div></div><div class="member-title"><a name="IfRightUnsafe"></a>IfRightUnsafe(Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfRightUnsafe__Action_R_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right action if the EitherUnsafe is in a Right state, otherwise does nothing </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">IfRightUnsafe</span>(<span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right)</div></div><div style="display:none" id="code-IfRightUnsafe__Action_R_Right_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Right)</div></div></div><div class="member-title"><a name="IfRightUnsafe"></a>IfRightUnsafe(L)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfRightUnsafe__L__leftValue_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the leftValue if the EitherUnsafe is in a Right state. Returns the Left value if the EitherUnsafe is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">leftValue</div><div class="arg-type"><span class="ident">L</span></div></div><div class="arg-desc"><span >Value to return if in the Left state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">L</span> <span class="ident">IfRightUnsafe</span>(<span class="ident">L</span> leftValue)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-IfRightUnsafe__L__leftValue_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, leftValue)</div></div></div><div class="member-title"><a name="IfRightUnsafe"></a>IfRightUnsafe(Func&lt;L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfRightUnsafe__Func_L_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of Right() if the EitherUnsafe is in a Right state. Returns the Left value if the EitherUnsafe is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Left value if in the Right state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">L</span> <span class="ident">IfRightUnsafe</span>(<span class="ident">Func</span>&lt;<span class="ident">L</span>&gt; Right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-IfRightUnsafe__Func_L_Right_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, Right)</div></div></div><div class="member-title"><a name="IfRightUnsafe"></a>IfRightUnsafe(Func&lt;R, L&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IfRightUnsafe__Func_R_L_rightMap_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the result of rightMap if the EitherUnsafe is in a Right state. Returns the Left value if the EitherUnsafe is in a Left state. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">rightMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt;</div></div><div class="arg-desc"><span >Function to generate a Left value if in the Right state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">L</span> <span class="ident">IfRightUnsafe</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">L</span>&gt; rightMap)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">L</span></div><div class="normal"><span >Returns an unwrapped Left value</span></div></div></div><div style="display:none" id="code-IfRightUnsafe__Func_R_L_rightMap_"><div class="section_title">SOURCE</div><div class="code">
            ifRight&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this, rightMap)</div></div></div><div class="member-title"><a name="Iter"></a>Iter(Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Iter__Action_R_Right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Iterate the EitherUnsafe action is invoked if in the Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">Iter</span>(<span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right)</div></div><div style="display:none" id="code-Iter__Action_R_Right_"><div class="section_title">SOURCE</div><div class="code">
            iter&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R&gt;(this, Right)</div></div></div><div class="member-title"><a name="Join&lt;U, K, V>"></a>Join&lt;U, K, V&gt;(EitherUnsafe&lt;L, U&gt;, Func&lt;R, K&gt;, Func&lt;U, K&gt;, Func&lt;R, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Join_U_K_V_EitherUnsafe_L_U_inner__Func_R_K_outerKeyMap__Func_U_K_innerKeyMap__Func_R_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">inner</div><div class="arg-type"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">outerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">innerKeyMap</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt; <span class="ident">Join</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>, <span class="ident">V</span>&gt;(<span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt; inner, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">K</span>&gt; outerKeyMap, <span class="ident">Func</span>&lt;<span class="ident">U</span>, <span class="ident">K</span>&gt; innerKeyMap, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Join_U_K_V_EitherUnsafe_L_U_inner__Func_R_K_outerKeyMap__Func_U_K_innerKeyMap__Func_R_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            join&lt;EqDefault&lt;K&gt;, MEitherUnsafe&lt;L, R&gt;, MEitherUnsafe&lt;L, U&gt;, MEitherUnsafe&lt;L, V&gt;, EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, U&gt;, EitherUnsafe&lt;L, V&gt;, R, U, K, V&gt;(
                this, inner, outerKeyMap, innerKeyMap, project
                )</div></div></div><div class="member-title"><a name="LeftAsEnumerable"></a>LeftAsEnumerable()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LeftAsEnumerable__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into a IEnumerable L </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">L</span>&gt; <span class="ident">LeftAsEnumerable</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Left state, a IEnumerable of L with one item.  A zero length IEnumerable L otherwise</span></div></div></div><div style="display:none" id="code-LeftAsEnumerable__"><div class="section_title">SOURCE</div><div class="code">
            leftAsEnumerable&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="LeftToArray"></a>LeftToArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LeftToArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into an ImmutableArray R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">L</span>&gt; <span class="ident">LeftToArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-LeftToArray__"><div class="section_title">SOURCE</div><div class="code">
            leftToArray&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="LeftToList"></a>LeftToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LeftToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into a Lst R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt; <span class="ident">LeftToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-LeftToList__"><div class="section_title">SOURCE</div><div class="code">
            leftToList&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="LeftToSeq"></a>LeftToSeq()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-LeftToSeq__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert either to sequence of 0 or 1 left values </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">L</span>&gt; <span class="ident">LeftToSeq</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">L</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-LeftToSeq__"><div class="section_title">SOURCE</div><div class="code">
            LeftAsEnumerable()</div></div></div><div class="member-title"><a name="Map&lt;Ret>"></a>Map&lt;Ret&gt;(Func&lt;R, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_Ret_Func_R_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the EitherUnsafe if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Mapped EitherUnsafe</span></div></div></div><div style="display:none" id="code-Map_Ret_Func_R_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            FEitherUnsafe&lt;L, R, Ret&gt;.Inst.Map(this, mapper)</div></div></div><div class="member-title"><a name="MapLeft&lt;Ret>"></a>MapLeft&lt;Ret&gt;(Func&lt;L, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MapLeft_Ret_Func_L_Ret_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the EitherUnsafe if it&#39;s in a Left state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt; <span class="ident">MapLeft</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">Ret</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped EitherUnsafe</span></div></div></div><div style="display:none" id="code-MapLeft_Ret_Func_L_Ret_mapper_"><div class="section_title">SOURCE</div><div class="code">
            FEitherUnsafeBi&lt;L, R, Ret, R&gt;.Inst.BiMap(this, mapper, identity)</div></div></div><div class="member-title"><a name="MatchAsyncUnsafe&lt;R2>"></a>MatchAsyncUnsafe&lt;R2&gt;(Func&lt;R, Task&lt;R2&gt;&gt;, Func&lt;L, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsyncUnsafe_R2_Func_R_Task&lt;R2>_Right__Func_L_R2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the EitherUnsafe and return a promise for a non-null R2. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchAsyncUnsafe</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"><span >A promise to return a non-null R2</span></div></div></div><div style="display:none" id="code-MatchAsyncUnsafe_R2_Func_R_Task&lt;R2>_Right__Func_L_R2_Left_"><div class="section_title">SOURCE</div><div class="code">
            matchAsync&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R, R2&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="MatchAsyncUnsafe&lt;R2>"></a>MatchAsyncUnsafe&lt;R2&gt;(Func&lt;R, Task&lt;R2&gt;&gt;, Func&lt;L, Task&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchAsyncUnsafe_R2_Func_R_Task&lt;R2>_Right__Func_L_Task&lt;R2>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the EitherUnsafe and return a promise for a non-null R2. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchAsyncUnsafe</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Task</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"><span >A promise to return a non-null R2</span></div></div></div><div style="display:none" id="code-MatchAsyncUnsafe_R2_Func_R_Task&lt;R2>_Right__Func_L_Task&lt;R2>_Left_"><div class="section_title">SOURCE</div><div class="code">
            matchAsync&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R, R2&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="MatchObservableUnsafe&lt;R2>"></a>MatchObservableUnsafe&lt;R2&gt;(Func&lt;R, IObservable&lt;R2&gt;&gt;, Func&lt;L, R2&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservableUnsafe_R2_Func_R_IObservable&lt;R2>_Right__Func_L_R2_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the EitherUnsafe and return an observable stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservableUnsafe</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">R2</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservableUnsafe_R2_Func_R_IObservable&lt;R2>_Right__Func_L_R2_Left_"><div class="section_title">SOURCE</div><div class="code">
            matchObservable&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R, R2&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="MatchObservableUnsafe&lt;R2>"></a>MatchObservableUnsafe&lt;R2&gt;(Func&lt;R, IObservable&lt;R2&gt;&gt;, Func&lt;L, IObservable&lt;R2&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchObservableUnsafe_R2_Func_R_IObservable&lt;R2>_Right__Func_L_IObservable&lt;R2>_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the two states of the EitherUnsafe and return an observable stream of non-null R2s. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt; <span class="ident">MatchObservableUnsafe</span>&lt;<span class="ident">R2</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IObservable</span>&lt;<span class="ident">R2</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-MatchObservableUnsafe_R2_Func_R_IObservable&lt;R2>_Right__Func_L_IObservable&lt;R2>_Left_"><div class="section_title">SOURCE</div><div class="code">
            matchObservable&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R, R2&gt;(this, Left, Right)</div></div></div><div class="member-title"><a name="MatchUnsafe"></a>MatchUnsafe(Action&lt;R&gt;, Action&lt;L&gt;, Action)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe__Action_R_Right__Action_L_Left__Action__Bottom_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left action depending on the state of the EitherUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if in a Right state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">L</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if in a Left state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Bottom</div><div class="arg-type"><span class="ident">Action</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">Unit</span> <span class="ident">MatchUnsafe</span>(<span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; Right, <span class="ident">Action</span>&lt;<span class="ident">L</span>&gt; Left, <span class="ident">Action</span> Bottom = null)</div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">BottomException</div><div class="normal"><span >Thrown if matching on an EitherUnsafe in a bottom state</span></div></div></div><div style="display:none" id="code-MatchUnsafe__Action_R_Right__Action_L_Left__Action__Bottom_"><div class="section_title">SOURCE</div><div class="code">
            MEitherUnsafe&lt;L, R&gt;.Inst.Match(this, Left, Right, Bottom)</div></div></div><div class="member-title"><a name="MatchUnsafe&lt;Ret>"></a>MatchUnsafe&lt;Ret&gt;(Func&lt;R, Ret&gt;, Func&lt;L, Ret&gt;, Func&lt;Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUnsafe_Ret_Func_R_Ret_Right__Func_L_Ret_Left__Func_Ret_Bottom_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Invokes the Right or Left function depending on the state of the EitherUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a Right state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Function to invoke if in a Left state</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Bottom</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">Ret</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Ret</span> <span class="ident">MatchUnsafe</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="ident">L</span>, <span class="ident">Ret</span>&gt; Left, <span class="ident">Func</span>&lt;<span class="ident">Ret</span>&gt; Bottom = null)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Ret</span></div><div class="normal"><span >The return value of the invoked function</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">BottomException</div><div class="normal"><span >Thrown if matching on an EitherUnsafe in a bottom state</span></div></div></div><div style="display:none" id="code-MatchUnsafe_Ret_Func_R_Ret_Right__Func_L_Ret_Left__Func_Ret_Bottom_"><div class="section_title">SOURCE</div><div class="code">
            MEitherUnsafe&lt;L, R&gt;.Inst.Match(this, Left, Right, Bottom)</div></div></div><div class="member-title"><a name="MatchUntyped&lt;R1>"></a>MatchUntyped&lt;R1&gt;(Func&lt;object, R1&gt;, Func&lt;R1&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUntyped_R1_Func_object_R1_Some__Func_R1_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">R1</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R1</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R1</span> <span class="ident">MatchUntyped</span>&lt;<span class="ident">R1</span>&gt;(<span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">R1</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R1</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R1</span></div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUntyped_R1_Func_object_R1_Some__Func_R1_None_"><div class="section_title">SOURCE</div><div class="code">
            matchUntyped&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R, R1&gt;(this, Some, None)</div></div></div><div class="member-title"><a name="MatchUntyped&lt;TResult>"></a>MatchUntyped&lt;TResult&gt;(Func&lt;object, TResult&gt;, Func&lt;object, TResult&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-MatchUntyped_TResult_Func_object_TResult_Right__Func_object_TResult_Left_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match the Right and Left values but as objects.  This can be useful to avoid reflection. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">Right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">TResult</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Left</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">TResult</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TResult</span> <span class="ident">MatchUntyped</span>&lt;<span class="ident">TResult</span>&gt;(<span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">TResult</span>&gt; Right, <span class="ident">Func</span>&lt;<span class="keyword">object</span>, <span class="ident">TResult</span>&gt; Left)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TResult</span></div><div class="normal"></div></div></div><div style="display:none" id="code-MatchUntyped_TResult_Func_object_TResult_Right__Func_object_TResult_Left_"><div class="section_title">SOURCE</div><div class="code">
            matchUntyped&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R, TResult&gt;(this, Left: Left, Right: Right)</div></div></div><div class="member-title"><a name="Right"></a>Right(Action&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Right__Action_R_right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match Right and return a context.  You must follow this with .Left(...) to complete the match </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">Action</span>&lt;<span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if the EitherUnsafe is in a Right state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafeUnitContext</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Right</span>(<span class="ident">Action</span>&lt;<span class="ident">R</span>&gt; right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafeUnitContext</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >Context that must have Left() called upon it.</span></div></div></div><div style="display:none" id="code-Right__Action_R_right_"><div class="section_title">SOURCE</div><div class="code">
            new EitherUnsafeUnitContext&lt;L, R&gt;(this, right)</div></div></div><div class="member-title"><a name="Right&lt;Ret>"></a>Right&lt;Ret&gt;(Func&lt;R, Ret&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Right_Ret_Func_R_Ret_right_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Match Right and return a context.  You must follow this with .Left(...) to complete the match </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">right</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div></div><div class="arg-desc"><span >Action to invoke if the EitherUnsafe is in a Right state</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafeContext</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt; <span class="ident">Right</span>&lt;<span class="ident">Ret</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">Ret</span>&gt; right)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafeContext</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>, <span class="ident">Ret</span>&gt;</div><div class="normal"><span >Context that must have Left() called upon it.</span></div></div></div><div style="display:none" id="code-Right_Ret_Func_R_Ret_right_"><div class="section_title">SOURCE</div><div class="code">
            new EitherUnsafeContext&lt;L, R, Ret&gt;(this, right)</div></div></div><div class="member-title"><a name="RightAsEnumerable"></a>RightAsEnumerable()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RightAsEnumerable__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into a IEnumerable R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">R</span>&gt; <span class="ident">RightAsEnumerable</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a IEnumerable of R with one item.  A zero length IEnumerable R otherwise</span></div></div></div><div style="display:none" id="code-RightAsEnumerable__"><div class="section_title">SOURCE</div><div class="code">
            rightAsEnumerable&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="RightToArray"></a>RightToArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RightToArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into an ImmutableArray R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">R</span>&gt; <span class="ident">RightToArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-RightToArray__"><div class="section_title">SOURCE</div><div class="code">
            rightToArray&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="RightToList"></a>RightToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RightToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into a Lst R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">RightToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-RightToList__"><div class="section_title">SOURCE</div><div class="code">
            rightToList&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="RightToSeq"></a>RightToSeq()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RightToSeq__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert either to sequence of 0 or 1 right values </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Seq</span>&lt;<span class="ident">R</span>&gt; <span class="ident">RightToSeq</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Seq</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-RightToSeq__"><div class="section_title">SOURCE</div><div class="code">
            RightAsEnumerable()</div></div></div><div class="member-title"><a name="Select&lt;U>"></a>Select&lt;U&gt;(Func&lt;R, U&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_U_Func_R_U_map_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the value in the EitherUnsafe if it&#39;s in a Right state </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">map</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>&gt;</div></div><div class="arg-desc"><span >Map function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">U</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>&gt; map)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;</div><div class="normal"><span >Mapped EitherUnsafe</span></div></div></div><div style="display:none" id="code-Select_U_Func_R_U_map_"><div class="section_title">SOURCE</div><div class="code">
            FEitherUnsafe&lt;L, R, U&gt;.Inst.Map(this, map)</div></div></div><div class="member-title"><a name="SelectMany&lt;U, V>"></a>SelectMany&lt;U, V&gt;(Func&lt;R, EitherUnsafe&lt;L, U&gt;&gt;, Func&lt;R, U, V&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_U_V_Func_R_EitherUnsafe&lt;L, U>_bind__Func_R_U_V_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Monadic bind function </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">U</span>, <span class="ident">V</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">U</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="ident">U</span>, <span class="ident">V</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">V</span>&gt;</div><div class="normal"><span >Bound EitherUnsafe</span></div></div></div><div style="display:none" id="code-SelectMany_U_V_Func_R_EitherUnsafe&lt;L, U>_bind__Func_R_U_V_project_"><div class="section_title">SOURCE</div><div class="code">
            SelectMany&lt;MEitherUnsafe&lt;L, R&gt;, MEitherUnsafe&lt;L, U&gt;, MEitherUnsafe&lt;L, V&gt;, EitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, U&gt;, EitherUnsafe&lt;L, V&gt;, R, U, V&gt;(this, bind, project)</div></div></div><div class="member-title"><a name="ToArray"></a>ToArray()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToArray__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into an ImmutableArray R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;ToArray has been deprecated.  Please use RightToArray.&quot;)]</div><span class="keyword">public</span> <span class="ident">Arr</span>&lt;<span class="ident">R</span>&gt; <span class="ident">ToArray</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Arr</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a ImmutableArray of R with one item.  A zero length ImmutableArray of R otherwise</span></div></div></div><div style="display:none" id="code-ToArray__"><div class="section_title">SOURCE</div><div class="code">
            toArray&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="ToEither"></a>ToEither()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToEither__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the EitherUnsafe to an EitherUnsafeUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">ToEither</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Either</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >EitherUnsafeUnsafe</span></div></div></div><div style="display:none" id="code-ToEither__"><div class="section_title">SOURCE</div><div class="code">
            toEither&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="ToList"></a>ToList()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToList__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Project the EitherUnsafe into a Lst R </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><div class="attr">[Obsolete(&quot;ToList has been deprecated.  Please use RightToList.&quot;)]</div><span class="keyword">public</span> <span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt; <span class="ident">ToList</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Lst</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in a Right state, a Lst of R with one item.  A zero length Lst R otherwise</span></div></div></div><div style="display:none" id="code-ToList__"><div class="section_title">SOURCE</div><div class="code">
            toList&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="ToOption"></a>ToOption()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToOption__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the EitherUnsafe to an Option </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Option</span>&lt;<span class="ident">R</span>&gt; <span class="ident">ToOption</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Some(Right) or None</span></div></div></div><div style="display:none" id="code-ToOption__"><div class="section_title">SOURCE</div><div class="code">
            toOption&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="ToString"></a>ToString()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToString__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Return a string representation of the EitherUnsafe </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="ident">ToString</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">string</span></div><div class="normal"><span >String representation of the EitherUnsafe</span></div></div></div><div style="display:none" id="code-ToString__"><div class="section_title">SOURCE</div><div class="code">
            IsBottom
                ? &quot;Bottom&quot;
                : IsRight
                    ? isnull(RightValue)
                        ? &quot;Right(null)&quot;
                        : $&quot;Right({RightValue})&quot;
                    : isnull(LeftValue)
                        ? &quot;Left(null)&quot;
                        : $&quot;Left({LeftValue})&quot;</div></div></div><div class="member-title"><a name="ToTryOption"></a>ToTryOption()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-ToTryOption__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert the EitherUnsafe to an TryOption </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt; <span class="ident">ToTryOption</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">TryOption</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Some(Right) or None</span></div></div></div><div style="display:none" id="code-ToTryOption__"><div class="section_title">SOURCE</div><div class="code">
            toTryOption&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, L, R&gt;(this)</div></div></div><div class="member-title"><a name="Where"></a>Where(Func&lt;R, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where__Func_R_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filter the EitherUnsafe </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate function</span></div></div><div class="section_title">REMARKS</div><span >This may give unpredictable results for a filtered value.  The EitherUnsafe won&#39;t return true for IsLeft or IsRight.  IsBottom is True if the value is filtered and that should be checked for. </span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><div class="attr">[EditorBrowsable(EditorBrowsableState.Never)]</div><span class="keyword">public</span> <span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt; <span class="ident">Where</span>(<span class="ident">Func</span>&lt;<span class="ident">R</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">EitherUnsafe</span>&lt;<span class="ident">L</span>, <span class="ident">R</span>&gt;</div><div class="normal"><span >If the EitherUnsafe is in the Left state it is returned as-is.   If in the Right state the predicate is applied to the Right value. If the predicate returns True the EitherUnsafe is returned as-is. If the predicate returns False the EitherUnsafe is returned in a &#39;Bottom&#39; state.  IsLeft will return True, but the value  of Left = default(L)</span></div></div></div><div style="display:none" id="code-Where__Func_R_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            filter&lt;MEitherUnsafe&lt;L, R&gt;, EitherUnsafe&lt;L, R&gt;, R&gt;(this, pred)</div></div></div></div></body></html>