<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt/index.htm">LanguageExt</a> \ <span class="nav-bar-link" href="HashSet_A.htm">HashSet&lt;A&gt;</span></div><div class="nav-panel"><h3 >FIELDS</h3><a class="nav-link" href="#Empty">Empty</a><h3 >PROPERTIES</h3><a class="nav-link" href="#Count">Count</a><a class="nav-link" href="#IsEmpty">IsEmpty</a><a class="nav-link" href="#Length">Length</a><a class="nav-link" href="#this">this</a><h3 >METHODS</h3><a class="nav-link" href="#Add">Add(A)</a><a class="nav-link" href="#AddOrUpdate">AddOrUpdate(A)</a><a class="nav-link" href="#AddOrUpdateRange">AddOrUpdateRange(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#AddRange">AddRange(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Append">Append(HashSet&lt;A&gt;)</a><a class="nav-link" href="#AsEnumerable">AsEnumerable()</a><a class="nav-link" href="#Bind&lt;B>">Bind&lt;B&gt;(Func&lt;A, HashSet&lt;B&gt;&gt;)</a><a class="nav-link" href="#Clear">Clear()</a><a class="nav-link" href="#Contains">Contains(A)</a><a class="nav-link" href="#CopyTo">CopyTo(A, int)</a><a class="nav-link" href="#CopyTo">CopyTo(System.Array, int)</a><a class="nav-link" href="#Equals">Equals(HashSet&lt;A&gt;)</a><a class="nav-link" href="#Equals">Equals(object)</a><a class="nav-link" href="#Except">Except(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Filter">Filter(Func&lt;A, bool&gt;)</a><a class="nav-link" href="#Find">Find(A)</a><a class="nav-link" href="#Find&lt;R>">Find&lt;R&gt;(A, Func&lt;A, R&gt;, Func&lt;R&gt;)</a><a class="nav-link" href="#FindSeq">FindSeq(A)</a><a class="nav-link" href="#GetEnumerator">GetEnumerator()</a><a class="nav-link" href="#GetHashCode">GetHashCode()</a><a class="nav-link" href="#Intersect">Intersect(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#IsProperSubsetOf">IsProperSubsetOf(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#IsProperSupersetOf">IsProperSupersetOf(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#IsSubsetOf">IsSubsetOf(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#IsSupersetOf">IsSupersetOf(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Map&lt;R>">Map&lt;R&gt;(Func&lt;A, R&gt;)</a><a class="nav-link" href="#Overlaps">Overlaps(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Remove">Remove(A)</a><a class="nav-link" href="#RemoveRange">RemoveRange(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Select&lt;R>">Select&lt;R&gt;(Func&lt;A, R&gt;)</a><a class="nav-link" href="#SelectMany&lt;B, C>">SelectMany&lt;B, C&gt;(Func&lt;A, HashSet&lt;B&gt;&gt;, Func&lt;A, B, C&gt;)</a><a class="nav-link" href="#SetEquals">SetEquals(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#SetItem">SetItem(A)</a><a class="nav-link" href="#SetItems">SetItems(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Subtract">Subtract(HashSet&lt;A&gt;)</a><a class="nav-link" href="#SymmetricExcept">SymmetricExcept(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#TryAdd">TryAdd(A)</a><a class="nav-link" href="#TryAddRange">TryAddRange(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#TrySetItem">TrySetItem(A)</a><a class="nav-link" href="#TrySetItems">TrySetItems(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Union">Union(IEnumerable&lt;A&gt;)</a><a class="nav-link" href="#Where">Where(Func&lt;A, bool&gt;)</a></div><div class="content-panel"><h1 >HashSet&lt;A&gt; Struct</h1><p ><span >Unsorted immutable hash-set </span></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">struct</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; :
<span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</span>,<br/><span Method="LanguageExt.Lst`1[BestForm.DomElement] &lt;text>b__0(System.Object)" Target="BestForm.Html+&lt;>c__DisplayClass4_0">    <span class="ident">IEquatable</span>&lt;<span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;&gt;</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt</div></div><h2 >Fields</h2><div class="member-title"><a name="Empty"></a>Empty</div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Empty</span></div></div></div><h2 >Properties</h2><div class="member-title"><a name="Count"></a>Count</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the set </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Count</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="IsEmpty"></a>IsEmpty</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Is the map empty </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsEmpty</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="Length"></a>Length</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the set </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">int</span> <span class="ident">Length</span>  { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div></div><div class="member-title"><a name="this"></a>this</div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >&#39;this&#39; accessor </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">A</span> <span class="keyword">this</span> [<span class="ident">A</span> key] { <span class="keyword">get</span>; }</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">A</span></div><div class="normal"><span >Optional value</span></div></div></div></div><h2 >Methods</h2><div class="member-title"><a name="Add"></a>Add(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Add__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Add an item to the set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Add</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New set with the item added</span></div></div></div><div style="display:none" id="code-Add__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Add(key))</div></div></div><div class="member-title"><a name="AddOrUpdate"></a>AddOrUpdate(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdate__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Add an item to the set.  If an item already exists then replace it. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AddOrUpdate</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New set with the item maybe added</span></div></div></div><div style="display:none" id="code-AddOrUpdate__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.AddOrUpdate(key))</div></div></div><div class="member-title"><a name="AddOrUpdateRange"></a>AddOrUpdateRange(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddOrUpdateRange__IEnumerable_A_range_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically adds a range of items to the set.  If any items already exist, they&#39;re ignored. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">range</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Range of keys to add</span></div></div><div class="section_title">REMARKS</div><span >Null is not allowed for a Key</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AddOrUpdateRange</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; range)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items added</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentException</div><div class="normal"><span >Throws ArgumentException if any of the keys already exist</span></div></div><div class="code"><div class="member-title">ArgumentNullException</div><div class="normal"><span >Throws ArgumentNullException if any of the keys are null</span></div></div></div><div style="display:none" id="code-AddOrUpdateRange__IEnumerable_A_range_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.AddOrUpdateRange(range))</div></div></div><div class="member-title"><a name="AddRange"></a>AddRange(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AddRange__IEnumerable_A_range_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically adds a range of items to the set. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">range</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Range of keys to add</span></div></div><div class="section_title">REMARKS</div><span >Null is not allowed for a Key</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AddRange</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; range)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items added</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentException</div><div class="normal"><span >Throws ArgumentException if any of the keys already exist</span></div></div><div class="code"><div class="member-title">ArgumentNullException</div><div class="normal"><span >Throws ArgumentNullException if any of the keys are null</span></div></div></div><div style="display:none" id="code-AddRange__IEnumerable_A_range_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.AddRange(range))</div></div></div><div class="member-title"><a name="Append"></a>Append(HashSet&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Append__HashSet_A_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Append</span>(<span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Append__HashSet_A_rhs_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Append(rhs.Value))</div></div></div><div class="member-title"><a name="AsEnumerable"></a>AsEnumerable()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-AsEnumerable__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; <span class="ident">AsEnumerable</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-AsEnumerable__"><div class="section_title">SOURCE</div><div class="code">
            this</div></div></div><div class="member-title"><a name="Bind&lt;B>"></a>Bind&lt;B&gt;(Func&lt;A, HashSet&lt;B&gt;&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Bind_B_Func_A_HashSet&lt;B>_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt; <span class="ident">Bind</span>&lt;<span class="ident">B</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt;&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Bind_B_Func_A_HashSet&lt;B>_f_"><div class="section_title">SOURCE</div><div class="code">
            var self = this;

            IEnumerable&lt;B&gt; Yield()
            {
                foreach (var x in self.AsEnumerable())
                {
                    foreach (var y in f(x))
                    {
                        yield return y;
                    }
                }
            }
            return new HashSet&lt;B&gt;(Yield(), true);
        </div></div></div><div class="member-title"><a name="Clear"></a>Clear()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Clear__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Clears all items from the set </span></p><div class="section_title">REMARKS</div><span >Functionally equivalent to calling HSet.empty as the original structure is untouched</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Clear</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Empty HSet</span></div></div></div><div style="display:none" id="code-Clear__"><div class="section_title">SOURCE</div><div class="code">
            Empty</div></div></div><div class="member-title"><a name="Contains"></a>Contains(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Contains__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Checks for existence of a key in the set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key to check</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Contains</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if an item with the key supplied is in the set</span></div></div></div><div style="display:none" id="code-Contains__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Value.Contains(key)</div></div></div><div class="member-title"><a name="CopyTo"></a>CopyTo(A, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CopyTo__A__array__int__index_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Copy the items from the set into the specified array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">array</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Array to copy to</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div><div class="arg-desc"><span >Index into the array to start</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">void</span> <span class="ident">CopyTo</span>(<span class="ident">A</span> array, <span class="keyword">int</span> index)</div></div><div style="display:none" id="code-CopyTo__A__array__int__index_"><div class="section_title">SOURCE</div><div class="code"> 
            Value.CopyTo(array, index)</div></div></div><div class="member-title"><a name="CopyTo"></a>CopyTo(System.Array, int)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-CopyTo__System_.Array__array__int__index_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Copy the items from the set into the specified array </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">array</div><div class="arg-type"><span class="ident">System</span>.<span class="ident">Array</span></div></div><div class="arg-desc"><span >Array to copy to</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">index</div><div class="arg-type"><span class="keyword">int</span></div></div><div class="arg-desc"><span >Index into the array to start</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">void</span> <span class="ident">CopyTo</span>(<span class="ident">System</span>.<span class="ident">Array</span> array, <span class="keyword">int</span> index)</div></div><div style="display:none" id="code-CopyTo__System_.Array__array__int__index_"><div class="section_title">SOURCE</div><div class="code">
            Value.CopyTo(array, index)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(HashSet&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__HashSet_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__HashSet_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Equals(other.Value)</div></div></div><div class="member-title"><a name="Equals"></a>Equals(object)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Equals__object__obj_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">obj</div><div class="arg-type"><span class="keyword">object</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="ident">Equals</span>(<span class="keyword">object</span> obj)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-Equals__object__obj_"><div class="section_title">SOURCE</div><div class="code">
            !ReferenceEquals(obj, null) &amp;&amp; obj is HashSet&lt;A&gt; &amp;&amp; Equals(this, (HashSet&lt;A&gt;)obj)</div></div></div><div class="member-title"><a name="Except"></a>Except(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Except__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns this - other.  Only the items in this that are not in  other will be returned. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Except</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Except__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            var self = this;
            foreach (var item in other)
            {
                if (self.Contains(item))
                {
                    self = self.Remove(item);
                }
            }
            return self;
        </div></div></div><div class="member-title"><a name="Filter"></a>Filter(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Filter__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filters items from the set using the predicate.  If the predicate returns True for any item then it remains in the set, otherwise it&#39;s dropped. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Filter</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Filtered enumerable</span></div></div></div><div style="display:none" id="code-Filter__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Filter(pred))</div></div></div><div class="member-title"><a name="Find"></a>Find(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Retrieve a value from the set by key </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key to find</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">Option</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Find</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Option</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Found value</span></div></div></div><div style="display:none" id="code-Find__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Value.Find(key)</div></div></div><div class="member-title"><a name="Find&lt;R>"></a>Find&lt;R&gt;(A, Func&lt;A, R&gt;, Func&lt;R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Find_R_A__key__Func_A_R_Some__Func_R_None_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Retrieve a value from the set by key and pattern match the result. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key to find</span></div></div><div class="arg"><div class="arg-header"><div class="arg-name">Some</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">None</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">R</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">R</span> <span class="ident">Find</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">A</span> key, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt; Some, <span class="ident">Func</span>&lt;<span class="ident">R</span>&gt; None)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">R</span></div><div class="normal"><span >Found value</span></div></div></div><div style="display:none" id="code-Find_R_A__key__Func_A_R_Some__Func_R_None_"><div class="section_title">SOURCE</div><div class="code">
            Value.Find(key, Some, None)</div></div></div><div class="member-title"><a name="FindSeq"></a>FindSeq(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FindSeq__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Retrieve a value from the set by key as an enumerable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key to find</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; <span class="ident">FindSeq</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Found value</span></div></div></div><div style="display:none" id="code-FindSeq__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Value.FindSeq(key)</div></div></div><div class="member-title"><a name="GetEnumerator"></a>GetEnumerator()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetEnumerator__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >GetEnumerator - IEnumerable interface </span></p></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="ident">IEnumerator</span>&lt;<span class="ident">A</span>&gt; <span class="ident">GetEnumerator</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">IEnumerator</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-GetEnumerator__"><div class="section_title">SOURCE</div><div class="code">
            Value.GetEnumerator()</div></div></div><div class="member-title"><a name="GetHashCode"></a>GetHashCode()<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-GetHashCode__&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">int</span> <span class="ident">GetHashCode</span>()</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">int</span></div><div class="normal"></div></div></div><div style="display:none" id="code-GetHashCode__"><div class="section_title">SOURCE</div><div class="code">
            Value.GetHashCode()</div></div></div><div class="member-title"><a name="Intersect"></a>Intersect(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Intersect__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns the elements that are in both this and other </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Intersect</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Intersect__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            var res = new List&lt;A&gt;();
            foreach (var item in other)
            {
                if (Contains(item)) res.Add(item);
            }
            return new HashSet&lt;A&gt;(res);
        </div></div></div><div class="member-title"><a name="IsProperSubsetOf"></a>IsProperSubsetOf(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsProperSubsetOf__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns True if &#39;other&#39; is a proper subset of this set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsProperSubsetOf</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if &#39;other&#39; is a proper subset of this set</span></div></div></div><div style="display:none" id="code-IsProperSubsetOf__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.IsProperSubsetOf(other)</div></div></div><div class="member-title"><a name="IsProperSupersetOf"></a>IsProperSupersetOf(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsProperSupersetOf__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns True if &#39;other&#39; is a proper superset of this set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsProperSupersetOf</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if &#39;other&#39; is a proper superset of this set</span></div></div></div><div style="display:none" id="code-IsProperSupersetOf__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.IsProperSupersetOf(other)</div></div></div><div class="member-title"><a name="IsSubsetOf"></a>IsSubsetOf(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsSubsetOf__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns True if &#39;other&#39; is a superset of this set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSubsetOf</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if &#39;other&#39; is a superset of this set</span></div></div></div><div style="display:none" id="code-IsSubsetOf__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.IsSubsetOf(other)</div></div></div><div class="member-title"><a name="IsSupersetOf"></a>IsSupersetOf(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-IsSupersetOf__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns True if &#39;other&#39; is a superset of this set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">IsSupersetOf</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if &#39;other&#39; is a superset of this set</span></div></div></div><div style="display:none" id="code-IsSupersetOf__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.IsSupersetOf(other)</div></div></div><div class="member-title"><a name="Map&lt;R>"></a>Map&lt;R&gt;(Func&lt;A, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Map_R_Func_A_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the values of this set into a new set of values using the mapper function to tranform the source values. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Mapping function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Map</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped enumerable</span></div></div></div><div style="display:none" id="code-Map_R_Func_A_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Map&lt;OrdDefault&lt;R&gt;, R&gt;(mapper))</div></div></div><div class="member-title"><a name="Overlaps"></a>Overlaps(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Overlaps__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Returns True if other overlaps this set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">Overlaps</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"><span >True if other overlaps this set</span></div></div></div><div style="display:none" id="code-Overlaps__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.Overlaps(other)</div></div></div><div class="member-title"><a name="Remove"></a>Remove(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Remove__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically removes an item from the set If the key doesn&#39;t exists, the request is ignored. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Remove</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New map with the item removed</span></div></div></div><div style="display:none" id="code-Remove__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Remove(key))</div></div></div><div class="member-title"><a name="RemoveRange"></a>RemoveRange(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-RemoveRange__IEnumerable_A_keys_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically removes a list of keys from the set </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">keys</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Keys to remove</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">RemoveRange</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; keys)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items removed</span></div></div></div><div style="display:none" id="code-RemoveRange__IEnumerable_A_keys_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.RemoveRange(keys))</div></div></div><div class="member-title"><a name="Select&lt;R>"></a>Select&lt;R&gt;(Func&lt;A, R&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Select_R_Func_A_R_mapper_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Maps the values of this set into a new set of values using the mapper function to tranform the source values. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">mapper</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt;</div></div><div class="arg-desc"><span >Mapping function</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">R</span>&gt; <span class="ident">Select</span>&lt;<span class="ident">R</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">R</span>&gt; mapper)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">R</span>&gt;</div><div class="normal"><span >Mapped enumerable</span></div></div></div><div style="display:none" id="code-Select_R_Func_A_R_mapper_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Map&lt;OrdDefault&lt;R&gt;, R&gt;(mapper))</div></div></div><div class="member-title"><a name="SelectMany&lt;B, C>"></a>SelectMany&lt;B, C&gt;(Func&lt;A, HashSet&lt;B&gt;&gt;, Func&lt;A, B, C&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SelectMany_B_C_Func_A_HashSet&lt;B>_bind__Func_A_B_C_project_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">bind</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt;&gt;</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">project</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">C</span>&gt; <span class="ident">SelectMany</span>&lt;<span class="ident">B</span>, <span class="ident">C</span>&gt;(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">HashSet</span>&lt;<span class="ident">B</span>&gt;&gt; bind, <span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="ident">B</span>, <span class="ident">C</span>&gt; project)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">C</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SelectMany_B_C_Func_A_HashSet&lt;B>_bind__Func_A_B_C_project_"><div class="section_title">SOURCE</div><div class="code">
            var self = this;

            IEnumerable&lt;C&gt; Yield()
            {
                foreach (var x in self.AsEnumerable())
                {
                    foreach (var y in bind(x))
                    {
                        yield return project(x, y);
                    }
                }
            }
            return new HashSet&lt;C&gt;(Yield(), true);
        </div></div></div><div class="member-title"><a name="SetEquals"></a>SetEquals(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetEquals__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="ident">SetEquals</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="keyword">bool</span></div><div class="normal"></div></div></div><div style="display:none" id="code-SetEquals__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            Value.SetEquals(other)</div></div></div><div class="member-title"><a name="SetItem"></a>SetItem(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItem__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically updates an existing item </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key</span></div></div><div class="section_title">REMARKS</div><span >Null is not allowed for a key</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">SetItem</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the item added</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentNullException</div><div class="normal"><span >Throws ArgumentNullException if the key is null</span></div></div></div><div style="display:none" id="code-SetItem__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.SetItem(key))</div></div></div><div class="member-title"><a name="SetItems"></a>SetItems(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SetItems__IEnumerable_A_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically sets a series of items </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Items to set</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">SetItems</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items set</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentException</div><div class="normal"><span >Throws ArgumentException if any of the keys aren&#39;t in the map</span></div></div></div><div style="display:none" id="code-SetItems__IEnumerable_A_items_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.SetItems(items))</div></div></div><div class="member-title"><a name="Subtract"></a>Subtract(HashSet&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Subtract__HashSet_A_rhs_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">rhs</div><div class="arg-type"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Subtract</span>(<span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; rhs)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-Subtract__HashSet_A_rhs_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Subtract(rhs.Value))</div></div></div><div class="member-title"><a name="SymmetricExcept"></a>SymmetricExcept(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-SymmetricExcept__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Only items that are in one set or the other will be returned. If an item is in both, it is dropped. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">SymmetricExcept</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-SymmetricExcept__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            var rhs = new Set&lt;A&gt;(other);
            var res = new List&lt;A&gt;();

            foreach (var item in this)
            {
                if (!rhs.Contains(item))
                {
                    res.Add(item);
                }
            }

            foreach (var item in other)
            {
                if (!Contains(item))
                {
                    res.Add(item);
                }
            }

            return new HashSet&lt;A&gt;(res);
        </div></div></div><div class="member-title"><a name="TryAdd"></a>TryAdd(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TryAdd__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Attempt to add an item to the set.  If an item already exists then return the Set as-is. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TryAdd</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New set with the item maybe added</span></div></div></div><div style="display:none" id="code-TryAdd__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.TryAdd(key))</div></div></div><div class="member-title"><a name="TryAddRange"></a>TryAddRange(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TryAddRange__IEnumerable_A_range_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically adds a range of items to the set.  If an item already exists, it&#39;s ignored. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">range</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Range of keys to add</span></div></div><div class="section_title">REMARKS</div><span >Null is not allowed for a Key</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TryAddRange</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; range)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items added</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentException</div><div class="normal"><span >Throws ArgumentException if any of the keys already exist</span></div></div><div class="code"><div class="member-title">ArgumentNullException</div><div class="normal"><span >Throws ArgumentNullException if any of the keys are null</span></div></div></div><div style="display:none" id="code-TryAddRange__IEnumerable_A_range_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.TryAddRange(range))</div></div></div><div class="member-title"><a name="TrySetItem"></a>TrySetItem(A)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItem__A__key_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically updates an existing item, unless it doesn&#39;t exist, in which case  it is ignored </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">key</div><div class="arg-type"><span class="ident">A</span></div></div><div class="arg-desc"><span >Key</span></div></div><div class="section_title">REMARKS</div><span >Null is not allowed for a key</span></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TrySetItem</span>(<span class="ident">A</span> key)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the item added</span></div></div><div class="section_title">EXCEPTIONS</div><div class="code"><div class="member-title">ArgumentNullException</div><div class="normal"><span >Throws ArgumentNullException if the key is null</span></div></div></div><div style="display:none" id="code-TrySetItem__A__key_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.TrySetItem(key))</div></div></div><div class="member-title"><a name="TrySetItems"></a>TrySetItems(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-TrySetItems__IEnumerable_A_items_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Atomically sets a series of items.  If any of the items don&#39;t exist then they&#39;re silently ignored. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">items</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Items to set</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">TrySetItems</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; items)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >New HSet with the items set</span></div></div></div><div style="display:none" id="code-TrySetItems__IEnumerable_A_items_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.TrySetItems(items))</div></div></div><div class="member-title"><a name="Union"></a>Union(IEnumerable&lt;A&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Union__IEnumerable_A_other_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Finds the union of two sets and produces a new set with  the results </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">other</div><div class="arg-type"><span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt;</div></div><div class="arg-desc"><span >Other set to union with</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Union</span>(<span class="ident">IEnumerable</span>&lt;<span class="ident">A</span>&gt; other)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >A set which contains all items from both sets</span></div></div></div><div style="display:none" id="code-Union__IEnumerable_A_other_"><div class="section_title">SOURCE</div><div class="code">
            var self = this;
            foreach (var item in other)
            {
                self = self.TryAdd(item);
            }
            return self;
        </div></div></div><div class="member-title"><a name="Where"></a>Where(Func&lt;A, bool&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Where__Func_A_bool_pred_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Filters items from the set using the predicate.  If the predicate returns True for any item then it remains in the set, otherwise it&#39;s dropped. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">pred</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt;</div></div><div class="arg-desc"><span >Predicate</span></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">public</span> <span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt; <span class="ident">Where</span>(<span class="ident">Func</span>&lt;<span class="ident">A</span>, <span class="keyword">bool</span>&gt; pred)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">HashSet</span>&lt;<span class="ident">A</span>&gt;</div><div class="normal"><span >Filtered enumerable</span></div></div></div><div style="display:none" id="code-Where__Func_A_bool_pred_"><div class="section_title">SOURCE</div><div class="code">
            Wrap(Value.Filter(pred))</div></div></div></div></body></html>