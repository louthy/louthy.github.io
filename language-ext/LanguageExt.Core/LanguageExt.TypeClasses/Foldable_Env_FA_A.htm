<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.TypeClasses/index.htm">LanguageExt.TypeClasses</a> \ <span class="nav-bar-link" href="Foldable_Env_FA_A.htm">Foldable&lt;Env, FA, A&gt;</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#Count">Count(FA)</a><a class="nav-link" href="#Fold&lt;S>">Fold&lt;S&gt;(FA, S, Func&lt;S, A, S&gt;)</a><a class="nav-link" href="#FoldBack&lt;S>">FoldBack&lt;S&gt;(FA, S, Func&lt;S, A, S&gt;)</a></div><div class="content-panel"><h1 >Foldable&lt;Env, FA, A&gt; Interface</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Typeclass]</div><span class="keyword">public</span> <span class="keyword">interface</span> <span class="ident">Foldable</span>&lt;<span class="ident">Env</span>, <span class="ident">FA</span>, <span class="ident">A</span>&gt;</div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.TypeClasses</div></div><h2 >Methods</h2><div class="member-title"><a name="Count"></a>Count(FA)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Count__FA__fa_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Number of items in the foldable </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">FA</span></div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">private</span> <span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt; <span class="ident">Count</span>(<span class="ident">FA</span> fa)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="keyword">int</span>&gt;</div><div class="normal"><span >Total number of items </span></div></div></div><div style="display:none" id="code-Count__FA__fa_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="Fold&lt;S>"></a>Fold&lt;S&gt;(FA, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-Fold_S_FA__fa__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >In the case of lists, &#39;Fold&#39;, when applied to a binary operator, a starting value(typically the left-identity of the operator), and a list, reduces the list using the binary operator, from left to right:<br/><br/> Fold([x1, x2, ..., xn] == x1 `f` (x2 `f` ... (xn `f` z)...)<br/><br/> Note that, since the head of the resulting expression is produced by an application of the operator to the first element of the list, &#39;Fold&#39; can produce a terminating expression from an infinite list. </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">FA</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Folder function, applied for each item in fa</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">private</span> <span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt; <span class="ident">Fold</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">FA</span> fa, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt;</div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-Fold_S_FA__fa__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div><div class="member-title"><a name="FoldBack&lt;S>"></a>FoldBack&lt;S&gt;(FA, S, Func&lt;S, A, S&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-FoldBack_S_FA__fa__S__state__Func_S_A_S_f_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >In the case of lists, &#39;FoldBack&#39;, when applied to a binary operator, a starting value(typically the left-identity of the operator), and a list, reduces the list using the binary operator, from left to right:<br/><br/> FoldBack( [x1, x2, ..., xn]) == (...((z `f` x1) `f` x2) `f`...) `f` xn<br/><br/> Note that to produce the outermost application of the operator the entire input list must be traversed.  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">fa</div><div class="arg-type"><span class="ident">FA</span></div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">state</div><div class="arg-type"><span class="ident">S</span></div></div><div class="arg-desc">Initial state</div></div><div class="arg"><div class="arg-header"><div class="arg-name">f</div><div class="arg-type"><span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt;</div></div><div class="arg-desc">Folder function, applied for each item in fa</div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><div class="attr">[Pure]</div><span class="keyword">private</span> <span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt; <span class="ident">FoldBack</span>&lt;<span class="ident">S</span>&gt;(<span class="ident">FA</span> fa, <span class="ident">S</span> state, <span class="ident">Func</span>&lt;<span class="ident">S</span>, <span class="ident">A</span>, <span class="ident">S</span>&gt; f)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Func</span>&lt;<span class="ident">Env</span>, <span class="ident">S</span>&gt;</div><div class="normal"><span >The aggregate state</span></div></div></div><div style="display:none" id="code-FoldBack_S_FA__fa__S__state__Func_S_A_S_f_"><div class="section_title">SOURCE</div><div class="code"></div></div></div></div></body></html>