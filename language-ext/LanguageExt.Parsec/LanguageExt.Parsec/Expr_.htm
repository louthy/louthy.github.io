<html ><head ><link rel="stylesheet" type="text/css" href="doc.css"></link></head><body ><div class="nav-bar"><a class="nav-bar-link" href="../index.htm">API Reference</a> \ <a class="nav-bar-link" href="../LanguageExt.Parsec/index.htm">LanguageExt.Parsec</a> \ <span class="nav-bar-link" href="Expr_.htm">Expr</span></div><div class="nav-panel"><h3 >METHODS</h3><a class="nav-link" href="#buildExpressionParser&lt;T>">buildExpressionParser&lt;T&gt;(Operator&lt;T&gt;[], Parser&lt;T&gt;)</a></div><div class="content-panel"><h1 >Expr Class</h1><p ></p><div class="left"><div class="section"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="ident">Expr</span></div></div></div><div class="right"><div class="section"><div class="section_title">NAMESPACE</div>LanguageExt.Parsec</div></div><h2 >Methods</h2><div class="member-title"><a name="buildExpressionParser&lt;T>"></a>buildExpressionParser&lt;T&gt;(Operator&lt;T&gt;[], Parser&lt;T&gt;)<div class="source-link-cont"><a class="source-link" href="#" onclick="document.getElementById(&#39;code-buildExpressionParser_T_Operator_T_operators__Parser_T_simpleExpr_&#39;).style.display=&#39;&#39;;">SOURCE</a></div></div><div class="section"><div class="left"><div class="section_title">SUMMARY</div><p ><span >Convert an OperatorTable and basic term parser into a fully fledged   expression parser<br/><br/>  buildExpressionParser(table,term) builds an expression parser for  terms term with operators from table, taking the associativity  and precedence specified in table into account.  Prefix and postfix  operators of the same precedence can only occur once (i.e. --2 is  not allowed if &#39;-&#39; is prefix negate).  Prefix and postfix operators  of the same precedence associate to the left  (i.e. if ++ is  postfix increment, than -2++ equals -1, not -3).<br/><br/>  The buildExpressionParser function takes care of all the complexity  involved in building expression parser.<br/><br/>  See remarks.  </span></p><div class="section_title">PARAMETERS</div><div class="arg"><div class="arg-header"><div class="arg-name">operators</div><div class="arg-type"><span class="ident">Operator</span>&lt;<span class="ident">T</span>&gt;[]</div></div></div><div class="arg"><div class="arg-header"><div class="arg-name">simpleExpr</div><div class="arg-type"><span class="ident">Parser</span>&lt;<span class="ident">T</span>&gt;</div></div></div></div><div class="right"><div class="section_title">DECLARATION</div><div class="code"><span class="keyword">public</span> <span class="keyword">static</span> <span class="ident">Parser</span>&lt;<span class="ident">T</span>&gt; <span class="ident">buildExpressionParser</span>&lt;<span class="ident">T</span>&gt;(<span class="ident">Operator</span>&lt;<span class="ident">T</span>&gt;[] operators, <span class="ident">Parser</span>&lt;<span class="ident">T</span>&gt; simpleExpr)</div><div class="section_title">RETURNS</div><div class="code"><div class="member-title"><span class="ident">Parser</span>&lt;<span class="ident">T</span>&gt;</div><div class="normal"></div></div></div><div style="display:none" id="code-buildExpressionParser_T_Operator_T_operators__Parser_T_simpleExpr_"><div class="section_title">SOURCE</div><div class="code">
            return operators.FoldBack(
                simpleExpr, 
                (term, ops) =&gt; makeParser(ops, term)
                );
        </div></div></div></div></body></html>